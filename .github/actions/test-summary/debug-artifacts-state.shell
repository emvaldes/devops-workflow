#!/usr/bin/env bash

set -e  # Exit on error
set -o pipefail  # Fail if any piped command fails

echo "üîç Debugging Artifacts Directory..."

# Check current directory
echo "üìÇ Current Working Directory: $(pwd)"

# Print all available environment variables related to artifacts
echo "üîç Environment Variables:"
env | grep -i 'artifact' || echo "No artifact-related variables found."

# Locate any artifacts directories
echo "üîç Searching for artifacts..."
ARTIFACT_DIRS=$(find "$GITHUB_WORKSPACE" -type d -name "artifacts" 2>/dev/null || echo "No artifacts directory found.")

if [[ -z "$ARTIFACT_DIRS" || "$ARTIFACT_DIRS" == "No artifacts directory found." ]]; then
    echo "‚ùå ERROR: No artifacts directory detected!"
else
    echo "‚úÖ Found artifacts directory at: $ARTIFACT_DIRS"
fi

# Find all XML files (expected test results)
echo "üîç Searching for test result files..."
TEST_RESULTS=$(find "$GITHUB_WORKSPACE" -name "*.xml" 2>/dev/null || echo "No test result files found.")

if [[ -z "$TEST_RESULTS" || "$TEST_RESULTS" == "No test result files found." ]]; then
    echo "‚ùå ERROR: No test results found!"
else
    echo "‚úÖ Found test result files:"
    echo "$TEST_RESULTS"
fi

# List all files in the detected artifacts directory (if found)
if [[ -n "$ARTIFACT_DIRS" && "$ARTIFACT_DIRS" != "No artifacts directory found." ]]; then
    echo "üìÇ Listing contents of artifacts directory..."
    ls -R "$ARTIFACT_DIRS"
fi
