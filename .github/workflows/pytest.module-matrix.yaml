---
## File: pytest.module-matrix.yaml

name: Parallel PyTest - Module (Matrix)
run-name: ${{ github.actor }} -> PyTest Module (Matrix)

on:

  workflow_call:
    inputs:

      pytests_dir:
        required: true
        type: string
        default: false

      packages_dir:
        required: true
        type: string
        default: false

      github_action:
        required: false
        type: string
        default: ".github/actions/test-summary"

  # push:
  #   branches:
  #     - master
  #
  # pull_request:
  #   branches:
  #     - master

env:

  GITHUB_ACTION: "${{ github.workspace }}/.github/actions/test-summary"
  ARTIFACTS_DIR: "${{ github.workspace }}/artifacts"

jobs:

  pytest-params:
    runs-on: ubuntu-latest
    steps:
      - name: Check PyTest Modules
        run: |
          if [[ -z "${{ inputs.pytests_dir }}" ]]; then
            echo -en "Error: inputs.pytests_dir must be provided. " ;
            echo -e  "The workflow cannot proceed without a valid target." ;
            exit 1 ;
          fi ;

  packages-params:
    runs-on: ubuntu-latest
    steps:
      - name: Check Packages Modules
        run: |
          if [[ -z "${{ inputs.packages_dir }}" ]]; then
            echo -en "Error: inputs.packages_dir must be provided. " ;
            echo -e  "The workflow cannot proceed without a valid target." ;
            exit 1 ;
          fi ;

  install-packages:
      uses: ./.github/workflows/module.install-packages.yaml
      with:
        PACKAGES_DIR: ${{ inputs.packages_dir }}

  extract-pytests:
      uses: ./.github/workflows/module.extract-pytests.yaml
      with:
        PYTESTS_DIR: ${{ inputs.pytests_dir }}
        GITHUB_ACTION: "${{ inputs.github_action }}"

  running-pytests:
      needs: [install-packages, extract-pytests]
      uses: ./.github/workflows/module.running-pytests.yaml
      with:
        test_functions: ${{ needs.extract-pytests.outputs.test_functions }}

  aggregate-test-results:
    needs: running-pytests
    runs-on: ubuntu-latest
    steps:

      - name: Install System Packages
        run: |
          sudo apt-get update --yes ;
          sudo apt-get install tree jq --yes ;

      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Ensure Debug Script is Executable
        run: |
          chmod +x ${{ env.GITHUB_ACTION }}/debug-artifacts-state.shell ;

      - name: Debug - Locate Artifacts
        run: |
          ${{ env.GITHUB_ACTION }}/debug-artifacts-state.shell ;

      - name: Download All Test Artifacts
        uses: actions/download-artifact@v4
        with:
          path: ${{ env.ARTIFACTS_DIR }}/

      - name: Verify Downloaded Artifacts
        run: |
          echo -e "Listing downloaded artifacts..." ;
          tree -FCla --prune -I .git ./artifacts 2>/dev/null ;

      - name: Aggregate Pytest Results
        run: |
          ${{ env.GITHUB_ACTION }}/aggregate-test-results.shell ;

      - name: Listing Entire Project
        run: |
          tree -FCla --prune -I .git ${{ github.workspace }} ;
          # cat ${{ env.ARTIFACTS_DIR }}/test_functions.log ;
          # cat ${{ env.ARTIFACTS_DIR }}/test_results.json ;
