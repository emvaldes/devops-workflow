---
## File: .github/workflows/pytest.module-matrix.yaml

name: PyTest - Package Module Matrix
run-name: ${{ github.actor }} -> Package Module Matrix

on:

  workflow_call:

    inputs:

      params:
        required: false
        type: string

    outputs:

      aggregated_results:
        description: "Providing PyTest Results Aggregation status"
        value: ${{ jobs.pytests-completed.outputs.aggregated_results }}

jobs:

  workflow:
    uses: ./.github/workflows/module.validate-parameters.yaml
    with:
      workflow_inputs: >-
        {
          "workflow": "pytest.module-matrix",
          "params": {
            "params": {
              "id": "Workflow Parameters",
              "value": ${{ inputs.params }}
            }
          }
        }

  parameters:
    needs: workflow
    runs-on: ubuntu-latest
    steps:

      - name: PyTest - Module-Matrix (Parameters)
        id: workflow_parameters
        run: |

          echo "PyTests Location: ${{ fromJson(
            needs.workflow.outputs.validated ).params.pytests_location }}" ;
          echo "Package Location: ${{ fromJson(
            needs.workflow.outputs.validated ).params.package_location }}" ;
          echo "GitHub Scripts: ${{ fromJson(
            needs.workflow.outputs.validated ).params.github_scripts }}" ;

  extracting-pytests:
    needs: [ workflow, parameters ]
    uses: ./.github/workflows/module.extract-pytests.yaml
    with:
      params: ${{ needs.workflow.outputs.validated }}

  running-pytests:
    needs: [ workflow, parameters, extracting-pytests ]
    uses: ./.github/workflows/module.running-pytests.yaml
    with:
      test_functions: ${{ needs.extracting-pytests.outputs.test_functions }}
      params: ${{ needs.workflow.outputs.validated }}

  aggregating-pytests:
    needs: [ workflow, parameters, running-pytests ]
    uses: ./.github/workflows/module.aggregate-results.yaml
    with:
      params: ${{ needs.workflow.outputs.validated }}

  pytests-completed:
    needs: aggregating-pytests
    runs-on: ubuntu-latest
    outputs:
      aggregated_results: ${{ needs.aggregating-pytests.outputs.aggregated_results }}
    steps:

      - name: Completed - PyTests Workflow
        id: pytests_workflow
        run: |

          echo -e "Completed - PyTests Workflow" ;
