---
## File: pytest.module-matrix.yaml

name: Parallel PyTest - Module (Matrix)
run-name: ${{ github.actor }} -> PyTest Module (Matrix)

on:

  workflow_call:
    inputs:

      pytests_dir:
        required: true
        type: string
        default: false

      packages_dir:
        required: true
        type: string
        default: false

      github_action:
        required: false
        type: string
        default: ".github/actions/test-summary"

      artifacts_dir:
        required: false
        type: string
        default: "artifacts"

# push:
#   branches:
#     - master
#
# pull_request:
#   branches:
#     - master

jobs:

  pytest-params:
    runs-on: ubuntu-latest
    steps:
      - name: Check PyTest Modules
        run: |
          if [[ -z "${{ inputs.pytests_dir }}" ]]; then
            echo -en "Error: inputs.pytests_dir must be provided. " ;
            echo -e  "The workflow cannot proceed without a valid target." ;
            exit 1 ;
          fi ;

  packages-params:
    runs-on: ubuntu-latest
    steps:
      - name: Check Packages Modules
        run: |
          if [[ -z "${{ inputs.packages_dir }}" ]]; then
            echo -en "Error: inputs.packages_dir must be provided. " ;
            echo -e  "The workflow cannot proceed without a valid target." ;
            exit 1 ;
          fi ;

  install-packages:
      uses: ./.github/workflows/module.install-packages.yaml
      with:
        PACKAGES_DIR: ${{ inputs.packages_dir }}

  extract-pytests:
      uses: ./.github/workflows/module.extract-pytests.yaml
      with:
        GITHUB_ACTION: "${{ inputs.github_action }}"

  running-pytests:
      needs: [install-packages, extract-pytests]
      uses: ./.github/workflows/module.running-pytests.yaml
      with:
        test_functions: ${{ needs.extract-pytests.outputs.test_functions }}

  aggregate-test-results:
      needs: running-pytests
      uses: ./.github/workflows/module.aggregate-results.yaml
      with:
        GITHUB_ACTION: "${{ inputs.github_action }}"
        ARTIFACTS_DIR: "${{ inputs.artifacts_dir }}"

execute-module:
  needs: aggregate-test-results
  runs-on: ubuntu-latest
  steps:

    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Restore Cached Dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: pip-${{ matrix.python-version }}-${{ hashFiles('requirements.txt') }}
        restore-keys: pip-${{ matrix.python-version }}-

    - name: Download requirements.txt
      uses: actions/download-artifact@v4
      with:
        name: requirements-${{ matrix.python-version }}
        path: .

    - name: Verify requirements.txt Exists
      run: |
        if [[ ! -f requirements.txt ]]; then
          echo "ERROR: requirements.txt is missing!"
          exit 1
        fi
        echo "requirements.txt found!"
        cat requirements.txt

    - name: Install Python and Dependencies
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Reinstall Dependencies from Cache
      run: |
        python -m pip install --upgrade pip
        python -m pip install -r requirements.txt

    - name: Execute Python Module
      run: |
        echo -e "Executing Python module..."
        python -m "${{ env.packages_dir }}/dependencies"
