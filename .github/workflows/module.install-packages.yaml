---
## File: .github/workflows/module.install-packages.yaml

name: Install Packages/Dependencies
on:

  workflow_call:

    inputs:

      packages:
        required: true
        type: string

jobs:

  workflow:

    uses: ./.github/workflows/module.validate-parameters.yaml
    with:
      workflow_inputs: >-
        {
          "workflow": "module.install-packages",
          "inputs": {
            "packages": {
              "id": "Package Location",
              "value": "${{ inputs.packages }}"
            }
          }
        }

  install-packages-parameters:

    needs: workflow
    runs-on: ubuntu-latest
    steps:

      - name: Module - Install Packages (Parameters)
        id: workflow_parameters
        run: |

          echo -e "Package Location: ${{ fromJson(
            needs.workflow.outputs.validated ).packages }}" ;

  install-packages:

    needs: [ workflow, install-packages-parameters ]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ${{ fromJson(vars.PYTHON_VERSIONS).python }}
        # Default value: { "python": [ "3.9", "3.10", "3.11" ] }
    env:
      packages: ${{ fromJson(
        needs.workflow.outputs.validated ).packages }}
    steps:

      - name: Manage System Update (latest)
        run: |
          sudo apt-get update --yes ;
          # sudo apt-get install tree jq --yes ;

      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Debug PYTHON_VERSIONS
        run: |
          echo -e "PYTHON_VERSIONS: ${{ vars.PYTHON_VERSIONS }}" ;

      - name: Install Python and Dependencies
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Generate requirements.txt from JSON
        run: |

          PACKAGE_PARENT_DIR="$( dirname ${{ env.packages }} )";
          jq -r '.dependencies[] |
            if .version.target then "\(.package)==\(.version.target)"
            else .package end' \
          "${PACKAGE_PARENT_DIR}/requirements.json" > requirements.txt ;
          echo -e "Generated:\nrequirements.txt:" ;
          cat requirements.txt ;

      - name: Cache Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: pip-${{ matrix.python-version }}-${{ hashFiles('requirements.txt') }}
          restore-keys: pip-${{ matrix.python-version }}-

      - name: Install Dependencies
        run: |

          python -m pip install --upgrade pip ;
          python -m pip install -r requirements.txt ;

      - name: Generate Final requirements.txt
        run: |

          pip freeze > final-requirements.txt ;
          echo -e "Generated:\nfinal-requirements.txt: " ;
          cat final-requirements.txt ;

      - name: Upload requirements.txt
        uses: actions/upload-artifact@v4
        with:
          name: requirements-${{ matrix.python-version }}
          path: |
            requirements.txt
            final-requirements.txt
