---
## File: .github/workflows/module.validate-parameters.yaml

name: Validate Parameters
on:

  workflow_call:

    inputs:

      workflow_inputs:
        description: "Workflow's input-parameters (JSON string)."
        required: true
        type: string

    outputs:

      validated:
        description: "Validated JSON parameters"
        value: ${{ jobs.validate-parameters.outputs.validated }}

  # push:
  #   branches:
  #     - master
  #     - functional
  #   paths:
  #     - .github/workflows/**
  #     - .github/actions/**
  #
  #   pull_request:
  #     branches:
  #       - master

jobs:

  validate-parameters:
    runs-on: ubuntu-latest
    outputs:
      validated: ${{ steps.validate_parameters.outputs.validated }}
    steps:

      - name: Checkout Repository
        id: checkout_repository
        uses: actions/checkout@v4

      - name: Validate Input Parameters
        id: validate_parameters
        env:
          github_action: "${{ github.workspace }}/.github/actions/test-summary"
        shell: bash
        run: |

          validated=$(
            ${{ env.github_action }}/validate-parameters.shell \
            --json='${{ inputs.workflow_inputs }}'
          ) ; # echo -e "Validated Parameters:\n${validated}" ;

          ## Ensure the variable is set
          if [[ -z "${validated}" ]]; then
              echo "ðŸš¨ ERROR: validated variable is empty!" ;
              exit 1 ;
          fi ;

          ## Validate JSON and capture errors
          echo "${validated}" | jq . > /dev/null 2>&1 ;
          if [[ $? -ne 0 ]]; then
              echo "ðŸš¨ ERROR: JSON is malformed!" ;
              echo "Raw JSON received:" ;
              echo "${validated}" ;
              exit 1 ;
          fi ;

          ## Convert JSON to a single-line format
          validated_compact=$(echo "${validated}" | jq -c . ) ;

          ## Confirm final JSON format
          echo "âœ… Valid JSON:" ;
          echo "${validated_compact}" | jq . ;

          ## Write to GitHub output
          echo "validated=$validated_compact" >> "$GITHUB_OUTPUT" ;
