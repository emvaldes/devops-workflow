---
## File: .github/workflows/module.validate-parameters.yaml

name: Validate Parameters
on:

  workflow_call:

    inputs:

      workflow_inputs:
        description: "Workflow's input-parameters (JSON string)."
        required: true
        type: string

    outputs:

      validated:
        description: "Validated JSON parameters"
        value: ${{ jobs.validate-parameters.outputs.validated }}

  # push:
  #   branches:
  #     - master
  #     - functional
  #   paths:
  #     - .github/workflows/**
  #     - .github/actions/**
  #
  #   pull_request:
  #     branches:
  #       - master

jobs:

  validate-parameters:
    runs-on: ubuntu-latest
    outputs:
      validated: ${{ steps.validate_parameters.outputs.validated }}
    steps:

      - name: Checkout Repository
        id: checkout_repository
        uses: actions/checkout@v4

      - name: Validate Input Parameters
        id: validate_parameters
        env:
          github_action: "${{ github.workspace }}/.github/actions/test-summary"
        shell: bash
        run: |

          validated_parameters=$(
            ${{ env.github_action }}/validate-input-parameters.shell \
            --json='${{ inputs.workflow_inputs }}'
          ) ;

          ## üîç Debug - Print Exactly What is Stored
          echo "Raw Validated Parameters:"
          echo "$validated_parameters" | cat -A  # Shows hidden characters like \r or \n
          echo "--------------------------------"

          ## üõ† Ensure JSON is Valid BEFORE Processing
          if ! jq -e . <<< "$validated_parameters" &>/dev/null; then
            echo "ERROR: JSON is invalid!"
            exit 1
          fi

          ## ‚úÖ If JSON is Valid, Store Processed Output
          validated="$( jq -c . <<< "$validated_parameters" )"

          ## üîç Print Parsed JSON
          echo "Processed JSON: $validated"

          ## ‚úÖ Save Output to GITHUB_OUTPUT
          echo "validated=$validated" >> "$GITHUB_OUTPUT"

          # echo -e "Validated Parameters:\n${validated_parameters}" ;
          # jq -e . <<< "${validated_parameters}" ;
          # jq -c . <<< "${validated_parameters}" ;
          #
          # if jq -e . <<< "${validated_parameters}" &>/dev/null; then
          #         validated="$( jq -c . <<< "${validated_parameters}" )" ;
          #         echo "validated=$validated" >> "$GITHUB_OUTPUT" ;
          #   else  echo -e "Warning: Invalid JSON Parameters" ;
          # fi;
