---
## File: .github/workflows/module.running-pytests.yaml

name: Running PyTests Test Functions
on:

  workflow_call:

    inputs:

      test_functions:
        required: true
        type: string
        default: ''

jobs:

  workflow-parameters:
    uses: ./.github/workflows/module.validate-parameters.yaml
    with:
      workflow_inputs: |
        {
          "workflow": "module.running-pytests",
          "params": {
            "test_functions": {
              "PyTest Functions": ${{ toJson(fromJson(inputs.test_functions)) }}
            }
          }
        }

  extract-test-files:
    runs-on: ubuntu-latest
    outputs:
      test_files: ${{ steps.extract.outputs.test_files }}
      test_functions_map: ${{ steps.extract.outputs.test_functions_map }}
    steps:
      - name: Extract Test Files and Functions
        id: extract
        run: |
          echo "Extracting test files from inputs..."
          RAW_JSON='${{ inputs.test_functions }}'

          # Extract test files (keys)
          TEST_FILES=$(echo "$RAW_JSON" | jq -c 'keys')
          echo "test_files=$TEST_FILES" >> $GITHUB_OUTPUT

          # Store full test function mapping as a JSON string
          echo "test_functions_map=$RAW_JSON" >> $GITHUB_OUTPUT

  running-pytests:
    needs: extract-test-files
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ${{ fromJson(vars.PYTHON_VERSIONS).python }}
        test_file: ${{ fromJson(needs.extract-test-files.outputs.test_files) }}
    steps:

      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Python and Dependencies
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Restore Cached Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: pip-${{ matrix.python-version }}-${{ matrix.test_file }}-${{ hashFiles('requirements.txt') }}
          restore-keys: pip-${{ matrix.python-version }}-${{ matrix.test_file }}-

      - name: Download requirements.txt
        uses: actions/download-artifact@v4
        with:
          name: requirements-${{ matrix.python-version }}
          path: .

      - name: Verify requirements.txt Exists
        run: |
          if [[ ! -f requirements.txt ]]; then
            echo -e "ERROR: requirements.txt is missing!" ;
            exit 1 ;
          fi ;
          echo -e "requirements.txt found!" ;
          cat requirements.txt ;

      - name: Reinstall Dependencies from Cache
        run: |
          python -m pip install --upgrade pip ;
          python -m pip install -r requirements.txt ;

      - name: Extract Test Functions for File
        id: extract_functions
        run: |
          FILE="${{ matrix.test_file }}"
          RAW_JSON='${{ needs.extract-test-files.outputs.test_functions_map }}'
          TEST_FUNCTIONS=$(echo "$RAW_JSON" | jq -r --arg FILE "$FILE" '.[$FILE][]')
          echo "test_functions=$TEST_FUNCTIONS" >> $GITHUB_ENV

      - name: Run Pytest Functions in Parallel
        run: |
          set -x
          FILE="${{ matrix.test_file }}"
          echo "$test_functions" | xargs -I {} -P 4 pytest -v --junitxml=pytest-results-{}.xml "$FILE::{}"

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        with:
          name: pytest-results-${{ matrix.python-version }}-${{ matrix.test_file }}
          path: pytest-results-*.xml

      - name: Debug - List Uploaded Artifacts
        run: |
          echo -e "Listing uploaded artifacts..." ;
          find $GITHUB_WORKSPACE -type f -name "*.xml" || echo -e "No test result files found." ;
          echo -e "Checking artifact storage location..." ;
