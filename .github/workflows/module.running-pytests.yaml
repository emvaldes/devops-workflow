---
## File: .github/workflows/module.running-pytests.yaml

name: Running PyTests Test Functions
on:

  workflow_call:

    inputs:

      test_functions:
        required: true
        type: string
        default: ''

jobs:

  workflow-parameters:
    uses: ./.github/workflows/module.validate-parameters.yaml
    with:
      workflow_inputs: |
        {
          "workflow": "module.running-pytests",
          "params": {
            "test_functions": {
              "PyTest Functions": ${{ toJson( fromJson( inputs.test_functions ) ) }}
            }
          }
        }

  running-pytests:
    needs: workflow-parameters
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ${{ fromJson( vars.PYTHON_VERSIONS ).python }}
        # test_function: ${{ fromJson( inputs.test_functions ) }}
        # test_function: ${{ fromJson( inputs.test_functions ).test_functions | toJSON }}
        test_file: ${{ toJson( keys( fromJson( inputs.test_functions ).test_functions ) ) }}
    steps:

      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Python and Dependencies
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      # - name: Restore Cached Dependencies
      #   uses: actions/cache@v3
      #   with:
      #     path: ~/.cache/pip
      #     key: pip-${{ matrix.python-version }}-${{ matrix.test_function }}-${{ hashFiles('requirements.txt') }}
      #     restore-keys: pip-${{ matrix.python-version }}-${{ matrix.test_function }}-

      - name: Restore Cached Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: pip-${{ matrix.python-version }}-${{ matrix.test_function.key }}-${{ hashFiles('requirements.txt') }}
          restore-keys: pip-${{ matrix.python-version }}-${{ matrix.test_function.key }}-

      - name: Download requirements.txt
        uses: actions/download-artifact@v4
        with:
          name: requirements-${{ matrix.python-version }}
          path: .

      - name: Verify requirements.txt Exists
        run: |
          if [[ ! -f requirements.txt ]]; then
            echo -e "ERROR: requirements.txt is missing!" ;
            exit 1 ;
          fi ;
          echo -e "requirements.txt found!" ;
          cat requirements.txt ;

      - name: Reinstall Dependencies from Cache
        run: |
          python -m pip install --upgrade pip ;
          python -m pip install -r requirements.txt ;

      # - name: Run Pytest Function (1st. iteration)
      #   run: |
      #     pytest -v --junitxml=pytest-results.xml \
      #     "${{ inputs.pytests_location }}/test_dependencies.py::${{ matrix.test_function }}" ;

      # - name: Run Pytest Function (2nd. iteration)
      #   run: |
      #     FILE="${{ matrix.test_function.key }}"
      #     TEST_FUNCTION="${{ matrix.test_function.value }}"
      #     pytest -v --junitxml=pytest-results.xml "${FILE}::${TEST_FUNCTION}"

      - name: Run Pytest Functions for Each File
        run: |
          FILE="${{ matrix.test_file }}"
          TEST_FUNCTIONS=$(jq -r --arg FILE "$FILE" '.test_functions[$FILE][]' <<< '${{ inputs.test_functions }}')

          echo "Running tests in: $FILE"
          echo "Test functions: $TEST_FUNCTIONS"

          pytest -v --junitxml=pytest-results.xml $FILE::$(echo $TEST_FUNCTIONS | sed 's/ / ::/g')

      # - name: Upload Test Results
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: pytest-results-${{ matrix.python-version }}-${{ matrix.test_function }}
      #     path: pytest-results.xml

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        with:
          name: pytest-results-${{ matrix.python-version }}-${{ matrix.test_function.value }}
          path: pytest-results.xml

      - name: Debug - List Uploaded Artifacts
        run: |
          echo -e "Listing uploaded artifacts..." ;
          find $GITHUB_WORKSPACE -type f -name "*.xml" || echo -e "No test result files found." ;
          echo -e "Checking artifact storage location..." ;
