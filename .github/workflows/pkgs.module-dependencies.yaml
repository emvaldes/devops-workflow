---
## File: .github/workflows/pkgs.module-dependencies.yaml

name: Pipeline - Requirements/Dependencies
run-name: ${{ github.actor }} -> Requirements/Dependencies

on:

  workflow_dispatch:

    inputs:

      pytests_location:
        description: "PyTest files Directory"
        required: false
        type: string
        default: "tests/requirements/dependencies"

      package_location:
        description: "Packages/Modules Directory"
        required: false
        type: string
        default: "packages/requirements/dependencies"

      github_scripts:
        description: "Target GitHub Scripts Path"
        required: false
        type: string
        default: ".github/scripts"

  push:
    branches:
      - master
      - functional
    paths:
      - .github/workflows/**
      - .github/actions/**

    pull_request:
      branches:
        - master

jobs:

  workflow:
    uses: ./.github/workflows/module.validate-parameters.yaml
    with:
      workflow_inputs: >-
        {
          "workflow": "pkgs.module-dependencies",
          "params": {
            "pytests_location": {
              "id": "PyTest Location",
              "value": "${{ github.event.inputs.pytests_location }}",
              "default": "tests/requirements/dependencies"
            },
            "package_location": {
              "id": "Package Location",
              "value": "${{ github.event.inputs.package_location }}",
              "default": "packages/requirements/dependencies"
            },
            "github_scripts": {
              "id": "GitHub Scripts",
              "value": "${{ github.event.inputs.github_scripts }}",
              "default": ".github/scripts"
            }
          }
        }

  parameters:
    needs: workflow
    runs-on: ubuntu-latest
    steps:

      - name: Packages - Module-Dependencies (Parameters)
        id: workflow_parameters
        run: |

          echo -e "PyTests Location: ${{ fromJson(
            needs.workflow.outputs.validated ).pytests_location }}" ;
          echo -e "Package Location: ${{ fromJson(
            needs.workflow.outputs.validated ).package_location }}" ;
          echo -e "GitHub Scripts: ${{ fromJson(
            needs.workflow.outputs.validated ).github_scripts }}" ;

  install-packages:
    needs: [ workflow, parameters ]
    uses: ./.github/workflows/module.install-packages.yaml
    with:
      package_location: >-
        ${{ fromJson( needs.workflow.outputs.validated ).package_location }}
      workflow_params: ${{ needs.workflow.outputs.validated }}

  pytests-module:
    # needs: install-packages
    # ✅ Ensures parameters (which confirms workflow.outputs.validated) runs first
    needs: [ workflow, parameters, install-packages ]
    uses: ./.github/workflows/pytest.module-matrix.yaml
    with:
      # pytests_location: >-
      #   ${{ fromJson(toJson(needs.workflow.outputs.validated)).pytests_location }}
      pytests_location: "${{ vars.PYTESTS_DEPENDENCIES }}"
      package_location: >-
        ${{ fromJson(toJson(needs.workflow.outputs.validated)).package_location }}
      workflow_params: ${{ needs.workflow.outputs.validated }}

  execute-module:
    # needs: pytests-module
    # ✅ Ensures parameters has already confirmed values exist
    needs: [ workflow, parameters, pytests-module ]
    # if: needs.pytests-module.outputs.aggregated_results
    uses: ./.github/workflows/module.execute-module.yaml
    with:
      # package_location: >-
      #   ${{ fromJson(toJson(needs.workflow.outputs.validated)).package_location }}
      package_location: "${{ vars.PACKAGES_DEPENDENCIES }}"
      workflow_params: ${{ needs.workflow.outputs.validated }}

  dependencies-completed:
    needs: execute-module
    runs-on: ubuntu-latest
    steps:

      - name: Completed - Dependencies Workflow
        id: dependencies_workflow
        run: |

          echo -e "Completed - Dependencies Workflow" ;
