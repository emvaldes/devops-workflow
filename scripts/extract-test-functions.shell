#!/usr/bin/env bash

set -e  # Exit on error
set -o pipefail  # Fail if any piped command fails

TEST_FILE="tests/requirements/dependencies/test_dependencies.py"
OUTPUT_FILE="test_functions.json"

echo "üîç Extracting test functions from: $TEST_FILE"

# Ensure the file exists before proceeding
if [[ ! -f "$TEST_FILE" ]]; then
    echo "‚ùå ERROR: Test file not found: $TEST_FILE"
    echo '{"test_functions": ["dummy_test_function"]}' > "$OUTPUT_FILE"
    exit 1
fi

# Run Python script separately and output to JSON file
python3 <<EOF > "$OUTPUT_FILE"
import re, json, sys

output_file = "$OUTPUT_FILE"
test_file = "$TEST_FILE"

try:
    with open(test_file, "r", encoding="utf-8") as f:
        content = f.read()
        test_functions = re.findall(r'^def (test_[a-zA-Z0-9_]+)', content, re.MULTILINE)

    test_functions = test_functions if test_functions else ["dummy_test_function"]

    with open(output_file, "w", encoding="utf-8") as out_f:
        json.dump({"test_functions": test_functions}, out_f, indent=2)

    print(f"‚úÖ Extracted test functions saved to: {output_file}")
except Exception as e:
    with open(output_file, "w", encoding="utf-8") as out_f:
        json.dump({"test_functions": ["dummy_test_function"]}, out_f, indent=2)

    print(f"‚ùå ERROR: Failed to extract test functions: {e}", file=sys.stderr)
EOF

echo "üìÑ JSON Output:"
cat "$OUTPUT_FILE"
