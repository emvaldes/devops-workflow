$ python ./scripts/testing.py 
[CALL] packages/appflow_tracer/tracing ( file_utils.manage_logfiles(CONFIGS) )
[CALL] packages/appflow_tracer/tracing (setup_logging)[219] -> packages/appflow_tracer/lib/file_utils (manage_logfiles)[96]
{
    "configs": {
        "colors": {
            "CALL": "\u001b[92m",
            "RETURN": "\u001b[93m",
            "IMPORT": "\u001b[94m",
            "DEBUG": "\u001b[96m",
            "INFO": "\u001b[97m",
            "WARNING": "\u001b[91m",
            "ERROR": "\u001b[31m",
            "CRITICAL": "\u001b[41m",
            "RESET": "\u001b[0m"
        },
        "logging": {
            "enable": true,
            "max_logfiles": 5,
            "package_name": "scripts",
            "module_name": "testing",
            "logs_dirname": "logs/scripts",
            "log_filename": "logs/scripts/testing_20250217215442.log"
        },
        "tracing": {
            "enable": true,
            "json": {
                "compressed": false
            }
        },
        "events": {
            "call": true,
            "return": true,
            "import": false
        },
        "stats": {
            "created": "2025-02-18T04:36:18.458964",
            "updated": "2025-02-18T04:54:42.595658+00:00"
        }
    }
}
[CALL] packages/appflow_tracer/lib/file_utils ( log_files = sorted( )
[CALL] packages/appflow_tracer/lib/file_utils (manage_logfiles)[135] -> packages/appflow_tracer/lib/file_utils (<lambda>)[137]
{
    "f": "logs/scripts/testing_20250217215442.log"
}
[RETURN] packages/appflow_tracer/lib/file_utils[137] ( key=lambda f:f.stat().st_mtime ) -> float:
1739854482.6217191
[RETURN] packages/appflow_tracer/lib/file_utils[152] ( return deleted_logs ) -> list:
[CALL] scripts/testing ( print("I am a stand-alone script minding my own business") )
[CALL] scripts/testing (main)[85] -> packages/appflow_tracer/tracing (<lambda>)[201]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[201] -> packages/appflow_tracer/tracing (<genexpr>)[201]
{
    ".0": "<tuple_iterator object at 0x1042fb730>"
}
[RETURN] packages/appflow_tracer/tracing[201] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
I am a stand-alone script minding my own business
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[201] -> packages/appflow_tracer/tracing (<genexpr>)[201]
{
    ".0": "<tuple_iterator object at 0x1042fb730>"
}
[RETURN] packages/appflow_tracer/tracing[201] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
I am a stand-alone script minding my own business
[RETURN] packages/appflow_tracer/tracing[201] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
