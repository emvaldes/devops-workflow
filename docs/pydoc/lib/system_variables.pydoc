### Documentation for lib/system_variables.py

Help on module lib.system_variables in lib:

NAME
    lib.system_variables - File Path: ./lib/system_variables.py

DESCRIPTION
    Description:
        The system_variables.py module defines global paths, file names, and system-wide constants
        for managing configurations, logging, and runtime parameter storage.

    Core Features:
        - **Project Path Management**: Defines and resolves key project directories.
        - **Configuration File Paths**: Stores paths to runtime, system, and default configuration files.
        - **Logging System Variables**: Defines log storage locations and log file retention settings.
        - **ANSI Color Categories**: Provides categorized ANSI escape codes for structured terminal output.
        - **Global Constants**: Stores universal defaults such as JSON indentation levels and max log files.

    Usage:
        Importing System Variables:
            from lib.system_variables import project_root, project_logs
            print(f"Project logs are stored in: {project_logs}")

        Using ANSI Log Categories:
            from lib.system_variables import category
            print(f"{category.info.color}INFO: This is a test log{category.reset.color}")

    Dependencies:
        - types.SimpleNamespace - Defines structured namespaces for category-based logging.
        - pathlib.Path - Ensures safe and platform-independent file path resolution.

    Global Behavior:
        - Provides a centralized reference for all project-wide variables.
        - Ensures consistency across modules by defining static paths and configurations.
        - Enhances logging with structured color-coded categories.

    CLI Integration:
        This module is designed as a global reference but can be imported for debugging system paths.

    Example Execution:
        python system_variables.py

    Expected Behavior:
        - Successfully defines all necessary global paths and system-wide constants.
        - Provides a structured way to manage logging, configuration, and runtime parameters.

    Exit Codes:
        - 0: Execution completed successfully.
        - 1: Error encountered during variable initialization.

DATA
    category = namespace(calls=namespace(id='CALL', color='\x1b...'), rese...
    default_indent = 4
    default_params_filename = 'default-params.json'
    default_params_filepath = PosixPath('<user-home>/.repos/devops/wor...
    env_filepath = PosixPath('<project-location>/.env...
    max_logfiles = 5
    project_logs = PosixPath('<project-location>/logs...
    project_packages = PosixPath('<project-location>/...
    project_params_filename = 'project-params.json'
    project_params_filepath = PosixPath('<user-home>/.repos/devops/wor...
    project_root = PosixPath('<project-location>')
    runtime_params_filename = 'runtime-params.json'
    runtime_params_filepath = PosixPath('<user-home>/.repos/devops/wor...
    system_params_filename = 'system-params.json'
    system_params_filepath = PosixPath('<user-home>/.repos/devops/work...
    system_params_listing = [PosixPath('<user-home>/.repos/devops/work...

VERSION
    0.1.0

FILE
    <project-location>/lib/system_variables.py



