### Documentation for run.py

Help on module run:

NAME
    run - # File: ./run.py

FUNCTIONS
    collect_files(target_dir: str, extensions: list[str]) -> list[str]
        Recursively scans a directory for non-empty files matching the specified extensions.

        This function ensures that only files with actual content are collected, preventing
        the processing of empty or irrelevant files.

        Args:
            target_dir (str): The directory to scan.
            extensions (List[str]): A list of file extensions to filter.

        Returns:
            List[str]: A list of absolute file paths that match the specified extensions.

        Raises:
            ValueError: If the provided target directory does not exist.

        Example:
            ```python
            python_files = collect_files("/project/src", [".py"])
            ```

    main()
        Framework Entry Point.

        This function orchestrates the execution of the framework based on the provided command-line
        arguments. It handles:
        - Generating Python documentation via `pydoc` if the `--pydoc` flag is passed.
        - Running a specified Python module if the `--target` flag is provided.
        - Logging execution details and error handling.

        Returns:
            None: Executes the requested functionality and exits accordingly.

        Behavior:
            - If `--pydoc` is passed, the script generates documentation for Python files.
            - If `--target <module>` is passed, it attempts to execute the specified module.
            - If no flags are provided, it logs a usage message.

        Example:
            ```bash
            python run.py --pydoc
            python run.py --yamldoc
            python run.py --target some_module
            ```

    parse_arguments() -> argparse.Namespace
        Parse command-line arguments for framework execution.

        This function processes command-line flags that determine the execution behavior of
        the framework, such as generating documentation or executing a target module.

        Returns:
            argparse.Namespace: The parsed arguments object containing selected options.

        Example:
            ```bash
            python run.py --pydoc
            python run.py --yamldoc
            python run.py --target my_module
            ```

DATA
    LIB_DIR = PosixPath('<project-location>/lib')

VERSION
    0.1.0

FILE
    <project-location>/run.py



### Code Coverage
[WARNING] No coverage data available.
