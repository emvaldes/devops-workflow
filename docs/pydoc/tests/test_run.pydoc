### Documentation for tests/test_run.py

Help on module tests.test_run in tests:

NAME
    tests.test_run - # File: ./tests/test_run.py

FUNCTIONS
    mock_project_structure()
        Mocks a project structure with Python files for `collect_files()` test.

    serialize_configs(configs)
        Convert PosixPath objects to strings for JSON serialization.

    test_collect_files(mock_project_structure)
        Ensure `collect_files()` correctly identifies Python files.

    test_main_coverage(
        mock_generate_report,
        mock_check_output,
        mock_subprocess,
        monkeypatch,
        tmp_path
    )
        Ensure `main()` correctly triggers PyDoc with coverage when `--pydoc --coverage` is used.

        **Fixes:**
            - ✅ Ensures `generate_report()` is triggered.
            - ✅ Confirms subprocess calls related to `coverage` are executed inside `pydoc`.
            - ✅ Handles `TypeError` by ensuring `subprocess.check_output()` returns a string.
            - ✅ Fixes `FileNotFoundError` by simulating coverage report creation.

        **Expected Behavior:**
            - `--pydoc` triggers PyDoc generation.
            - `--coverage` ensures that coverage is part of the PyDoc process.
            - `generate_report()` is called.
            - `subprocess.run(["coverage", "html"])` is executed.
            - `docs/coverage/coverage.report` is created and read successfully.

    test_main_pydoc(mock_subprocess, mock_create_pydocs, monkeypatch, tmp_path)
        Ensure `main()` correctly handles `--pydoc` generation.

    test_parse_arguments(args, expected_attr, expected_value)
        Ensure `parse_arguments()` correctly handles command-line arguments.

DATA
    ANY = <ANY>
    ROOT_DIR = PosixPath('<project-location>')

VERSION
    0.1.2

FILE
    <project-location>/tests/test_run.py



