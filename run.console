$ rm -rf ./docs; python run.py --pydoc ; ctree ./docs ;

[CALL] packages/appflow_tracer/tracing ( file_utils.manage_logfiles(CONFIGS) )
[CALL] packages/appflow_tracer/tracing (setup_logging)[254] -> packages/appflow_tracer/lib/file_utils (manage_logfiles)[111]
{"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/file_utils ( log_files = sorted( )
[CALL] packages/appflow_tracer/lib/file_utils (manage_logfiles)[147] -> packages/appflow_tracer/lib/file_utils (<lambda>)[149]
{"f":"logs/run_20250303225549.log"}
[RETURN] packages/appflow_tracer/lib/file_utils[149] ( key=lambda f:f.stat().st_mtime ) -> float:
1741067749.942176
[RETURN] packages/appflow_tracer/lib/file_utils[164] ( return deleted_logs ) -> list:
[CALL] run ( print( )
[CALL] run (main)[222] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb20>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
CONFIGS: {
    "colors": {
        "CALL": "\u001b[92m",
        "CRITICAL": "\u001b[41m",
        "DEBUG": "\u001b[96m",
        "ERROR": "\u001b[31m",
        "IMPORT": "\u001b[94m",
        "INFO": "\u001b[97m",
        "RETURN": "\u001b[93m",
        "WARNING": "\u001b[91m",
        "RESET": "\u001b[0m"
    },
    "logging": {
        "enable": true,
        "max_logfiles": 5,
        "package_name": ".",
        "module_name": "run",
        "logs_dirname": "logs",
        "log_filename": "logs/run_20250303225549.log"
    },
    "tracing": {
        "enable": true,
        "json": {
            "compressed": true
        }
    },
    "events": {
        "call": true,
        "critical": false,
        "debug": true,
        "error": true,
        "import": false,
        "info": false,
        "return": true,
        "warning": false
    },
    "stats": {
        "created": "2025-03-03T18:10:45.863523+00:00",
        "updated": "2025-03-04T05:55:49.915992+00:00"
    }
}
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb20>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
CONFIGS: {
    "colors": {
        "CALL": "\u001b[92m",
        "CRITICAL": "\u001b[41m",
        "DEBUG": "\u001b[96m",
        "ERROR": "\u001b[31m",
        "IMPORT": "\u001b[94m",
        "INFO": "\u001b[97m",
        "RETURN": "\u001b[93m",
        "WARNING": "\u001b[91m",
        "RESET": "\u001b[0m"
    },
    "logging": {
        "enable": true,
        "max_logfiles": 5,
        "package_name": ".",
        "module_name": "run",
        "logs_dirname": "logs",
        "log_filename": "logs/run_20250303225549.log"
    },
    "tracing": {
        "enable": true,
        "json": {
            "compressed": true
        }
    },
    "events": {
        "call": true,
        "critical": false,
        "debug": true,
        "error": true,
        "import": false,
        "info": false,
        "return": true,
        "warning": false
    },
    "stats": {
        "created": "2025-03-03T18:10:45.863523+00:00",
        "updated": "2025-03-04T05:55:49.915992+00:00"
    }
}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] run ( args=parse_arguments() )
[CALL] run (main)[228] -> run (parse_arguments)[150]
[RETURN] run[189] ( return parser.parse_args() ) -> Namespace:
{"pydoc":true,"yamldoc":false,"target":null}
[CALL] run ( log_utils.log_message( )
[CALL] run (main)[249] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Generating project documentation at: /Users/emvaldes/.repos/devops/workflows","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Generating project documentation at: /Users/emvaldes/.repos/devops/workflows","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x104a86590>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Generating project documentation at: /Users/emvaldes/.repos/devops/workflows
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x104a86590>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Generating project documentation at: /Users/emvaldes/.repos/devops/workflows
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] run ( files_list = collect_files( )
[CALL] run (main)[259] -> run (collect_files)[109]
{"target_dir":"/Users/emvaldes/.repos/devops/workflows","extensions":[".py"]}
[RETURN] run[148] ( return files ) -> list:
["/Users/emvaldes/.repos/devops/workflows/run.py","/Users/emvaldes/.repos/devops/workflows/tests/test_run.py","/Users/emvaldes/.repos/devops/workflows/scripts/__init__.py","/Users/emvaldes/.repos/devops/workflows/scripts/testing.py","/Users/emvaldes/.repos/devops/workflows/packages/__init__.py","/Users/emvaldes/.repos/devops/workflows/lib/system_variables.py","/Users/emvaldes/.repos/devops/workflows/lib/accesstoken_expiration.py","/Users/emvaldes/.repos/devops/workflows/lib/timezone_localoffset.py","/Users/emvaldes/.repos/devops/workflows/lib/configure_params.py","/Users/emvaldes/.repos/devops/workflows/lib/__init__.py","/Users/emvaldes/.repos/devops/workflows/lib/system_params.py","/Users/emvaldes/.repos/devops/workflows/lib/parsing_userinput.py","/Users/emvaldes/.repos/devops/workflows/lib/pydoc_generator.py","/Users/emvaldes/.repos/devops/workflows/lib/manage_accesstoken.py","/Users/emvaldes/.repos/devops/workflows/lib/pkgconfig_loader.py","/Users/emvaldes/.repos/devops/workflows/lib/argument_parser.py","/Users/emvaldes/.repos/devops/workflows/.github/scripts/extract_pytest_functions.py","/Users/emvaldes/.repos/devops/workflows/.github/scripts/extract_pytest_resources.py","/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/tracing.py","/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/tracing--legacy.py","/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/__init__.py","/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/__main__.py","/Users/emvaldes/.repos/devops/workflows/packages/requirements/__init__.py","/Users/emvaldes/.repos/devops/workflows/packages/requirements/__main__.py","/Users/emvaldes/.repos/devops/workflows/packages/requirements/dependencies.py","/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/serialize_utils.py","/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/log_utils.py","/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/trace_utils.py","/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/__init__.py","/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/file_utils.py","/Users/emvaldes/.repos/devops/workflows/tests/lib/test_pydoc_generator.py","/Users/emvaldes/.repos/devops/workflows/tests/requirements/dependencies/test_dependencies.py","/Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/test_tracing.py","/Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/log_utils/test_log_utils.py","/Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/serialize_utils/test_serialize_utils.py","/Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/trace_utils/test_trace_utils.py","/Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/file_utils/test_file_utils.py"]
[CALL] run ( pydoc_engine.create_pydocs( )
[CALL] run (main)[264] -> lib/pydoc_generator (create_pydocs)[254]
{"project_path":"/Users/emvaldes/.repos/devops/workflows","base_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc","files_list":["/Users/emvaldes/.repos/devops/workflows/run.py","/Users/emvaldes/.repos/devops/workflows/tests/test_run.py","/Users/emvaldes/.repos/devops/workflows/scripts/__init__.py","/Users/emvaldes/.repos/devops/workflows/scripts/testing.py","/Users/emvaldes/.repos/devops/workflows/packages/__init__.py","/Users/emvaldes/.repos/devops/workflows/lib/system_variables.py","/Users/emvaldes/.repos/devops/workflows/lib/accesstoken_expiration.py","/Users/emvaldes/.repos/devops/workflows/lib/timezone_localoffset.py","/Users/emvaldes/.repos/devops/workflows/lib/configure_params.py","/Users/emvaldes/.repos/devops/workflows/lib/__init__.py","/Users/emvaldes/.repos/devops/workflows/lib/system_params.py","/Users/emvaldes/.repos/devops/workflows/lib/parsing_userinput.py","/Users/emvaldes/.repos/devops/workflows/lib/pydoc_generator.py","/Users/emvaldes/.repos/devops/workflows/lib/manage_accesstoken.py","/Users/emvaldes/.repos/devops/workflows/lib/pkgconfig_loader.py","/Users/emvaldes/.repos/devops/workflows/lib/argument_parser.py","/Users/emvaldes/.repos/devops/workflows/.github/scripts/extract_pytest_functions.py","/Users/emvaldes/.repos/devops/workflows/.github/scripts/extract_pytest_resources.py","/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/tracing.py","/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/tracing--legacy.py","/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/__init__.py","/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/__main__.py","/Users/emvaldes/.repos/devops/workflows/packages/requirements/__init__.py","/Users/emvaldes/.repos/devops/workflows/packages/requirements/__main__.py","/Users/emvaldes/.repos/devops/workflows/packages/requirements/dependencies.py","/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/serialize_utils.py","/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/log_utils.py","/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/trace_utils.py","/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/__init__.py","/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/file_utils.py","/Users/emvaldes/.repos/devops/workflows/tests/lib/test_pydoc_generator.py","/Users/emvaldes/.repos/devops/workflows/tests/requirements/dependencies/test_dependencies.py","/Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/test_tracing.py","/Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/log_utils/test_log_utils.py","/Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/serialize_utils/test_serialize_utils.py","/Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/trace_utils/test_trace_utils.py","/Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/file_utils/test_file_utils.py"],"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (create_pydocs)[285] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Processing Python files [['/Users/emvaldes/.repos/devops/workflows/run.py', '/Users/emvaldes/.repos/devops/workflows/tests/test_run.py', '/Users/emvaldes/.repos/devops/workflows/scripts/__init__.py', '/Users/emvaldes/.repos/devops/workflows/scripts/testing.py', '/Users/emvaldes/.repos/devops/workflows/packages/__init__.py', '/Users/emvaldes/.repos/devops/workflows/lib/system_variables.py', '/Users/emvaldes/.repos/devops/workflows/lib/accesstoken_expiration.py', '/Users/emvaldes/.repos/devops/workflows/lib/timezone_localoffset.py', '/Users/emvaldes/.repos/devops/workflows/lib/configure_params.py', '/Users/emvaldes/.repos/devops/workflows/lib/__init__.py', '/Users/emvaldes/.repos/devops/workflows/lib/system_params.py', '/Users/emvaldes/.repos/devops/workflows/lib/parsing_userinput.py', '/Users/emvaldes/.repos/devops/workflows/lib/pydoc_generator.py', '/Users/emvaldes/.repos/devops/workflows/lib/manage_accesstoken.py', '/Users/emvaldes/.repos/devops/workflows/lib/pkgconfig_loader.py', '/Users/emvaldes/.repos/devops/workflows/lib/argument_parser.py', '/Users/emvaldes/.repos/devops/workflows/.github/scripts/extract_pytest_functions.py', '/Users/emvaldes/.repos/devops/workflows/.github/scripts/extract_pytest_resources.py', '/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/tracing.py', '/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/tracing--legacy.py', '/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/__init__.py', '/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/__main__.py', '/Users/emvaldes/.repos/devops/workflows/packages/requirements/__init__.py', '/Users/emvaldes/.repos/devops/workflows/packages/requirements/__main__.py', '/Users/emvaldes/.repos/devops/workflows/packages/requirements/dependencies.py', '/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/serialize_utils.py', '/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/log_utils.py', '/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/trace_utils.py', '/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/__init__.py', '/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/file_utils.py', '/Users/emvaldes/.repos/devops/workflows/tests/lib/test_pydoc_generator.py', '/Users/emvaldes/.repos/devops/workflows/tests/requirements/dependencies/test_dependencies.py', '/Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/test_tracing.py', '/Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/log_utils/test_log_utils.py', '/Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/serialize_utils/test_serialize_utils.py', '/Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/trace_utils/test_trace_utils.py', '/Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/file_utils/test_file_utils.py']]...","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Processing Python files [['/Users/emvaldes/.repos/devops/workflows/run.py', '/Users/emvaldes/.repos/devops/workflows/tests/test_run.py', '/Users/emvaldes/.repos/devops/workflows/scripts/__init__.py', '/Users/emvaldes/.repos/devops/workflows/scripts/testing.py', '/Users/emvaldes/.repos/devops/workflows/packages/__init__.py', '/Users/emvaldes/.repos/devops/workflows/lib/system_variables.py', '/Users/emvaldes/.repos/devops/workflows/lib/accesstoken_expiration.py', '/Users/emvaldes/.repos/devops/workflows/lib/timezone_localoffset.py', '/Users/emvaldes/.repos/devops/workflows/lib/configure_params.py', '/Users/emvaldes/.repos/devops/workflows/lib/__init__.py', '/Users/emvaldes/.repos/devops/workflows/lib/system_params.py', '/Users/emvaldes/.repos/devops/workflows/lib/parsing_userinput.py', '/Users/emvaldes/.repos/devops/workflows/lib/pydoc_generator.py', '/Users/emvaldes/.repos/devops/workflows/lib/manage_accesstoken.py', '/Users/emvaldes/.repos/devops/workflows/lib/pkgconfig_loader.py', '/Users/emvaldes/.repos/devops/workflows/lib/argument_parser.py', '/Users/emvaldes/.repos/devops/workflows/.github/scripts/extract_pytest_functions.py', '/Users/emvaldes/.repos/devops/workflows/.github/scripts/extract_pytest_resources.py', '/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/tracing.py', '/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/tracing--legacy.py', '/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/__init__.py', '/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/__main__.py', '/Users/emvaldes/.repos/devops/workflows/packages/requirements/__init__.py', '/Users/emvaldes/.repos/devops/workflows/packages/requirements/__main__.py', '/Users/emvaldes/.repos/devops/workflows/packages/requirements/dependencies.py', '/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/serialize_utils.py', '/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/log_utils.py', '/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/trace_utils.py', '/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/__init__.py', '/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/file_utils.py', '/Users/emvaldes/.repos/devops/workflows/tests/lib/test_pydoc_generator.py', '/Users/emvaldes/.repos/devops/workflows/tests/requirements/dependencies/test_dependencies.py', '/Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/test_tracing.py', '/Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/log_utils/test_log_utils.py', '/Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/serialize_utils/test_serialize_utils.py', '/Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/trace_utils/test_trace_utils.py', '/Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/file_utils/test_file_utils.py']]...","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x104a86590>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Processing Python files [['/Users/emvaldes/.repos/devops/workflows/run.py', '/Users/emvaldes/.repos/devops/workflows/tests/test_run.py', '/Users/emvaldes/.repos/devops/workflows/scripts/__init__.py', '/Users/emvaldes/.repos/devops/workflows/scripts/testing.py', '/Users/emvaldes/.repos/devops/workflows/packages/__init__.py', '/Users/emvaldes/.repos/devops/workflows/lib/system_variables.py', '/Users/emvaldes/.repos/devops/workflows/lib/accesstoken_expiration.py', '/Users/emvaldes/.repos/devops/workflows/lib/timezone_localoffset.py', '/Users/emvaldes/.repos/devops/workflows/lib/configure_params.py', '/Users/emvaldes/.repos/devops/workflows/lib/__init__.py', '/Users/emvaldes/.repos/devops/workflows/lib/system_params.py', '/Users/emvaldes/.repos/devops/workflows/lib/parsing_userinput.py', '/Users/emvaldes/.repos/devops/workflows/lib/pydoc_generator.py', '/Users/emvaldes/.repos/devops/workflows/lib/manage_accesstoken.py', '/Users/emvaldes/.repos/devops/workflows/lib/pkgconfig_loader.py', '/Users/emvaldes/.repos/devops/workflows/lib/argument_parser.py', '/Users/emvaldes/.repos/devops/workflows/.github/scripts/extract_pytest_functions.py', '/Users/emvaldes/.repos/devops/workflows/.github/scripts/extract_pytest_resources.py', '/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/tracing.py', '/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/tracing--legacy.py', '/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/__init__.py', '/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/__main__.py', '/Users/emvaldes/.repos/devops/workflows/packages/requirements/__init__.py', '/Users/emvaldes/.repos/devops/workflows/packages/requirements/__main__.py', '/Users/emvaldes/.repos/devops/workflows/packages/requirements/dependencies.py', '/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/serialize_utils.py', '/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/log_utils.py', '/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/trace_utils.py', '/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/__init__.py', '/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/file_utils.py', '/Users/emvaldes/.repos/devops/workflows/tests/lib/test_pydoc_generator.py', '/Users/emvaldes/.repos/devops/workflows/tests/requirements/dependencies/test_dependencies.py', '/Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/test_tracing.py', '/Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/log_utils/test_log_utils.py', '/Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/serialize_utils/test_serialize_utils.py', '/Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/trace_utils/test_trace_utils.py', '/Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/file_utils/test_file_utils.py']]...
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x104a86590>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Processing Python files [['/Users/emvaldes/.repos/devops/workflows/run.py', '/Users/emvaldes/.repos/devops/workflows/tests/test_run.py', '/Users/emvaldes/.repos/devops/workflows/scripts/__init__.py', '/Users/emvaldes/.repos/devops/workflows/scripts/testing.py', '/Users/emvaldes/.repos/devops/workflows/packages/__init__.py', '/Users/emvaldes/.repos/devops/workflows/lib/system_variables.py', '/Users/emvaldes/.repos/devops/workflows/lib/accesstoken_expiration.py', '/Users/emvaldes/.repos/devops/workflows/lib/timezone_localoffset.py', '/Users/emvaldes/.repos/devops/workflows/lib/configure_params.py', '/Users/emvaldes/.repos/devops/workflows/lib/__init__.py', '/Users/emvaldes/.repos/devops/workflows/lib/system_params.py', '/Users/emvaldes/.repos/devops/workflows/lib/parsing_userinput.py', '/Users/emvaldes/.repos/devops/workflows/lib/pydoc_generator.py', '/Users/emvaldes/.repos/devops/workflows/lib/manage_accesstoken.py', '/Users/emvaldes/.repos/devops/workflows/lib/pkgconfig_loader.py', '/Users/emvaldes/.repos/devops/workflows/lib/argument_parser.py', '/Users/emvaldes/.repos/devops/workflows/.github/scripts/extract_pytest_functions.py', '/Users/emvaldes/.repos/devops/workflows/.github/scripts/extract_pytest_resources.py', '/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/tracing.py', '/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/tracing--legacy.py', '/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/__init__.py', '/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/__main__.py', '/Users/emvaldes/.repos/devops/workflows/packages/requirements/__init__.py', '/Users/emvaldes/.repos/devops/workflows/packages/requirements/__main__.py', '/Users/emvaldes/.repos/devops/workflows/packages/requirements/dependencies.py', '/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/serialize_utils.py', '/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/log_utils.py', '/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/trace_utils.py', '/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/__init__.py', '/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/file_utils.py', '/Users/emvaldes/.repos/devops/workflows/tests/lib/test_pydoc_generator.py', '/Users/emvaldes/.repos/devops/workflows/tests/requirements/dependencies/test_dependencies.py', '/Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/test_tracing.py', '/Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/log_utils/test_log_utils.py', '/Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/serialize_utils/test_serialize_utils.py', '/Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/trace_utils/test_trace_utils.py', '/Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/file_utils/test_file_utils.py']]...
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( docs_path = create_structure( )
[CALL] lib/pydoc_generator (create_pydocs)[299] -> lib/pydoc_generator (create_structure)[61]
{"base_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc","package_name":"."}
[RETURN] lib/pydoc_generator[87] ( return doc_dir ) -> PosixPath:
Error in trace_all return handling: Object of type PosixPath is not JSON serializable
[CALL] lib/pydoc_generator ( generate_pydoc( )
[CALL] lib/pydoc_generator (create_pydocs)[304] -> lib/pydoc_generator (generate_pydoc)[89]
{"project_path":"/Users/emvaldes/.repos/devops/workflows","file_path":"/Users/emvaldes/.repos/devops/workflows/run.py","docs_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc","configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[126] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/run.py...","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/run.py...","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5cc0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Generating documentation for /Users/emvaldes/.repos/devops/workflows/run.py...
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5cc0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Generating documentation for /Users/emvaldes/.repos/devops/workflows/run.py...
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Original Relative Path: {relative_file_path}") )
[CALL] lib/pydoc_generator (generate_pydoc)[142] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5f00>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Original Relative Path: run.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5f00>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Original Relative Path: run.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Sanitized Module Path: {module_name}") )
[CALL] lib/pydoc_generator (generate_pydoc)[143] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5720>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Sanitized Module Path: run
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5720>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Sanitized Module Path: run
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[145] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Relative File Path: run.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Relative File Path: run.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5db0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Relative File Path: run.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5db0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Relative File Path: run.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x1059c5c60>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x1059c5c60>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[168] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Running PyDoc Command: python -m pydoc run","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Running PyDoc Command: python -m pydoc run","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5c60>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Running PyDoc Command: python -m pydoc run
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5c60>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Running PyDoc Command: python -m pydoc run
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[188]
{"match":"<re.Match object; span=(2362, 2401), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[188] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[188]
{"match":"<re.Match object; span=(2437, 2476), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[188] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[197] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/run.pydoc","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/run.pydoc","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5f90>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/run.pydoc
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5f90>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/run.pydoc
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[248] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/run.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/run.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5f90>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Finished processing /Users/emvaldes/.repos/devops/workflows/run.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5f90>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Finished processing /Users/emvaldes/.repos/devops/workflows/run.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[RETURN] lib/pydoc_generator[248] ( log_utils.log_message( ) -> NoneType: None
[CALL] lib/pydoc_generator ( docs_path = create_structure( )
[CALL] lib/pydoc_generator (create_pydocs)[299] -> lib/pydoc_generator (create_structure)[61]
{"base_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc","package_name":"tests"}
[RETURN] lib/pydoc_generator[87] ( return doc_dir ) -> PosixPath:
Error in trace_all return handling: Object of type PosixPath is not JSON serializable
[CALL] lib/pydoc_generator ( generate_pydoc( )
[CALL] lib/pydoc_generator (create_pydocs)[304] -> lib/pydoc_generator (generate_pydoc)[89]
{"project_path":"/Users/emvaldes/.repos/devops/workflows","file_path":"/Users/emvaldes/.repos/devops/workflows/tests/test_run.py","docs_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc/tests","configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[126] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/tests/test_run.py...","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/tests/test_run.py...","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5a50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Generating documentation for /Users/emvaldes/.repos/devops/workflows/tests/test_run.py...
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5a50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Generating documentation for /Users/emvaldes/.repos/devops/workflows/tests/test_run.py...
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Original Relative Path: {relative_file_path}") )
[CALL] lib/pydoc_generator (generate_pydoc)[142] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5ff0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Original Relative Path: tests/test_run.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5ff0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Original Relative Path: tests/test_run.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Sanitized Module Path: {module_name}") )
[CALL] lib/pydoc_generator (generate_pydoc)[143] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5480>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Sanitized Module Path: tests.test_run
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5480>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Sanitized Module Path: tests.test_run
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[145] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Relative File Path: tests/test_run.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Relative File Path: tests/test_run.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5360>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Relative File Path: tests/test_run.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5360>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Relative File Path: tests/test_run.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x1059c6230>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x1059c6230>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x1059c6230>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[168] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Running PyDoc Command: python -m pydoc tests.test_run","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Running PyDoc Command: python -m pydoc tests.test_run","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c6200>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Running PyDoc Command: python -m pydoc tests.test_run
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c6200>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Running PyDoc Command: python -m pydoc tests.test_run
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[188]
{"match":"<re.Match object; span=(864, 903), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[188] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[188]
{"match":"<re.Match object; span=(935, 974), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[188] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[197] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/tests/test_run.pydoc","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/tests/test_run.pydoc","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c6110>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/tests/test_run.pydoc
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c6110>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/tests/test_run.pydoc
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[248] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/tests/test_run.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/tests/test_run.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c6110>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Finished processing /Users/emvaldes/.repos/devops/workflows/tests/test_run.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c6110>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Finished processing /Users/emvaldes/.repos/devops/workflows/tests/test_run.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[RETURN] lib/pydoc_generator[248] ( log_utils.log_message( ) -> NoneType: None
[CALL] lib/pydoc_generator ( docs_path = create_structure( )
[CALL] lib/pydoc_generator (create_pydocs)[299] -> lib/pydoc_generator (create_structure)[61]
{"base_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc","package_name":"scripts"}
[RETURN] lib/pydoc_generator[87] ( return doc_dir ) -> PosixPath:
Error in trace_all return handling: Object of type PosixPath is not JSON serializable
[CALL] lib/pydoc_generator ( generate_pydoc( )
[CALL] lib/pydoc_generator (create_pydocs)[304] -> lib/pydoc_generator (generate_pydoc)[89]
{"project_path":"/Users/emvaldes/.repos/devops/workflows","file_path":"/Users/emvaldes/.repos/devops/workflows/scripts/__init__.py","docs_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc/scripts","configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[126] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/scripts/__init__.py...","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/scripts/__init__.py...","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5a50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Generating documentation for /Users/emvaldes/.repos/devops/workflows/scripts/__init__.py...
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5a50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Generating documentation for /Users/emvaldes/.repos/devops/workflows/scripts/__init__.py...
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Original Relative Path: {relative_file_path}") )
[CALL] lib/pydoc_generator (generate_pydoc)[142] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c6260>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Original Relative Path: scripts/__init__.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c6260>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Original Relative Path: scripts/__init__.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Sanitized Module Path: {module_name}") )
[CALL] lib/pydoc_generator (generate_pydoc)[143] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5270>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Sanitized Module Path: scripts.__init__
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5270>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Sanitized Module Path: scripts.__init__
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[145] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Relative File Path: scripts/__init__.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Relative File Path: scripts/__init__.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5c60>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Relative File Path: scripts/__init__.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5c60>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Relative File Path: scripts/__init__.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x1059c58d0>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x1059c58d0>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x1059c58d0>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[168] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Running PyDoc Command: python -m pydoc scripts.__init__","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Running PyDoc Command: python -m pydoc scripts.__init__","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5660>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Running PyDoc Command: python -m pydoc scripts.__init__
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5660>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Running PyDoc Command: python -m pydoc scripts.__init__
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[188]
{"match":"<re.Match object; span=(132, 171), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[188] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[197] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/scripts/__init__.pydoc","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/scripts/__init__.pydoc","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c6290>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/scripts/__init__.pydoc
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c6290>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/scripts/__init__.pydoc
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[248] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/scripts/__init__.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/scripts/__init__.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c6290>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Finished processing /Users/emvaldes/.repos/devops/workflows/scripts/__init__.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c6290>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Finished processing /Users/emvaldes/.repos/devops/workflows/scripts/__init__.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[RETURN] lib/pydoc_generator[248] ( log_utils.log_message( ) -> NoneType: None
[CALL] lib/pydoc_generator ( docs_path = create_structure( )
[CALL] lib/pydoc_generator (create_pydocs)[299] -> lib/pydoc_generator (create_structure)[61]
{"base_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc","package_name":"scripts"}
[RETURN] lib/pydoc_generator[87] ( return doc_dir ) -> PosixPath:
Error in trace_all return handling: Object of type PosixPath is not JSON serializable
[CALL] lib/pydoc_generator ( generate_pydoc( )
[CALL] lib/pydoc_generator (create_pydocs)[304] -> lib/pydoc_generator (generate_pydoc)[89]
{"project_path":"/Users/emvaldes/.repos/devops/workflows","file_path":"/Users/emvaldes/.repos/devops/workflows/scripts/testing.py","docs_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc/scripts","configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[126] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/scripts/testing.py...","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/scripts/testing.py...","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c59f0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Generating documentation for /Users/emvaldes/.repos/devops/workflows/scripts/testing.py...
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c59f0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Generating documentation for /Users/emvaldes/.repos/devops/workflows/scripts/testing.py...
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Original Relative Path: {relative_file_path}") )
[CALL] lib/pydoc_generator (generate_pydoc)[142] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5f30>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Original Relative Path: scripts/testing.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5f30>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Original Relative Path: scripts/testing.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Sanitized Module Path: {module_name}") )
[CALL] lib/pydoc_generator (generate_pydoc)[143] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5de0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Sanitized Module Path: scripts.testing
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5de0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Sanitized Module Path: scripts.testing
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[145] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Relative File Path: scripts/testing.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Relative File Path: scripts/testing.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c61a0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Relative File Path: scripts/testing.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c61a0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Relative File Path: scripts/testing.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x1059c5f60>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x1059c5f60>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x1059c5f60>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[168] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Running PyDoc Command: python -m pydoc scripts.testing","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Running PyDoc Command: python -m pydoc scripts.testing","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5f60>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Running PyDoc Command: python -m pydoc scripts.testing
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5f60>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Running PyDoc Command: python -m pydoc scripts.testing
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[188]
{"match":"<re.Match object; span=(1918, 1957), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[188] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[188]
{"match":"<re.Match object; span=(1970, 2009), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[188] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[197] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/scripts/testing.pydoc","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/scripts/testing.pydoc","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5480>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/scripts/testing.pydoc
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5480>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/scripts/testing.pydoc
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[248] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/scripts/testing.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/scripts/testing.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5480>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Finished processing /Users/emvaldes/.repos/devops/workflows/scripts/testing.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5480>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Finished processing /Users/emvaldes/.repos/devops/workflows/scripts/testing.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[RETURN] lib/pydoc_generator[248] ( log_utils.log_message( ) -> NoneType: None
[CALL] lib/pydoc_generator ( docs_path = create_structure( )
[CALL] lib/pydoc_generator (create_pydocs)[299] -> lib/pydoc_generator (create_structure)[61]
{"base_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc","package_name":"packages"}
[RETURN] lib/pydoc_generator[87] ( return doc_dir ) -> PosixPath:
Error in trace_all return handling: Object of type PosixPath is not JSON serializable
[CALL] lib/pydoc_generator ( generate_pydoc( )
[CALL] lib/pydoc_generator (create_pydocs)[304] -> lib/pydoc_generator (generate_pydoc)[89]
{"project_path":"/Users/emvaldes/.repos/devops/workflows","file_path":"/Users/emvaldes/.repos/devops/workflows/packages/__init__.py","docs_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages","configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[126] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/__init__.py...","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/__init__.py...","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c6020>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/__init__.py...
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c6020>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/__init__.py...
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Original Relative Path: {relative_file_path}") )
[CALL] lib/pydoc_generator (generate_pydoc)[142] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c59c0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Original Relative Path: packages/__init__.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c59c0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Original Relative Path: packages/__init__.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Sanitized Module Path: {module_name}") )
[CALL] lib/pydoc_generator (generate_pydoc)[143] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c54b0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Sanitized Module Path: packages.__init__
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c54b0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Sanitized Module Path: packages.__init__
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[145] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Relative File Path: packages/__init__.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Relative File Path: packages/__init__.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5270>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Relative File Path: packages/__init__.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5270>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Relative File Path: packages/__init__.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x1059c61a0>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x1059c61a0>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x1059c61a0>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[168] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Running PyDoc Command: python -m pydoc packages.__init__","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Running PyDoc Command: python -m pydoc packages.__init__","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c6110>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Running PyDoc Command: python -m pydoc packages.__init__
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c6110>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Running PyDoc Command: python -m pydoc packages.__init__
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[188]
{"match":"<re.Match object; span=(136, 175), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[188] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[197] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/__init__.pydoc","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/__init__.pydoc","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c60e0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/__init__.pydoc
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c60e0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/__init__.pydoc
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[248] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/packages/__init__.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/packages/__init__.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c60e0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Finished processing /Users/emvaldes/.repos/devops/workflows/packages/__init__.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c60e0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Finished processing /Users/emvaldes/.repos/devops/workflows/packages/__init__.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[RETURN] lib/pydoc_generator[248] ( log_utils.log_message( ) -> NoneType: None
[CALL] lib/pydoc_generator ( docs_path = create_structure( )
[CALL] lib/pydoc_generator (create_pydocs)[299] -> lib/pydoc_generator (create_structure)[61]
{"base_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc","package_name":"lib"}
[RETURN] lib/pydoc_generator[87] ( return doc_dir ) -> PosixPath:
Error in trace_all return handling: Object of type PosixPath is not JSON serializable
[CALL] lib/pydoc_generator ( generate_pydoc( )
[CALL] lib/pydoc_generator (create_pydocs)[304] -> lib/pydoc_generator (generate_pydoc)[89]
{"project_path":"/Users/emvaldes/.repos/devops/workflows","file_path":"/Users/emvaldes/.repos/devops/workflows/lib/system_variables.py","docs_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib","configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[126] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/lib/system_variables.py...","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/lib/system_variables.py...","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5f90>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Generating documentation for /Users/emvaldes/.repos/devops/workflows/lib/system_variables.py...
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5f90>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Generating documentation for /Users/emvaldes/.repos/devops/workflows/lib/system_variables.py...
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Original Relative Path: {relative_file_path}") )
[CALL] lib/pydoc_generator (generate_pydoc)[142] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5270>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Original Relative Path: lib/system_variables.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5270>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Original Relative Path: lib/system_variables.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Sanitized Module Path: {module_name}") )
[CALL] lib/pydoc_generator (generate_pydoc)[143] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c6050>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Sanitized Module Path: lib.system_variables
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c6050>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Sanitized Module Path: lib.system_variables
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[145] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Relative File Path: lib/system_variables.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Relative File Path: lib/system_variables.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c6290>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Relative File Path: lib/system_variables.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c6290>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Relative File Path: lib/system_variables.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x1059c5de0>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x1059c5de0>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x1059c5de0>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[168] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Running PyDoc Command: python -m pydoc lib.system_variables","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Running PyDoc Command: python -m pydoc lib.system_variables","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5390>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Running PyDoc Command: python -m pydoc lib.system_variables
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5390>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Running PyDoc Command: python -m pydoc lib.system_variables
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[188]
{"match":"<re.Match object; span=(311, 326), match='/Users/emvaldes'>"}
[RETURN] lib/pydoc_generator[188] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<user-home>
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[188]
{"match":"<re.Match object; span=(378, 417), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[188] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[188]
{"match":"<re.Match object; span=(477, 516), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[188] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[188]
{"match":"<re.Match object; span=(559, 598), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[188] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[188]
{"match":"<re.Match object; span=(696, 711), match='/Users/emvaldes'>"}
[RETURN] lib/pydoc_generator[188] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<user-home>
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[188]
{"match":"<re.Match object; span=(763, 802), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[188] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[188]
{"match":"<re.Match object; span=(898, 913), match='/Users/emvaldes'>"}
[RETURN] lib/pydoc_generator[188] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<user-home>
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[188]
{"match":"<re.Match object; span=(1025, 1040), match='/Users/emvaldes'>"}
[RETURN] lib/pydoc_generator[188] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<user-home>
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[188]
{"match":"<re.Match object; span=(1103, 1118), match='/Users/emvaldes'>"}
[RETURN] lib/pydoc_generator[188] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<user-home>
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[188]
{"match":"<re.Match object; span=(1170, 1209), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[188] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[197] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib/system_variables.pydoc","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib/system_variables.pydoc","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5750>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib/system_variables.pydoc
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5750>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib/system_variables.pydoc
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[248] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/lib/system_variables.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/lib/system_variables.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5750>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Finished processing /Users/emvaldes/.repos/devops/workflows/lib/system_variables.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5750>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Finished processing /Users/emvaldes/.repos/devops/workflows/lib/system_variables.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[RETURN] lib/pydoc_generator[248] ( log_utils.log_message( ) -> NoneType: None
[CALL] lib/pydoc_generator ( docs_path = create_structure( )
[CALL] lib/pydoc_generator (create_pydocs)[299] -> lib/pydoc_generator (create_structure)[61]
{"base_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc","package_name":"lib"}
[RETURN] lib/pydoc_generator[87] ( return doc_dir ) -> PosixPath:
Error in trace_all return handling: Object of type PosixPath is not JSON serializable
[CALL] lib/pydoc_generator ( generate_pydoc( )
[CALL] lib/pydoc_generator (create_pydocs)[304] -> lib/pydoc_generator (generate_pydoc)[89]
{"project_path":"/Users/emvaldes/.repos/devops/workflows","file_path":"/Users/emvaldes/.repos/devops/workflows/lib/accesstoken_expiration.py","docs_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib","configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[126] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/lib/accesstoken_expiration.py...","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/lib/accesstoken_expiration.py...","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5ea0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Generating documentation for /Users/emvaldes/.repos/devops/workflows/lib/accesstoken_expiration.py...
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5ea0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Generating documentation for /Users/emvaldes/.repos/devops/workflows/lib/accesstoken_expiration.py...
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Original Relative Path: {relative_file_path}") )
[CALL] lib/pydoc_generator (generate_pydoc)[142] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5a50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Original Relative Path: lib/accesstoken_expiration.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5a50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Original Relative Path: lib/accesstoken_expiration.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Sanitized Module Path: {module_name}") )
[CALL] lib/pydoc_generator (generate_pydoc)[143] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c4550>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Sanitized Module Path: lib.accesstoken_expiration
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c4550>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Sanitized Module Path: lib.accesstoken_expiration
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[145] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Relative File Path: lib/accesstoken_expiration.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Relative File Path: lib/accesstoken_expiration.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c6140>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Relative File Path: lib/accesstoken_expiration.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c6140>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Relative File Path: lib/accesstoken_expiration.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x1059c5720>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x1059c5720>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x1059c5720>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[168] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Running PyDoc Command: python -m pydoc lib.accesstoken_expiration","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Running PyDoc Command: python -m pydoc lib.accesstoken_expiration","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c54b0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Running PyDoc Command: python -m pydoc lib.accesstoken_expiration
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c54b0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Running PyDoc Command: python -m pydoc lib.accesstoken_expiration
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[188]
{"match":"<re.Match object; span=(4242, 4281), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[188] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[197] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib/accesstoken_expiration.pydoc","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib/accesstoken_expiration.pydoc","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c6080>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib/accesstoken_expiration.pydoc
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c6080>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib/accesstoken_expiration.pydoc
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[248] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/lib/accesstoken_expiration.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/lib/accesstoken_expiration.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c6080>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Finished processing /Users/emvaldes/.repos/devops/workflows/lib/accesstoken_expiration.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c6080>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Finished processing /Users/emvaldes/.repos/devops/workflows/lib/accesstoken_expiration.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[RETURN] lib/pydoc_generator[248] ( log_utils.log_message( ) -> NoneType: None
[CALL] lib/pydoc_generator ( docs_path = create_structure( )
[CALL] lib/pydoc_generator (create_pydocs)[299] -> lib/pydoc_generator (create_structure)[61]
{"base_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc","package_name":"lib"}
[RETURN] lib/pydoc_generator[87] ( return doc_dir ) -> PosixPath:
Error in trace_all return handling: Object of type PosixPath is not JSON serializable
[CALL] lib/pydoc_generator ( generate_pydoc( )
[CALL] lib/pydoc_generator (create_pydocs)[304] -> lib/pydoc_generator (generate_pydoc)[89]
{"project_path":"/Users/emvaldes/.repos/devops/workflows","file_path":"/Users/emvaldes/.repos/devops/workflows/lib/timezone_localoffset.py","docs_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib","configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[126] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/lib/timezone_localoffset.py...","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/lib/timezone_localoffset.py...","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5c60>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Generating documentation for /Users/emvaldes/.repos/devops/workflows/lib/timezone_localoffset.py...
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5c60>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Generating documentation for /Users/emvaldes/.repos/devops/workflows/lib/timezone_localoffset.py...
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Original Relative Path: {relative_file_path}") )
[CALL] lib/pydoc_generator (generate_pydoc)[142] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c6140>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Original Relative Path: lib/timezone_localoffset.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c6140>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Original Relative Path: lib/timezone_localoffset.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Sanitized Module Path: {module_name}") )
[CALL] lib/pydoc_generator (generate_pydoc)[143] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5ba0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Sanitized Module Path: lib.timezone_localoffset
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5ba0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Sanitized Module Path: lib.timezone_localoffset
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[145] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Relative File Path: lib/timezone_localoffset.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Relative File Path: lib/timezone_localoffset.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c58a0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Relative File Path: lib/timezone_localoffset.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c58a0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Relative File Path: lib/timezone_localoffset.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x1059c5de0>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x1059c5de0>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x1059c5de0>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[168] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Running PyDoc Command: python -m pydoc lib.timezone_localoffset","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Running PyDoc Command: python -m pydoc lib.timezone_localoffset","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c6020>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Running PyDoc Command: python -m pydoc lib.timezone_localoffset
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c6020>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Running PyDoc Command: python -m pydoc lib.timezone_localoffset
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[188]
{"match":"<re.Match object; span=(2398, 2437), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[188] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[197] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib/timezone_localoffset.pydoc","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib/timezone_localoffset.pydoc","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5e10>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib/timezone_localoffset.pydoc
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5e10>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib/timezone_localoffset.pydoc
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[248] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/lib/timezone_localoffset.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/lib/timezone_localoffset.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5e10>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Finished processing /Users/emvaldes/.repos/devops/workflows/lib/timezone_localoffset.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5e10>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Finished processing /Users/emvaldes/.repos/devops/workflows/lib/timezone_localoffset.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[RETURN] lib/pydoc_generator[248] ( log_utils.log_message( ) -> NoneType: None
[CALL] lib/pydoc_generator ( docs_path = create_structure( )
[CALL] lib/pydoc_generator (create_pydocs)[299] -> lib/pydoc_generator (create_structure)[61]
{"base_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc","package_name":"lib"}
[RETURN] lib/pydoc_generator[87] ( return doc_dir ) -> PosixPath:
Error in trace_all return handling: Object of type PosixPath is not JSON serializable
[CALL] lib/pydoc_generator ( generate_pydoc( )
[CALL] lib/pydoc_generator (create_pydocs)[304] -> lib/pydoc_generator (generate_pydoc)[89]
{"project_path":"/Users/emvaldes/.repos/devops/workflows","file_path":"/Users/emvaldes/.repos/devops/workflows/lib/configure_params.py","docs_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib","configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[126] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/lib/configure_params.py...","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/lib/configure_params.py...","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5f30>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Generating documentation for /Users/emvaldes/.repos/devops/workflows/lib/configure_params.py...
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5f30>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Generating documentation for /Users/emvaldes/.repos/devops/workflows/lib/configure_params.py...
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Original Relative Path: {relative_file_path}") )
[CALL] lib/pydoc_generator (generate_pydoc)[142] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c58a0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Original Relative Path: lib/configure_params.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c58a0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Original Relative Path: lib/configure_params.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Sanitized Module Path: {module_name}") )
[CALL] lib/pydoc_generator (generate_pydoc)[143] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5bd0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Sanitized Module Path: lib.configure_params
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5bd0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Sanitized Module Path: lib.configure_params
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[145] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Relative File Path: lib/configure_params.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Relative File Path: lib/configure_params.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c4550>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Relative File Path: lib/configure_params.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c4550>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Relative File Path: lib/configure_params.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x1059c5f90>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x1059c5f90>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x1059c5f90>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[168] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Running PyDoc Command: python -m pydoc lib.configure_params","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Running PyDoc Command: python -m pydoc lib.configure_params","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c55a0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Running PyDoc Command: python -m pydoc lib.configure_params
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c55a0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Running PyDoc Command: python -m pydoc lib.configure_params
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[188]
{"match":"<re.Match object; span=(7896, 7935), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[188] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[188]
{"match":"<re.Match object; span=(7974, 8013), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[188] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[188]
{"match":"<re.Match object; span=(8109, 8124), match='/Users/emvaldes'>"}
[RETURN] lib/pydoc_generator[188] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<user-home>
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[188]
{"match":"<re.Match object; span=(8236, 8251), match='/Users/emvaldes'>"}
[RETURN] lib/pydoc_generator[188] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<user-home>
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[188]
{"match":"<re.Match object; span=(8314, 8329), match='/Users/emvaldes'>"}
[RETURN] lib/pydoc_generator[188] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<user-home>
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[188]
{"match":"<re.Match object; span=(8381, 8420), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[188] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[197] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib/configure_params.pydoc","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib/configure_params.pydoc","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c59f0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib/configure_params.pydoc
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c59f0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib/configure_params.pydoc
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[248] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/lib/configure_params.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/lib/configure_params.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c59f0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Finished processing /Users/emvaldes/.repos/devops/workflows/lib/configure_params.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c59f0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Finished processing /Users/emvaldes/.repos/devops/workflows/lib/configure_params.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[RETURN] lib/pydoc_generator[248] ( log_utils.log_message( ) -> NoneType: None
[CALL] lib/pydoc_generator ( docs_path = create_structure( )
[CALL] lib/pydoc_generator (create_pydocs)[299] -> lib/pydoc_generator (create_structure)[61]
{"base_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc","package_name":"lib"}
[RETURN] lib/pydoc_generator[87] ( return doc_dir ) -> PosixPath:
Error in trace_all return handling: Object of type PosixPath is not JSON serializable
[CALL] lib/pydoc_generator ( generate_pydoc( )
[CALL] lib/pydoc_generator (create_pydocs)[304] -> lib/pydoc_generator (generate_pydoc)[89]
{"project_path":"/Users/emvaldes/.repos/devops/workflows","file_path":"/Users/emvaldes/.repos/devops/workflows/lib/__init__.py","docs_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib","configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[126] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/lib/__init__.py...","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/lib/__init__.py...","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5f30>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Generating documentation for /Users/emvaldes/.repos/devops/workflows/lib/__init__.py...
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5f30>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Generating documentation for /Users/emvaldes/.repos/devops/workflows/lib/__init__.py...
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Original Relative Path: {relative_file_path}") )
[CALL] lib/pydoc_generator (generate_pydoc)[142] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c4550>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Original Relative Path: lib/__init__.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c4550>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Original Relative Path: lib/__init__.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Sanitized Module Path: {module_name}") )
[CALL] lib/pydoc_generator (generate_pydoc)[143] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c6230>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Sanitized Module Path: lib.__init__
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c6230>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Sanitized Module Path: lib.__init__
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[145] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Relative File Path: lib/__init__.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Relative File Path: lib/__init__.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5ba0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Relative File Path: lib/__init__.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5ba0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Relative File Path: lib/__init__.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x1059c5ff0>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x1059c5ff0>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x1059c5ff0>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[168] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Running PyDoc Command: python -m pydoc lib.__init__","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Running PyDoc Command: python -m pydoc lib.__init__","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5930>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Running PyDoc Command: python -m pydoc lib.__init__
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5930>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Running PyDoc Command: python -m pydoc lib.__init__
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[188]
{"match":"<re.Match object; span=(116, 155), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[188] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[197] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib/__init__.pydoc","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib/__init__.pydoc","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c59c0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib/__init__.pydoc
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c59c0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib/__init__.pydoc
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[248] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/lib/__init__.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/lib/__init__.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c59c0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Finished processing /Users/emvaldes/.repos/devops/workflows/lib/__init__.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c59c0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Finished processing /Users/emvaldes/.repos/devops/workflows/lib/__init__.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[RETURN] lib/pydoc_generator[248] ( log_utils.log_message( ) -> NoneType: None
[CALL] lib/pydoc_generator ( docs_path = create_structure( )
[CALL] lib/pydoc_generator (create_pydocs)[299] -> lib/pydoc_generator (create_structure)[61]
{"base_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc","package_name":"lib"}
[RETURN] lib/pydoc_generator[87] ( return doc_dir ) -> PosixPath:
Error in trace_all return handling: Object of type PosixPath is not JSON serializable
[CALL] lib/pydoc_generator ( generate_pydoc( )
[CALL] lib/pydoc_generator (create_pydocs)[304] -> lib/pydoc_generator (generate_pydoc)[89]
{"project_path":"/Users/emvaldes/.repos/devops/workflows","file_path":"/Users/emvaldes/.repos/devops/workflows/lib/system_params.py","docs_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib","configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[126] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/lib/system_params.py...","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/lib/system_params.py...","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5ea0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Generating documentation for /Users/emvaldes/.repos/devops/workflows/lib/system_params.py...
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5ea0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Generating documentation for /Users/emvaldes/.repos/devops/workflows/lib/system_params.py...
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Original Relative Path: {relative_file_path}") )
[CALL] lib/pydoc_generator (generate_pydoc)[142] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5f60>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Original Relative Path: lib/system_params.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5f60>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Original Relative Path: lib/system_params.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Sanitized Module Path: {module_name}") )
[CALL] lib/pydoc_generator (generate_pydoc)[143] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5720>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Sanitized Module Path: lib.system_params
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5720>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Sanitized Module Path: lib.system_params
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[145] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Relative File Path: lib/system_params.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Relative File Path: lib/system_params.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5bd0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Relative File Path: lib/system_params.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5bd0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Relative File Path: lib/system_params.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x1059c5c60>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x1059c5c60>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x1059c5c60>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[168] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Running PyDoc Command: python -m pydoc lib.system_params","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Running PyDoc Command: python -m pydoc lib.system_params","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5270>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Running PyDoc Command: python -m pydoc lib.system_params
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5270>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Running PyDoc Command: python -m pydoc lib.system_params
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[188]
{"match":"<re.Match object; span=(3623, 3638), match='/Users/emvaldes'>"}
[RETURN] lib/pydoc_generator[188] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<user-home>
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[188]
{"match":"<re.Match object; span=(3696, 3711), match='/Users/emvaldes'>"}
[RETURN] lib/pydoc_generator[188] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<user-home>
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[188]
{"match":"<re.Match object; span=(3779, 3794), match='/Users/emvaldes'>"}
[RETURN] lib/pydoc_generator[188] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<user-home>
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[188]
{"match":"<re.Match object; span=(3846, 3885), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[188] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[188]
{"match":"<re.Match object; span=(3981, 3996), match='/Users/emvaldes'>"}
[RETURN] lib/pydoc_generator[188] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<user-home>
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[188]
{"match":"<re.Match object; span=(4058, 4073), match='/Users/emvaldes'>"}
[RETURN] lib/pydoc_generator[188] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<user-home>
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[188]
{"match":"<re.Match object; span=(4136, 4151), match='/Users/emvaldes'>"}
[RETURN] lib/pydoc_generator[188] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<user-home>
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[188]
{"match":"<re.Match object; span=(4203, 4242), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[188] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[197] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib/system_params.pydoc","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib/system_params.pydoc","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c58a0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib/system_params.pydoc
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c58a0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib/system_params.pydoc
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[248] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/lib/system_params.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/lib/system_params.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c58a0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Finished processing /Users/emvaldes/.repos/devops/workflows/lib/system_params.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c58a0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Finished processing /Users/emvaldes/.repos/devops/workflows/lib/system_params.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[RETURN] lib/pydoc_generator[248] ( log_utils.log_message( ) -> NoneType: None
[CALL] lib/pydoc_generator ( docs_path = create_structure( )
[CALL] lib/pydoc_generator (create_pydocs)[299] -> lib/pydoc_generator (create_structure)[61]
{"base_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc","package_name":"lib"}
[RETURN] lib/pydoc_generator[87] ( return doc_dir ) -> PosixPath:
Error in trace_all return handling: Object of type PosixPath is not JSON serializable
[CALL] lib/pydoc_generator ( generate_pydoc( )
[CALL] lib/pydoc_generator (create_pydocs)[304] -> lib/pydoc_generator (generate_pydoc)[89]
{"project_path":"/Users/emvaldes/.repos/devops/workflows","file_path":"/Users/emvaldes/.repos/devops/workflows/lib/parsing_userinput.py","docs_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib","configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[126] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/lib/parsing_userinput.py...","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/lib/parsing_userinput.py...","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5ea0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Generating documentation for /Users/emvaldes/.repos/devops/workflows/lib/parsing_userinput.py...
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5ea0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Generating documentation for /Users/emvaldes/.repos/devops/workflows/lib/parsing_userinput.py...
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Original Relative Path: {relative_file_path}") )
[CALL] lib/pydoc_generator (generate_pydoc)[142] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5bd0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Original Relative Path: lib/parsing_userinput.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5bd0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Original Relative Path: lib/parsing_userinput.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Sanitized Module Path: {module_name}") )
[CALL] lib/pydoc_generator (generate_pydoc)[143] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5ba0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Sanitized Module Path: lib.parsing_userinput
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5ba0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Sanitized Module Path: lib.parsing_userinput
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[145] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Relative File Path: lib/parsing_userinput.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Relative File Path: lib/parsing_userinput.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c6230>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Relative File Path: lib/parsing_userinput.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c6230>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Relative File Path: lib/parsing_userinput.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x1059c5660>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x1059c5660>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x1059c5660>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[168] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Running PyDoc Command: python -m pydoc lib.parsing_userinput","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Running PyDoc Command: python -m pydoc lib.parsing_userinput","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c6290>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Running PyDoc Command: python -m pydoc lib.parsing_userinput
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c6290>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Running PyDoc Command: python -m pydoc lib.parsing_userinput
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[188]
{"match":"<re.Match object; span=(4320, 4359), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[188] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[197] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib/parsing_userinput.pydoc","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib/parsing_userinput.pydoc","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5b70>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib/parsing_userinput.pydoc
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5b70>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib/parsing_userinput.pydoc
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[248] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/lib/parsing_userinput.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/lib/parsing_userinput.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5b70>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Finished processing /Users/emvaldes/.repos/devops/workflows/lib/parsing_userinput.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5b70>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Finished processing /Users/emvaldes/.repos/devops/workflows/lib/parsing_userinput.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[RETURN] lib/pydoc_generator[248] ( log_utils.log_message( ) -> NoneType: None
[CALL] lib/pydoc_generator ( docs_path = create_structure( )
[CALL] lib/pydoc_generator (create_pydocs)[299] -> lib/pydoc_generator (create_structure)[61]
{"base_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc","package_name":"lib"}
[RETURN] lib/pydoc_generator[87] ( return doc_dir ) -> PosixPath:
Error in trace_all return handling: Object of type PosixPath is not JSON serializable
[CALL] lib/pydoc_generator ( generate_pydoc( )
[CALL] lib/pydoc_generator (create_pydocs)[304] -> lib/pydoc_generator (generate_pydoc)[89]
{"project_path":"/Users/emvaldes/.repos/devops/workflows","file_path":"/Users/emvaldes/.repos/devops/workflows/lib/pydoc_generator.py","docs_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib","configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[126] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/lib/pydoc_generator.py...","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/lib/pydoc_generator.py...","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5540>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Generating documentation for /Users/emvaldes/.repos/devops/workflows/lib/pydoc_generator.py...
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5540>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Generating documentation for /Users/emvaldes/.repos/devops/workflows/lib/pydoc_generator.py...
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Original Relative Path: {relative_file_path}") )
[CALL] lib/pydoc_generator (generate_pydoc)[142] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c6230>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Original Relative Path: lib/pydoc_generator.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c6230>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Original Relative Path: lib/pydoc_generator.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Sanitized Module Path: {module_name}") )
[CALL] lib/pydoc_generator (generate_pydoc)[143] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c6170>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Sanitized Module Path: lib.pydoc_generator
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c6170>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Sanitized Module Path: lib.pydoc_generator
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[145] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Relative File Path: lib/pydoc_generator.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Relative File Path: lib/pydoc_generator.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5720>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Relative File Path: lib/pydoc_generator.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5720>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Relative File Path: lib/pydoc_generator.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x1059c5480>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x1059c5480>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x1059c5480>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[168] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Running PyDoc Command: python -m pydoc lib.pydoc_generator","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Running PyDoc Command: python -m pydoc lib.pydoc_generator","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c60b0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Running PyDoc Command: python -m pydoc lib.pydoc_generator
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c60b0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Running PyDoc Command: python -m pydoc lib.pydoc_generator
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[188]
{"match":"<re.Match object; span=(3702, 3741), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[188] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[197] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib/pydoc_generator.pydoc","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib/pydoc_generator.pydoc","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c54b0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib/pydoc_generator.pydoc
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c54b0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib/pydoc_generator.pydoc
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[248] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/lib/pydoc_generator.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/lib/pydoc_generator.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c54b0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Finished processing /Users/emvaldes/.repos/devops/workflows/lib/pydoc_generator.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c54b0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Finished processing /Users/emvaldes/.repos/devops/workflows/lib/pydoc_generator.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[RETURN] lib/pydoc_generator[248] ( log_utils.log_message( ) -> NoneType: None
[CALL] lib/pydoc_generator ( docs_path = create_structure( )
[CALL] lib/pydoc_generator (create_pydocs)[299] -> lib/pydoc_generator (create_structure)[61]
{"base_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc","package_name":"lib"}
[RETURN] lib/pydoc_generator[87] ( return doc_dir ) -> PosixPath:
Error in trace_all return handling: Object of type PosixPath is not JSON serializable
[CALL] lib/pydoc_generator ( generate_pydoc( )
[CALL] lib/pydoc_generator (create_pydocs)[304] -> lib/pydoc_generator (generate_pydoc)[89]
{"project_path":"/Users/emvaldes/.repos/devops/workflows","file_path":"/Users/emvaldes/.repos/devops/workflows/lib/manage_accesstoken.py","docs_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib","configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[126] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/lib/manage_accesstoken.py...","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/lib/manage_accesstoken.py...","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c6110>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Generating documentation for /Users/emvaldes/.repos/devops/workflows/lib/manage_accesstoken.py...
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c6110>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Generating documentation for /Users/emvaldes/.repos/devops/workflows/lib/manage_accesstoken.py...
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Original Relative Path: {relative_file_path}") )
[CALL] lib/pydoc_generator (generate_pydoc)[142] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5720>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Original Relative Path: lib/manage_accesstoken.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5720>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Original Relative Path: lib/manage_accesstoken.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Sanitized Module Path: {module_name}") )
[CALL] lib/pydoc_generator (generate_pydoc)[143] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5de0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Sanitized Module Path: lib.manage_accesstoken
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5de0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Sanitized Module Path: lib.manage_accesstoken
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[145] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Relative File Path: lib/manage_accesstoken.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Relative File Path: lib/manage_accesstoken.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5ba0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Relative File Path: lib/manage_accesstoken.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5ba0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Relative File Path: lib/manage_accesstoken.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x1059c5fc0>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x1059c5fc0>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x1059c5fc0>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[168] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Running PyDoc Command: python -m pydoc lib.manage_accesstoken","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Running PyDoc Command: python -m pydoc lib.manage_accesstoken","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c6140>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Running PyDoc Command: python -m pydoc lib.manage_accesstoken
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c6140>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Running PyDoc Command: python -m pydoc lib.manage_accesstoken
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[188]
{"match":"<re.Match object; span=(2164, 2203), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[188] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[197] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib/manage_accesstoken.pydoc","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib/manage_accesstoken.pydoc","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c58d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib/manage_accesstoken.pydoc
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c58d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib/manage_accesstoken.pydoc
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[248] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/lib/manage_accesstoken.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/lib/manage_accesstoken.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c58d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Finished processing /Users/emvaldes/.repos/devops/workflows/lib/manage_accesstoken.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c58d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Finished processing /Users/emvaldes/.repos/devops/workflows/lib/manage_accesstoken.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[RETURN] lib/pydoc_generator[248] ( log_utils.log_message( ) -> NoneType: None
[CALL] lib/pydoc_generator ( docs_path = create_structure( )
[CALL] lib/pydoc_generator (create_pydocs)[299] -> lib/pydoc_generator (create_structure)[61]
{"base_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc","package_name":"lib"}
[RETURN] lib/pydoc_generator[87] ( return doc_dir ) -> PosixPath:
Error in trace_all return handling: Object of type PosixPath is not JSON serializable
[CALL] lib/pydoc_generator ( generate_pydoc( )
[CALL] lib/pydoc_generator (create_pydocs)[304] -> lib/pydoc_generator (generate_pydoc)[89]
{"project_path":"/Users/emvaldes/.repos/devops/workflows","file_path":"/Users/emvaldes/.repos/devops/workflows/lib/pkgconfig_loader.py","docs_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib","configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[126] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/lib/pkgconfig_loader.py...","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/lib/pkgconfig_loader.py...","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5c90>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Generating documentation for /Users/emvaldes/.repos/devops/workflows/lib/pkgconfig_loader.py...
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5c90>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Generating documentation for /Users/emvaldes/.repos/devops/workflows/lib/pkgconfig_loader.py...
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Original Relative Path: {relative_file_path}") )
[CALL] lib/pydoc_generator (generate_pydoc)[142] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5ba0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Original Relative Path: lib/pkgconfig_loader.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5ba0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Original Relative Path: lib/pkgconfig_loader.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Sanitized Module Path: {module_name}") )
[CALL] lib/pydoc_generator (generate_pydoc)[143] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5f90>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Sanitized Module Path: lib.pkgconfig_loader
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5f90>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Sanitized Module Path: lib.pkgconfig_loader
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[145] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Relative File Path: lib/pkgconfig_loader.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Relative File Path: lib/pkgconfig_loader.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c6170>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Relative File Path: lib/pkgconfig_loader.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c6170>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Relative File Path: lib/pkgconfig_loader.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x1059c61d0>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x1059c61d0>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x1059c61d0>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[168] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Running PyDoc Command: python -m pydoc lib.pkgconfig_loader","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Running PyDoc Command: python -m pydoc lib.pkgconfig_loader","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c60e0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Running PyDoc Command: python -m pydoc lib.pkgconfig_loader
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c60e0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Running PyDoc Command: python -m pydoc lib.pkgconfig_loader
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[188]
{"match":"<re.Match object; span=(5105, 5144), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[188] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[188]
{"match":"<re.Match object; span=(5187, 5226), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[188] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[188]
{"match":"<re.Match object; span=(5261, 5300), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[188] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[188]
{"match":"<re.Match object; span=(5365, 5404), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[188] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[197] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib/pkgconfig_loader.pydoc","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib/pkgconfig_loader.pydoc","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5480>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib/pkgconfig_loader.pydoc
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5480>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib/pkgconfig_loader.pydoc
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[248] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/lib/pkgconfig_loader.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/lib/pkgconfig_loader.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5480>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Finished processing /Users/emvaldes/.repos/devops/workflows/lib/pkgconfig_loader.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5480>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Finished processing /Users/emvaldes/.repos/devops/workflows/lib/pkgconfig_loader.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[RETURN] lib/pydoc_generator[248] ( log_utils.log_message( ) -> NoneType: None
[CALL] lib/pydoc_generator ( docs_path = create_structure( )
[CALL] lib/pydoc_generator (create_pydocs)[299] -> lib/pydoc_generator (create_structure)[61]
{"base_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc","package_name":"lib"}
[RETURN] lib/pydoc_generator[87] ( return doc_dir ) -> PosixPath:
Error in trace_all return handling: Object of type PosixPath is not JSON serializable
[CALL] lib/pydoc_generator ( generate_pydoc( )
[CALL] lib/pydoc_generator (create_pydocs)[304] -> lib/pydoc_generator (generate_pydoc)[89]
{"project_path":"/Users/emvaldes/.repos/devops/workflows","file_path":"/Users/emvaldes/.repos/devops/workflows/lib/argument_parser.py","docs_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib","configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[126] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/lib/argument_parser.py...","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/lib/argument_parser.py...","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5c90>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Generating documentation for /Users/emvaldes/.repos/devops/workflows/lib/argument_parser.py...
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5c90>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Generating documentation for /Users/emvaldes/.repos/devops/workflows/lib/argument_parser.py...
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Original Relative Path: {relative_file_path}") )
[CALL] lib/pydoc_generator (generate_pydoc)[142] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c6170>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Original Relative Path: lib/argument_parser.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c6170>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Original Relative Path: lib/argument_parser.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Sanitized Module Path: {module_name}") )
[CALL] lib/pydoc_generator (generate_pydoc)[143] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5ff0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Sanitized Module Path: lib.argument_parser
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5ff0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Sanitized Module Path: lib.argument_parser
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[145] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Relative File Path: lib/argument_parser.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Relative File Path: lib/argument_parser.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5de0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Relative File Path: lib/argument_parser.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c5de0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Relative File Path: lib/argument_parser.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x1059c6260>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x1059c6260>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x1059c6260>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[168] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Running PyDoc Command: python -m pydoc lib.argument_parser","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Running PyDoc Command: python -m pydoc lib.argument_parser","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c4550>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Running PyDoc Command: python -m pydoc lib.argument_parser
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x1059c4550>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Running PyDoc Command: python -m pydoc lib.argument_parser
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[188]
{"match":"<re.Match object; span=(5332, 5347), match='/Users/emvaldes'>"}
[RETURN] lib/pydoc_generator[188] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<user-home>
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[188]
{"match":"<re.Match object; span=(5399, 5438), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[188] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[197] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib/argument_parser.pydoc","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib/argument_parser.pydoc","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib/argument_parser.pydoc
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib/argument_parser.pydoc
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[248] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/lib/argument_parser.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/lib/argument_parser.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Finished processing /Users/emvaldes/.repos/devops/workflows/lib/argument_parser.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Finished processing /Users/emvaldes/.repos/devops/workflows/lib/argument_parser.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[RETURN] lib/pydoc_generator[248] ( log_utils.log_message( ) -> NoneType: None
[CALL] lib/pydoc_generator ( docs_path = create_structure( )
[CALL] lib/pydoc_generator (create_pydocs)[299] -> lib/pydoc_generator (create_structure)[61]
{"base_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc","package_name":".github/scripts"}
[RETURN] lib/pydoc_generator[87] ( return doc_dir ) -> PosixPath:
Error in trace_all return handling: Object of type PosixPath is not JSON serializable
[CALL] lib/pydoc_generator ( generate_pydoc( )
[CALL] lib/pydoc_generator (create_pydocs)[304] -> lib/pydoc_generator (generate_pydoc)[89]
{"project_path":"/Users/emvaldes/.repos/devops/workflows","file_path":"/Users/emvaldes/.repos/devops/workflows/.github/scripts/extract_pytest_functions.py","docs_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc/.github/scripts","configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[126] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/.github/scripts/extract_pytest_functions.py...","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/.github/scripts/extract_pytest_functions.py...","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x104c0a9b0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Generating documentation for /Users/emvaldes/.repos/devops/workflows/.github/scripts/extract_pytest_functions.py...
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x104c0a9b0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Generating documentation for /Users/emvaldes/.repos/devops/workflows/.github/scripts/extract_pytest_functions.py...
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Original Relative Path: {relative_file_path}") )
[CALL] lib/pydoc_generator (generate_pydoc)[142] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x104c0a9b0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Original Relative Path: .github/scripts/extract_pytest_functions.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x104c0a9b0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Original Relative Path: .github/scripts/extract_pytest_functions.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Sanitized Module Path: {module_name}") )
[CALL] lib/pydoc_generator (generate_pydoc)[143] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x104c0a9b0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Sanitized Module Path: .github.scripts.extract_pytest_functions
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x104c0a9b0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Sanitized Module Path: .github.scripts.extract_pytest_functions
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[145] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Relative File Path: .github/scripts/extract_pytest_functions.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Relative File Path: .github/scripts/extract_pytest_functions.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x104c0a9b0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Relative File Path: .github/scripts/extract_pytest_functions.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x104c0a9b0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Relative File Path: .github/scripts/extract_pytest_functions.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x104c0a9b0>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: True
true
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[168] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Running PyDoc Command: python -m pydoc ./.github/scripts/extract_pytest_functions.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Running PyDoc Command: python -m pydoc ./.github/scripts/extract_pytest_functions.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x104c0a9b0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Running PyDoc Command: python -m pydoc ./.github/scripts/extract_pytest_functions.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x104c0a9b0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Running PyDoc Command: python -m pydoc ./.github/scripts/extract_pytest_functions.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[188]
{"match":"<re.Match object; span=(5276, 5315), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[188] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[197] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/.github/scripts/extract_pytest_functions.pydoc","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/.github/scripts/extract_pytest_functions.pydoc","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x104c0a9b0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/.github/scripts/extract_pytest_functions.pydoc
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x104c0a9b0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/.github/scripts/extract_pytest_functions.pydoc
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[248] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/.github/scripts/extract_pytest_functions.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/.github/scripts/extract_pytest_functions.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x104c0a9b0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Finished processing /Users/emvaldes/.repos/devops/workflows/.github/scripts/extract_pytest_functions.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x104c0a9b0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Finished processing /Users/emvaldes/.repos/devops/workflows/.github/scripts/extract_pytest_functions.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[RETURN] lib/pydoc_generator[248] ( log_utils.log_message( ) -> NoneType: None
[CALL] lib/pydoc_generator ( docs_path = create_structure( )
[CALL] lib/pydoc_generator (create_pydocs)[299] -> lib/pydoc_generator (create_structure)[61]
{"base_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc","package_name":".github/scripts"}
[RETURN] lib/pydoc_generator[87] ( return doc_dir ) -> PosixPath:
Error in trace_all return handling: Object of type PosixPath is not JSON serializable
[CALL] lib/pydoc_generator ( generate_pydoc( )
[CALL] lib/pydoc_generator (create_pydocs)[304] -> lib/pydoc_generator (generate_pydoc)[89]
{"project_path":"/Users/emvaldes/.repos/devops/workflows","file_path":"/Users/emvaldes/.repos/devops/workflows/.github/scripts/extract_pytest_resources.py","docs_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc/.github/scripts","configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[126] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/.github/scripts/extract_pytest_resources.py...","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/.github/scripts/extract_pytest_resources.py...","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x104c0a9b0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Generating documentation for /Users/emvaldes/.repos/devops/workflows/.github/scripts/extract_pytest_resources.py...
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x104c0a9b0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Generating documentation for /Users/emvaldes/.repos/devops/workflows/.github/scripts/extract_pytest_resources.py...
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Original Relative Path: {relative_file_path}") )
[CALL] lib/pydoc_generator (generate_pydoc)[142] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x104c0a9b0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Original Relative Path: .github/scripts/extract_pytest_resources.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x104c0a9b0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Original Relative Path: .github/scripts/extract_pytest_resources.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Sanitized Module Path: {module_name}") )
[CALL] lib/pydoc_generator (generate_pydoc)[143] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x104c0a9b0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Sanitized Module Path: .github.scripts.extract_pytest_resources
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x104c0a9b0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Sanitized Module Path: .github.scripts.extract_pytest_resources
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[145] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Relative File Path: .github/scripts/extract_pytest_resources.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Relative File Path: .github/scripts/extract_pytest_resources.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x104c0a9b0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Relative File Path: .github/scripts/extract_pytest_resources.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x104c0a9b0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Relative File Path: .github/scripts/extract_pytest_resources.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x104c0a9b0>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: True
true
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[168] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Running PyDoc Command: python -m pydoc ./.github/scripts/extract_pytest_resources.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Running PyDoc Command: python -m pydoc ./.github/scripts/extract_pytest_resources.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x104c0a9b0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Running PyDoc Command: python -m pydoc ./.github/scripts/extract_pytest_resources.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x104c0a9b0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Running PyDoc Command: python -m pydoc ./.github/scripts/extract_pytest_resources.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[188]
{"match":"<re.Match object; span=(5836, 5875), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[188] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[197] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/.github/scripts/extract_pytest_resources.pydoc","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/.github/scripts/extract_pytest_resources.pydoc","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x104c0a9b0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/.github/scripts/extract_pytest_resources.pydoc
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x104c0a9b0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/.github/scripts/extract_pytest_resources.pydoc
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[248] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/.github/scripts/extract_pytest_resources.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/.github/scripts/extract_pytest_resources.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x104c0a9b0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Finished processing /Users/emvaldes/.repos/devops/workflows/.github/scripts/extract_pytest_resources.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x104c0a9b0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Finished processing /Users/emvaldes/.repos/devops/workflows/.github/scripts/extract_pytest_resources.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[RETURN] lib/pydoc_generator[248] ( log_utils.log_message( ) -> NoneType: None
[CALL] lib/pydoc_generator ( docs_path = create_structure( )
[CALL] lib/pydoc_generator (create_pydocs)[299] -> lib/pydoc_generator (create_structure)[61]
{"base_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc","package_name":"packages/appflow_tracer"}
[RETURN] lib/pydoc_generator[87] ( return doc_dir ) -> PosixPath:
Error in trace_all return handling: Object of type PosixPath is not JSON serializable
[CALL] lib/pydoc_generator ( generate_pydoc( )
[CALL] lib/pydoc_generator (create_pydocs)[304] -> lib/pydoc_generator (generate_pydoc)[89]
{"project_path":"/Users/emvaldes/.repos/devops/workflows","file_path":"/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/tracing.py","docs_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/appflow_tracer","configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[126] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/tracing.py...","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/tracing.py...","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/tracing.py...
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/tracing.py...
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Original Relative Path: {relative_file_path}") )
[CALL] lib/pydoc_generator (generate_pydoc)[142] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Original Relative Path: packages/appflow_tracer/tracing.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Original Relative Path: packages/appflow_tracer/tracing.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Sanitized Module Path: {module_name}") )
[CALL] lib/pydoc_generator (generate_pydoc)[143] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Sanitized Module Path: packages.appflow_tracer.tracing
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Sanitized Module Path: packages.appflow_tracer.tracing
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[145] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Relative File Path: packages/appflow_tracer/tracing.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Relative File Path: packages/appflow_tracer/tracing.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Relative File Path: packages/appflow_tracer/tracing.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Relative File Path: packages/appflow_tracer/tracing.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[168] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Running PyDoc Command: python -m pydoc packages.appflow_tracer.tracing","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Running PyDoc Command: python -m pydoc packages.appflow_tracer.tracing","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Running PyDoc Command: python -m pydoc packages.appflow_tracer.tracing
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Running PyDoc Command: python -m pydoc packages.appflow_tracer.tracing
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[188]
{"match":"<re.Match object; span=(15516, 15555), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[188] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[188]
{"match":"<re.Match object; span=(16822, 16861), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[188] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[188]
{"match":"<re.Match object; span=(16900, 16939), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[188] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[188]
{"match":"<re.Match object; span=(16971, 17010), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[188] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[197] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/appflow_tracer/tracing.pydoc","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/appflow_tracer/tracing.pydoc","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/appflow_tracer/tracing.pydoc
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/appflow_tracer/tracing.pydoc
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[248] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/tracing.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/tracing.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Finished processing /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/tracing.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Finished processing /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/tracing.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[RETURN] lib/pydoc_generator[248] ( log_utils.log_message( ) -> NoneType: None
[CALL] lib/pydoc_generator ( docs_path = create_structure( )
[CALL] lib/pydoc_generator (create_pydocs)[299] -> lib/pydoc_generator (create_structure)[61]
{"base_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc","package_name":"packages/appflow_tracer"}
[RETURN] lib/pydoc_generator[87] ( return doc_dir ) -> PosixPath:
Error in trace_all return handling: Object of type PosixPath is not JSON serializable
[CALL] lib/pydoc_generator ( generate_pydoc( )
[CALL] lib/pydoc_generator (create_pydocs)[304] -> lib/pydoc_generator (generate_pydoc)[89]
{"project_path":"/Users/emvaldes/.repos/devops/workflows","file_path":"/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/tracing--legacy.py","docs_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/appflow_tracer","configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[126] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/tracing--legacy.py...","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/tracing--legacy.py...","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/tracing--legacy.py...
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/tracing--legacy.py...
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Original Relative Path: {relative_file_path}") )
[CALL] lib/pydoc_generator (generate_pydoc)[142] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Original Relative Path: packages/appflow_tracer/tracing--legacy.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Original Relative Path: packages/appflow_tracer/tracing--legacy.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Sanitized Module Path: {module_name}") )
[CALL] lib/pydoc_generator (generate_pydoc)[143] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Sanitized Module Path: packages.appflow_tracer.tracing--legacy
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Sanitized Module Path: packages.appflow_tracer.tracing--legacy
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[145] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Relative File Path: packages/appflow_tracer/tracing--legacy.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Relative File Path: packages/appflow_tracer/tracing--legacy.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Relative File Path: packages/appflow_tracer/tracing--legacy.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Relative File Path: packages/appflow_tracer/tracing--legacy.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[168] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Running PyDoc Command: python -m pydoc packages.appflow_tracer.tracing--legacy","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Running PyDoc Command: python -m pydoc packages.appflow_tracer.tracing--legacy","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Running PyDoc Command: python -m pydoc packages.appflow_tracer.tracing--legacy
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Running PyDoc Command: python -m pydoc packages.appflow_tracer.tracing--legacy
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[188]
{"match":"<re.Match object; span=(18267, 18306), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[188] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[188]
{"match":"<re.Match object; span=(19573, 19612), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[188] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[188]
{"match":"<re.Match object; span=(19651, 19690), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[188] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[188]
{"match":"<re.Match object; span=(19703, 19742), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[188] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[197] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/appflow_tracer/tracing--legacy.pydoc","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/appflow_tracer/tracing--legacy.pydoc","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/appflow_tracer/tracing--legacy.pydoc
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/appflow_tracer/tracing--legacy.pydoc
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[248] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/tracing--legacy.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/tracing--legacy.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Finished processing /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/tracing--legacy.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Finished processing /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/tracing--legacy.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[RETURN] lib/pydoc_generator[248] ( log_utils.log_message( ) -> NoneType: None
[CALL] lib/pydoc_generator ( docs_path = create_structure( )
[CALL] lib/pydoc_generator (create_pydocs)[299] -> lib/pydoc_generator (create_structure)[61]
{"base_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc","package_name":"packages/appflow_tracer"}
[RETURN] lib/pydoc_generator[87] ( return doc_dir ) -> PosixPath:
Error in trace_all return handling: Object of type PosixPath is not JSON serializable
[CALL] lib/pydoc_generator ( generate_pydoc( )
[CALL] lib/pydoc_generator (create_pydocs)[304] -> lib/pydoc_generator (generate_pydoc)[89]
{"project_path":"/Users/emvaldes/.repos/devops/workflows","file_path":"/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/__init__.py","docs_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/appflow_tracer","configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[126] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/__init__.py...","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/__init__.py...","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/__init__.py...
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/__init__.py...
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Original Relative Path: {relative_file_path}") )
[CALL] lib/pydoc_generator (generate_pydoc)[142] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Original Relative Path: packages/appflow_tracer/__init__.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Original Relative Path: packages/appflow_tracer/__init__.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Sanitized Module Path: {module_name}") )
[CALL] lib/pydoc_generator (generate_pydoc)[143] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Sanitized Module Path: packages.appflow_tracer.__init__
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Sanitized Module Path: packages.appflow_tracer.__init__
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[145] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Relative File Path: packages/appflow_tracer/__init__.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Relative File Path: packages/appflow_tracer/__init__.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Relative File Path: packages/appflow_tracer/__init__.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Relative File Path: packages/appflow_tracer/__init__.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[168] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Running PyDoc Command: python -m pydoc packages.appflow_tracer.__init__","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Running PyDoc Command: python -m pydoc packages.appflow_tracer.__init__","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Running PyDoc Command: python -m pydoc packages.appflow_tracer.__init__
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Running PyDoc Command: python -m pydoc packages.appflow_tracer.__init__
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[188]
{"match":"<re.Match object; span=(1942, 1981), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[188] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[197] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/appflow_tracer/__init__.pydoc","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/appflow_tracer/__init__.pydoc","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/appflow_tracer/__init__.pydoc
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/appflow_tracer/__init__.pydoc
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[248] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/__init__.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/__init__.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Finished processing /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/__init__.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Finished processing /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/__init__.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[RETURN] lib/pydoc_generator[248] ( log_utils.log_message( ) -> NoneType: None
[CALL] lib/pydoc_generator ( docs_path = create_structure( )
[CALL] lib/pydoc_generator (create_pydocs)[299] -> lib/pydoc_generator (create_structure)[61]
{"base_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc","package_name":"packages/appflow_tracer"}
[RETURN] lib/pydoc_generator[87] ( return doc_dir ) -> PosixPath:
Error in trace_all return handling: Object of type PosixPath is not JSON serializable
[CALL] lib/pydoc_generator ( generate_pydoc( )
[CALL] lib/pydoc_generator (create_pydocs)[304] -> lib/pydoc_generator (generate_pydoc)[89]
{"project_path":"/Users/emvaldes/.repos/devops/workflows","file_path":"/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/__main__.py","docs_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/appflow_tracer","configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[126] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/__main__.py...","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/__main__.py...","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/__main__.py...
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/__main__.py...
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Original Relative Path: {relative_file_path}") )
[CALL] lib/pydoc_generator (generate_pydoc)[142] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Original Relative Path: packages/appflow_tracer/__main__.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Original Relative Path: packages/appflow_tracer/__main__.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Sanitized Module Path: {module_name}") )
[CALL] lib/pydoc_generator (generate_pydoc)[143] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Sanitized Module Path: packages.appflow_tracer.__main__
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Sanitized Module Path: packages.appflow_tracer.__main__
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[145] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Relative File Path: packages/appflow_tracer/__main__.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Relative File Path: packages/appflow_tracer/__main__.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Relative File Path: packages/appflow_tracer/__main__.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Relative File Path: packages/appflow_tracer/__main__.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[168] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Running PyDoc Command: python -m pydoc packages.appflow_tracer.__main__","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Running PyDoc Command: python -m pydoc packages.appflow_tracer.__main__","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Running PyDoc Command: python -m pydoc packages.appflow_tracer.__main__
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Running PyDoc Command: python -m pydoc packages.appflow_tracer.__main__
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[188]
{"match":"<re.Match object; span=(196, 235), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[188] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[197] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/appflow_tracer/__main__.pydoc","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/appflow_tracer/__main__.pydoc","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/appflow_tracer/__main__.pydoc
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/appflow_tracer/__main__.pydoc
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[248] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/__main__.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/__main__.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Finished processing /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/__main__.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Finished processing /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/__main__.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[RETURN] lib/pydoc_generator[248] ( log_utils.log_message( ) -> NoneType: None
[CALL] lib/pydoc_generator ( docs_path = create_structure( )
[CALL] lib/pydoc_generator (create_pydocs)[299] -> lib/pydoc_generator (create_structure)[61]
{"base_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc","package_name":"packages/requirements"}
[RETURN] lib/pydoc_generator[87] ( return doc_dir ) -> PosixPath:
Error in trace_all return handling: Object of type PosixPath is not JSON serializable
[CALL] lib/pydoc_generator ( generate_pydoc( )
[CALL] lib/pydoc_generator (create_pydocs)[304] -> lib/pydoc_generator (generate_pydoc)[89]
{"project_path":"/Users/emvaldes/.repos/devops/workflows","file_path":"/Users/emvaldes/.repos/devops/workflows/packages/requirements/__init__.py","docs_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/requirements","configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[126] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/requirements/__init__.py...","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/requirements/__init__.py...","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x104c0a9b0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/requirements/__init__.py...
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x104c0a9b0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/requirements/__init__.py...
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Original Relative Path: {relative_file_path}") )
[CALL] lib/pydoc_generator (generate_pydoc)[142] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x104c0a9b0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Original Relative Path: packages/requirements/__init__.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x104c0a9b0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Original Relative Path: packages/requirements/__init__.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Sanitized Module Path: {module_name}") )
[CALL] lib/pydoc_generator (generate_pydoc)[143] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x104c0a9b0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Sanitized Module Path: packages.requirements.__init__
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x104c0a9b0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Sanitized Module Path: packages.requirements.__init__
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[145] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Relative File Path: packages/requirements/__init__.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Relative File Path: packages/requirements/__init__.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x104c0a9b0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Relative File Path: packages/requirements/__init__.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x104c0a9b0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Relative File Path: packages/requirements/__init__.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x104c0a9b0>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x104c0a9b0>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x104c0a9b0>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x104c0a9b0>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[168] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Running PyDoc Command: python -m pydoc packages.requirements.__init__","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Running PyDoc Command: python -m pydoc packages.requirements.__init__","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x104c0a9b0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Running PyDoc Command: python -m pydoc packages.requirements.__init__
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x104c0a9b0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Running PyDoc Command: python -m pydoc packages.requirements.__init__
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[188]
{"match":"<re.Match object; span=(654, 693), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[188] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[197] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/requirements/__init__.pydoc","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/requirements/__init__.pydoc","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/requirements/__init__.pydoc
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/requirements/__init__.pydoc
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[248] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/packages/requirements/__init__.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/packages/requirements/__init__.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Finished processing /Users/emvaldes/.repos/devops/workflows/packages/requirements/__init__.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Finished processing /Users/emvaldes/.repos/devops/workflows/packages/requirements/__init__.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[RETURN] lib/pydoc_generator[248] ( log_utils.log_message( ) -> NoneType: None
[CALL] lib/pydoc_generator ( docs_path = create_structure( )
[CALL] lib/pydoc_generator (create_pydocs)[299] -> lib/pydoc_generator (create_structure)[61]
{"base_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc","package_name":"packages/requirements"}
[RETURN] lib/pydoc_generator[87] ( return doc_dir ) -> PosixPath:
Error in trace_all return handling: Object of type PosixPath is not JSON serializable
[CALL] lib/pydoc_generator ( generate_pydoc( )
[CALL] lib/pydoc_generator (create_pydocs)[304] -> lib/pydoc_generator (generate_pydoc)[89]
{"project_path":"/Users/emvaldes/.repos/devops/workflows","file_path":"/Users/emvaldes/.repos/devops/workflows/packages/requirements/__main__.py","docs_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/requirements","configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[126] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/requirements/__main__.py...","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/requirements/__main__.py...","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/requirements/__main__.py...
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/requirements/__main__.py...
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Original Relative Path: {relative_file_path}") )
[CALL] lib/pydoc_generator (generate_pydoc)[142] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Original Relative Path: packages/requirements/__main__.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Original Relative Path: packages/requirements/__main__.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Sanitized Module Path: {module_name}") )
[CALL] lib/pydoc_generator (generate_pydoc)[143] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Sanitized Module Path: packages.requirements.__main__
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Sanitized Module Path: packages.requirements.__main__
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[145] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Relative File Path: packages/requirements/__main__.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Relative File Path: packages/requirements/__main__.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Relative File Path: packages/requirements/__main__.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Relative File Path: packages/requirements/__main__.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[168] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Running PyDoc Command: python -m pydoc packages.requirements.__main__","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Running PyDoc Command: python -m pydoc packages.requirements.__main__","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Running PyDoc Command: python -m pydoc packages.requirements.__main__
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Running PyDoc Command: python -m pydoc packages.requirements.__main__
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[188]
{"match":"<re.Match object; span=(188, 227), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[188] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[197] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/requirements/__main__.pydoc","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/requirements/__main__.pydoc","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/requirements/__main__.pydoc
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/requirements/__main__.pydoc
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[248] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/packages/requirements/__main__.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/packages/requirements/__main__.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Finished processing /Users/emvaldes/.repos/devops/workflows/packages/requirements/__main__.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Finished processing /Users/emvaldes/.repos/devops/workflows/packages/requirements/__main__.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[RETURN] lib/pydoc_generator[248] ( log_utils.log_message( ) -> NoneType: None
[CALL] lib/pydoc_generator ( docs_path = create_structure( )
[CALL] lib/pydoc_generator (create_pydocs)[299] -> lib/pydoc_generator (create_structure)[61]
{"base_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc","package_name":"packages/requirements"}
[RETURN] lib/pydoc_generator[87] ( return doc_dir ) -> PosixPath:
Error in trace_all return handling: Object of type PosixPath is not JSON serializable
[CALL] lib/pydoc_generator ( generate_pydoc( )
[CALL] lib/pydoc_generator (create_pydocs)[304] -> lib/pydoc_generator (generate_pydoc)[89]
{"project_path":"/Users/emvaldes/.repos/devops/workflows","file_path":"/Users/emvaldes/.repos/devops/workflows/packages/requirements/dependencies.py","docs_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/requirements","configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[126] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/requirements/dependencies.py...","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/requirements/dependencies.py...","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/requirements/dependencies.py...
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/requirements/dependencies.py...
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Original Relative Path: {relative_file_path}") )
[CALL] lib/pydoc_generator (generate_pydoc)[142] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Original Relative Path: packages/requirements/dependencies.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Original Relative Path: packages/requirements/dependencies.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Sanitized Module Path: {module_name}") )
[CALL] lib/pydoc_generator (generate_pydoc)[143] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Sanitized Module Path: packages.requirements.dependencies
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Sanitized Module Path: packages.requirements.dependencies
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[145] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Relative File Path: packages/requirements/dependencies.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Relative File Path: packages/requirements/dependencies.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Relative File Path: packages/requirements/dependencies.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Relative File Path: packages/requirements/dependencies.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[168] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Running PyDoc Command: python -m pydoc packages.requirements.dependencies","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Running PyDoc Command: python -m pydoc packages.requirements.dependencies","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Running PyDoc Command: python -m pydoc packages.requirements.dependencies
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Running PyDoc Command: python -m pydoc packages.requirements.dependencies
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[188]
{"match":"<re.Match object; span=(6215, 6254), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[188] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[188]
{"match":"<re.Match object; span=(7459, 7498), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[188] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[197] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/requirements/dependencies.pydoc","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/requirements/dependencies.pydoc","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/requirements/dependencies.pydoc
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/requirements/dependencies.pydoc
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[248] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/packages/requirements/dependencies.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/packages/requirements/dependencies.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Finished processing /Users/emvaldes/.repos/devops/workflows/packages/requirements/dependencies.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Finished processing /Users/emvaldes/.repos/devops/workflows/packages/requirements/dependencies.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[RETURN] lib/pydoc_generator[248] ( log_utils.log_message( ) -> NoneType: None
[CALL] lib/pydoc_generator ( docs_path = create_structure( )
[CALL] lib/pydoc_generator (create_pydocs)[299] -> lib/pydoc_generator (create_structure)[61]
{"base_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc","package_name":"packages/appflow_tracer/lib"}
[RETURN] lib/pydoc_generator[87] ( return doc_dir ) -> PosixPath:
Error in trace_all return handling: Object of type PosixPath is not JSON serializable
[CALL] lib/pydoc_generator ( generate_pydoc( )
[CALL] lib/pydoc_generator (create_pydocs)[304] -> lib/pydoc_generator (generate_pydoc)[89]
{"project_path":"/Users/emvaldes/.repos/devops/workflows","file_path":"/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/serialize_utils.py","docs_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/appflow_tracer/lib","configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[126] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/serialize_utils.py...","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/serialize_utils.py...","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/serialize_utils.py...
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/serialize_utils.py...
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Original Relative Path: {relative_file_path}") )
[CALL] lib/pydoc_generator (generate_pydoc)[142] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Original Relative Path: packages/appflow_tracer/lib/serialize_utils.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Original Relative Path: packages/appflow_tracer/lib/serialize_utils.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Sanitized Module Path: {module_name}") )
[CALL] lib/pydoc_generator (generate_pydoc)[143] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Sanitized Module Path: packages.appflow_tracer.lib.serialize_utils
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Sanitized Module Path: packages.appflow_tracer.lib.serialize_utils
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[145] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Relative File Path: packages/appflow_tracer/lib/serialize_utils.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Relative File Path: packages/appflow_tracer/lib/serialize_utils.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Relative File Path: packages/appflow_tracer/lib/serialize_utils.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Relative File Path: packages/appflow_tracer/lib/serialize_utils.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[168] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Running PyDoc Command: python -m pydoc packages.appflow_tracer.lib.serialize_utils","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Running PyDoc Command: python -m pydoc packages.appflow_tracer.lib.serialize_utils","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Running PyDoc Command: python -m pydoc packages.appflow_tracer.lib.serialize_utils
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Running PyDoc Command: python -m pydoc packages.appflow_tracer.lib.serialize_utils
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[188]
{"match":"<re.Match object; span=(3436, 3475), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[188] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[197] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/appflow_tracer/lib/serialize_utils.pydoc","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/appflow_tracer/lib/serialize_utils.pydoc","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/appflow_tracer/lib/serialize_utils.pydoc
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/appflow_tracer/lib/serialize_utils.pydoc
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[248] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/serialize_utils.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/serialize_utils.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Finished processing /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/serialize_utils.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Finished processing /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/serialize_utils.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[RETURN] lib/pydoc_generator[248] ( log_utils.log_message( ) -> NoneType: None
[CALL] lib/pydoc_generator ( docs_path = create_structure( )
[CALL] lib/pydoc_generator (create_pydocs)[299] -> lib/pydoc_generator (create_structure)[61]
{"base_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc","package_name":"packages/appflow_tracer/lib"}
[RETURN] lib/pydoc_generator[87] ( return doc_dir ) -> PosixPath:
Error in trace_all return handling: Object of type PosixPath is not JSON serializable
[CALL] lib/pydoc_generator ( generate_pydoc( )
[CALL] lib/pydoc_generator (create_pydocs)[304] -> lib/pydoc_generator (generate_pydoc)[89]
{"project_path":"/Users/emvaldes/.repos/devops/workflows","file_path":"/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/log_utils.py","docs_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/appflow_tracer/lib","configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[126] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/log_utils.py...","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/log_utils.py...","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/log_utils.py...
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/log_utils.py...
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Original Relative Path: {relative_file_path}") )
[CALL] lib/pydoc_generator (generate_pydoc)[142] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Original Relative Path: packages/appflow_tracer/lib/log_utils.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Original Relative Path: packages/appflow_tracer/lib/log_utils.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Sanitized Module Path: {module_name}") )
[CALL] lib/pydoc_generator (generate_pydoc)[143] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Sanitized Module Path: packages.appflow_tracer.lib.log_utils
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Sanitized Module Path: packages.appflow_tracer.lib.log_utils
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[145] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Relative File Path: packages/appflow_tracer/lib/log_utils.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Relative File Path: packages/appflow_tracer/lib/log_utils.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Relative File Path: packages/appflow_tracer/lib/log_utils.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Relative File Path: packages/appflow_tracer/lib/log_utils.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[168] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Running PyDoc Command: python -m pydoc packages.appflow_tracer.lib.log_utils","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Running PyDoc Command: python -m pydoc packages.appflow_tracer.lib.log_utils","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Running PyDoc Command: python -m pydoc packages.appflow_tracer.lib.log_utils
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Running PyDoc Command: python -m pydoc packages.appflow_tracer.lib.log_utils
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[188]
{"match":"<re.Match object; span=(5116, 5155), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[188] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[197] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/appflow_tracer/lib/log_utils.pydoc","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/appflow_tracer/lib/log_utils.pydoc","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/appflow_tracer/lib/log_utils.pydoc
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/appflow_tracer/lib/log_utils.pydoc
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[248] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/log_utils.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/log_utils.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Finished processing /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/log_utils.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Finished processing /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/log_utils.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[RETURN] lib/pydoc_generator[248] ( log_utils.log_message( ) -> NoneType: None
[CALL] lib/pydoc_generator ( docs_path = create_structure( )
[CALL] lib/pydoc_generator (create_pydocs)[299] -> lib/pydoc_generator (create_structure)[61]
{"base_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc","package_name":"packages/appflow_tracer/lib"}
[RETURN] lib/pydoc_generator[87] ( return doc_dir ) -> PosixPath:
Error in trace_all return handling: Object of type PosixPath is not JSON serializable
[CALL] lib/pydoc_generator ( generate_pydoc( )
[CALL] lib/pydoc_generator (create_pydocs)[304] -> lib/pydoc_generator (generate_pydoc)[89]
{"project_path":"/Users/emvaldes/.repos/devops/workflows","file_path":"/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/trace_utils.py","docs_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/appflow_tracer/lib","configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[126] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/trace_utils.py...","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/trace_utils.py...","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/trace_utils.py...
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/trace_utils.py...
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Original Relative Path: {relative_file_path}") )
[CALL] lib/pydoc_generator (generate_pydoc)[142] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Original Relative Path: packages/appflow_tracer/lib/trace_utils.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Original Relative Path: packages/appflow_tracer/lib/trace_utils.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Sanitized Module Path: {module_name}") )
[CALL] lib/pydoc_generator (generate_pydoc)[143] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Sanitized Module Path: packages.appflow_tracer.lib.trace_utils
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Sanitized Module Path: packages.appflow_tracer.lib.trace_utils
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[145] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Relative File Path: packages/appflow_tracer/lib/trace_utils.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Relative File Path: packages/appflow_tracer/lib/trace_utils.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Relative File Path: packages/appflow_tracer/lib/trace_utils.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Relative File Path: packages/appflow_tracer/lib/trace_utils.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[168] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Running PyDoc Command: python -m pydoc packages.appflow_tracer.lib.trace_utils","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Running PyDoc Command: python -m pydoc packages.appflow_tracer.lib.trace_utils","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Running PyDoc Command: python -m pydoc packages.appflow_tracer.lib.trace_utils
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Running PyDoc Command: python -m pydoc packages.appflow_tracer.lib.trace_utils
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[188]
{"match":"<re.Match object; span=(4589, 4628), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[188] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[197] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/appflow_tracer/lib/trace_utils.pydoc","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/appflow_tracer/lib/trace_utils.pydoc","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/appflow_tracer/lib/trace_utils.pydoc
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/appflow_tracer/lib/trace_utils.pydoc
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[248] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/trace_utils.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/trace_utils.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Finished processing /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/trace_utils.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Finished processing /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/trace_utils.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[RETURN] lib/pydoc_generator[248] ( log_utils.log_message( ) -> NoneType: None
[CALL] lib/pydoc_generator ( docs_path = create_structure( )
[CALL] lib/pydoc_generator (create_pydocs)[299] -> lib/pydoc_generator (create_structure)[61]
{"base_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc","package_name":"packages/appflow_tracer/lib"}
[RETURN] lib/pydoc_generator[87] ( return doc_dir ) -> PosixPath:
Error in trace_all return handling: Object of type PosixPath is not JSON serializable
[CALL] lib/pydoc_generator ( generate_pydoc( )
[CALL] lib/pydoc_generator (create_pydocs)[304] -> lib/pydoc_generator (generate_pydoc)[89]
{"project_path":"/Users/emvaldes/.repos/devops/workflows","file_path":"/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/__init__.py","docs_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/appflow_tracer/lib","configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[126] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/__init__.py...","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/__init__.py...","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/__init__.py...
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/__init__.py...
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Original Relative Path: {relative_file_path}") )
[CALL] lib/pydoc_generator (generate_pydoc)[142] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Original Relative Path: packages/appflow_tracer/lib/__init__.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Original Relative Path: packages/appflow_tracer/lib/__init__.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Sanitized Module Path: {module_name}") )
[CALL] lib/pydoc_generator (generate_pydoc)[143] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Sanitized Module Path: packages.appflow_tracer.lib.__init__
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Sanitized Module Path: packages.appflow_tracer.lib.__init__
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[145] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Relative File Path: packages/appflow_tracer/lib/__init__.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Relative File Path: packages/appflow_tracer/lib/__init__.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Relative File Path: packages/appflow_tracer/lib/__init__.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Relative File Path: packages/appflow_tracer/lib/__init__.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[168] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Running PyDoc Command: python -m pydoc packages.appflow_tracer.lib.__init__","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Running PyDoc Command: python -m pydoc packages.appflow_tracer.lib.__init__","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Running PyDoc Command: python -m pydoc packages.appflow_tracer.lib.__init__
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Running PyDoc Command: python -m pydoc packages.appflow_tracer.lib.__init__
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[188]
{"match":"<re.Match object; span=(296, 335), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[188] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[197] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/appflow_tracer/lib/__init__.pydoc","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/appflow_tracer/lib/__init__.pydoc","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/appflow_tracer/lib/__init__.pydoc
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/appflow_tracer/lib/__init__.pydoc
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[248] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/__init__.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/__init__.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Finished processing /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/__init__.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Finished processing /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/__init__.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[RETURN] lib/pydoc_generator[248] ( log_utils.log_message( ) -> NoneType: None
[CALL] lib/pydoc_generator ( docs_path = create_structure( )
[CALL] lib/pydoc_generator (create_pydocs)[299] -> lib/pydoc_generator (create_structure)[61]
{"base_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc","package_name":"packages/appflow_tracer/lib"}
[RETURN] lib/pydoc_generator[87] ( return doc_dir ) -> PosixPath:
Error in trace_all return handling: Object of type PosixPath is not JSON serializable
[CALL] lib/pydoc_generator ( generate_pydoc( )
[CALL] lib/pydoc_generator (create_pydocs)[304] -> lib/pydoc_generator (generate_pydoc)[89]
{"project_path":"/Users/emvaldes/.repos/devops/workflows","file_path":"/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/file_utils.py","docs_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/appflow_tracer/lib","configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[126] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/file_utils.py...","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/file_utils.py...","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/file_utils.py...
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/file_utils.py...
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Original Relative Path: {relative_file_path}") )
[CALL] lib/pydoc_generator (generate_pydoc)[142] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Original Relative Path: packages/appflow_tracer/lib/file_utils.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Original Relative Path: packages/appflow_tracer/lib/file_utils.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Sanitized Module Path: {module_name}") )
[CALL] lib/pydoc_generator (generate_pydoc)[143] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Sanitized Module Path: packages.appflow_tracer.lib.file_utils
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Sanitized Module Path: packages.appflow_tracer.lib.file_utils
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[145] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Relative File Path: packages/appflow_tracer/lib/file_utils.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Relative File Path: packages/appflow_tracer/lib/file_utils.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Relative File Path: packages/appflow_tracer/lib/file_utils.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Relative File Path: packages/appflow_tracer/lib/file_utils.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[168] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Running PyDoc Command: python -m pydoc packages.appflow_tracer.lib.file_utils","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Running PyDoc Command: python -m pydoc packages.appflow_tracer.lib.file_utils","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Running PyDoc Command: python -m pydoc packages.appflow_tracer.lib.file_utils
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Running PyDoc Command: python -m pydoc packages.appflow_tracer.lib.file_utils
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[188]
{"match":"<re.Match object; span=(4144, 4183), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[188] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[188]
{"match":"<re.Match object; span=(4222, 4261), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[188] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[188]
{"match":"<re.Match object; span=(4293, 4332), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[188] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[197] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/appflow_tracer/lib/file_utils.pydoc","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/appflow_tracer/lib/file_utils.pydoc","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/appflow_tracer/lib/file_utils.pydoc
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/appflow_tracer/lib/file_utils.pydoc
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[248] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/file_utils.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/file_utils.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Finished processing /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/file_utils.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Finished processing /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/file_utils.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[RETURN] lib/pydoc_generator[248] ( log_utils.log_message( ) -> NoneType: None
[CALL] lib/pydoc_generator ( docs_path = create_structure( )
[CALL] lib/pydoc_generator (create_pydocs)[299] -> lib/pydoc_generator (create_structure)[61]
{"base_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc","package_name":"tests/lib"}
[RETURN] lib/pydoc_generator[87] ( return doc_dir ) -> PosixPath:
Error in trace_all return handling: Object of type PosixPath is not JSON serializable
[CALL] lib/pydoc_generator ( generate_pydoc( )
[CALL] lib/pydoc_generator (create_pydocs)[304] -> lib/pydoc_generator (generate_pydoc)[89]
{"project_path":"/Users/emvaldes/.repos/devops/workflows","file_path":"/Users/emvaldes/.repos/devops/workflows/tests/lib/test_pydoc_generator.py","docs_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc/tests/lib","configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[126] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/tests/lib/test_pydoc_generator.py...","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/tests/lib/test_pydoc_generator.py...","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Generating documentation for /Users/emvaldes/.repos/devops/workflows/tests/lib/test_pydoc_generator.py...
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Generating documentation for /Users/emvaldes/.repos/devops/workflows/tests/lib/test_pydoc_generator.py...
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Original Relative Path: {relative_file_path}") )
[CALL] lib/pydoc_generator (generate_pydoc)[142] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Original Relative Path: tests/lib/test_pydoc_generator.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Original Relative Path: tests/lib/test_pydoc_generator.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Sanitized Module Path: {module_name}") )
[CALL] lib/pydoc_generator (generate_pydoc)[143] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Sanitized Module Path: tests.lib.test_pydoc_generator
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Sanitized Module Path: tests.lib.test_pydoc_generator
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[145] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Relative File Path: tests/lib/test_pydoc_generator.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Relative File Path: tests/lib/test_pydoc_generator.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Relative File Path: tests/lib/test_pydoc_generator.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Relative File Path: tests/lib/test_pydoc_generator.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[168] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Running PyDoc Command: python -m pydoc tests.lib.test_pydoc_generator","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Running PyDoc Command: python -m pydoc tests.lib.test_pydoc_generator","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Running PyDoc Command: python -m pydoc tests.lib.test_pydoc_generator
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Running PyDoc Command: python -m pydoc tests.lib.test_pydoc_generator
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[188]
{"match":"<re.Match object; span=(2488, 2527), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[188] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[188]
{"match":"<re.Match object; span=(2559, 2598), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[188] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[197] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/tests/lib/test_pydoc_generator.pydoc","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/tests/lib/test_pydoc_generator.pydoc","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/tests/lib/test_pydoc_generator.pydoc
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/tests/lib/test_pydoc_generator.pydoc
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[248] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/tests/lib/test_pydoc_generator.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/tests/lib/test_pydoc_generator.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Finished processing /Users/emvaldes/.repos/devops/workflows/tests/lib/test_pydoc_generator.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Finished processing /Users/emvaldes/.repos/devops/workflows/tests/lib/test_pydoc_generator.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[RETURN] lib/pydoc_generator[248] ( log_utils.log_message( ) -> NoneType: None
[CALL] lib/pydoc_generator ( docs_path = create_structure( )
[CALL] lib/pydoc_generator (create_pydocs)[299] -> lib/pydoc_generator (create_structure)[61]
{"base_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc","package_name":"tests/requirements/dependencies"}
[RETURN] lib/pydoc_generator[87] ( return doc_dir ) -> PosixPath:
Error in trace_all return handling: Object of type PosixPath is not JSON serializable
[CALL] lib/pydoc_generator ( generate_pydoc( )
[CALL] lib/pydoc_generator (create_pydocs)[304] -> lib/pydoc_generator (generate_pydoc)[89]
{"project_path":"/Users/emvaldes/.repos/devops/workflows","file_path":"/Users/emvaldes/.repos/devops/workflows/tests/requirements/dependencies/test_dependencies.py","docs_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc/tests/requirements/dependencies","configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[126] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/tests/requirements/dependencies/test_dependencies.py...","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/tests/requirements/dependencies/test_dependencies.py...","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Generating documentation for /Users/emvaldes/.repos/devops/workflows/tests/requirements/dependencies/test_dependencies.py...
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Generating documentation for /Users/emvaldes/.repos/devops/workflows/tests/requirements/dependencies/test_dependencies.py...
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Original Relative Path: {relative_file_path}") )
[CALL] lib/pydoc_generator (generate_pydoc)[142] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Original Relative Path: tests/requirements/dependencies/test_dependencies.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Original Relative Path: tests/requirements/dependencies/test_dependencies.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Sanitized Module Path: {module_name}") )
[CALL] lib/pydoc_generator (generate_pydoc)[143] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Sanitized Module Path: tests.requirements.dependencies.test_dependencies
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Sanitized Module Path: tests.requirements.dependencies.test_dependencies
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[145] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Relative File Path: tests/requirements/dependencies/test_dependencies.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Relative File Path: tests/requirements/dependencies/test_dependencies.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Relative File Path: tests/requirements/dependencies/test_dependencies.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Relative File Path: tests/requirements/dependencies/test_dependencies.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[168] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Running PyDoc Command: python -m pydoc tests.requirements.dependencies.test_dependencies","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Running PyDoc Command: python -m pydoc tests.requirements.dependencies.test_dependencies","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Running PyDoc Command: python -m pydoc tests.requirements.dependencies.test_dependencies
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Running PyDoc Command: python -m pydoc tests.requirements.dependencies.test_dependencies
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[188]
{"match":"<re.Match object; span=(8582, 8621), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[188] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[188]
{"match":"<re.Match object; span=(8653, 8692), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[188] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[197] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/tests/requirements/dependencies/test_dependencies.pydoc","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/tests/requirements/dependencies/test_dependencies.pydoc","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/tests/requirements/dependencies/test_dependencies.pydoc
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/tests/requirements/dependencies/test_dependencies.pydoc
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[248] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/tests/requirements/dependencies/test_dependencies.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/tests/requirements/dependencies/test_dependencies.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Finished processing /Users/emvaldes/.repos/devops/workflows/tests/requirements/dependencies/test_dependencies.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Finished processing /Users/emvaldes/.repos/devops/workflows/tests/requirements/dependencies/test_dependencies.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[RETURN] lib/pydoc_generator[248] ( log_utils.log_message( ) -> NoneType: None
[CALL] lib/pydoc_generator ( docs_path = create_structure( )
[CALL] lib/pydoc_generator (create_pydocs)[299] -> lib/pydoc_generator (create_structure)[61]
{"base_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc","package_name":"tests/appflow_tracer/tracing"}
[RETURN] lib/pydoc_generator[87] ( return doc_dir ) -> PosixPath:
Error in trace_all return handling: Object of type PosixPath is not JSON serializable
[CALL] lib/pydoc_generator ( generate_pydoc( )
[CALL] lib/pydoc_generator (create_pydocs)[304] -> lib/pydoc_generator (generate_pydoc)[89]
{"project_path":"/Users/emvaldes/.repos/devops/workflows","file_path":"/Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/test_tracing.py","docs_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc/tests/appflow_tracer/tracing","configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[126] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/test_tracing.py...","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/test_tracing.py...","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Generating documentation for /Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/test_tracing.py...
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Generating documentation for /Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/test_tracing.py...
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Original Relative Path: {relative_file_path}") )
[CALL] lib/pydoc_generator (generate_pydoc)[142] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Original Relative Path: tests/appflow_tracer/tracing/test_tracing.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Original Relative Path: tests/appflow_tracer/tracing/test_tracing.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Sanitized Module Path: {module_name}") )
[CALL] lib/pydoc_generator (generate_pydoc)[143] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Sanitized Module Path: tests.appflow_tracer.tracing.test_tracing
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Sanitized Module Path: tests.appflow_tracer.tracing.test_tracing
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[145] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Relative File Path: tests/appflow_tracer/tracing/test_tracing.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Relative File Path: tests/appflow_tracer/tracing/test_tracing.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Relative File Path: tests/appflow_tracer/tracing/test_tracing.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Relative File Path: tests/appflow_tracer/tracing/test_tracing.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[168] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Running PyDoc Command: python -m pydoc tests.appflow_tracer.tracing.test_tracing","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Running PyDoc Command: python -m pydoc tests.appflow_tracer.tracing.test_tracing","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Running PyDoc Command: python -m pydoc tests.appflow_tracer.tracing.test_tracing
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Running PyDoc Command: python -m pydoc tests.appflow_tracer.tracing.test_tracing
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[188]
{"match":"<re.Match object; span=(3780, 3819), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[188] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[188]
{"match":"<re.Match object; span=(3851, 3890), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[188] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[197] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/tests/appflow_tracer/tracing/test_tracing.pydoc","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/tests/appflow_tracer/tracing/test_tracing.pydoc","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/tests/appflow_tracer/tracing/test_tracing.pydoc
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/tests/appflow_tracer/tracing/test_tracing.pydoc
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[248] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/test_tracing.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/test_tracing.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Finished processing /Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/test_tracing.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Finished processing /Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/test_tracing.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[RETURN] lib/pydoc_generator[248] ( log_utils.log_message( ) -> NoneType: None
[CALL] lib/pydoc_generator ( docs_path = create_structure( )
[CALL] lib/pydoc_generator (create_pydocs)[299] -> lib/pydoc_generator (create_structure)[61]
{"base_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc","package_name":"tests/appflow_tracer/tracing/log_utils"}
[RETURN] lib/pydoc_generator[87] ( return doc_dir ) -> PosixPath:
Error in trace_all return handling: Object of type PosixPath is not JSON serializable
[CALL] lib/pydoc_generator ( generate_pydoc( )
[CALL] lib/pydoc_generator (create_pydocs)[304] -> lib/pydoc_generator (generate_pydoc)[89]
{"project_path":"/Users/emvaldes/.repos/devops/workflows","file_path":"/Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/log_utils/test_log_utils.py","docs_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc/tests/appflow_tracer/tracing/log_utils","configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[126] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/log_utils/test_log_utils.py...","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/log_utils/test_log_utils.py...","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Generating documentation for /Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/log_utils/test_log_utils.py...
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Generating documentation for /Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/log_utils/test_log_utils.py...
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Original Relative Path: {relative_file_path}") )
[CALL] lib/pydoc_generator (generate_pydoc)[142] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Original Relative Path: tests/appflow_tracer/tracing/log_utils/test_log_utils.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Original Relative Path: tests/appflow_tracer/tracing/log_utils/test_log_utils.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Sanitized Module Path: {module_name}") )
[CALL] lib/pydoc_generator (generate_pydoc)[143] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Sanitized Module Path: tests.appflow_tracer.tracing.log_utils.test_log_utils
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Sanitized Module Path: tests.appflow_tracer.tracing.log_utils.test_log_utils
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[145] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Relative File Path: tests/appflow_tracer/tracing/log_utils/test_log_utils.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Relative File Path: tests/appflow_tracer/tracing/log_utils/test_log_utils.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Relative File Path: tests/appflow_tracer/tracing/log_utils/test_log_utils.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Relative File Path: tests/appflow_tracer/tracing/log_utils/test_log_utils.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[168] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Running PyDoc Command: python -m pydoc tests.appflow_tracer.tracing.log_utils.test_log_utils","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Running PyDoc Command: python -m pydoc tests.appflow_tracer.tracing.log_utils.test_log_utils","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Running PyDoc Command: python -m pydoc tests.appflow_tracer.tracing.log_utils.test_log_utils
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Running PyDoc Command: python -m pydoc tests.appflow_tracer.tracing.log_utils.test_log_utils
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[188]
{"match":"<re.Match object; span=(3225, 3264), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[188] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[188]
{"match":"<re.Match object; span=(3296, 3335), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[188] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[197] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/tests/appflow_tracer/tracing/log_utils/test_log_utils.pydoc","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/tests/appflow_tracer/tracing/log_utils/test_log_utils.pydoc","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/tests/appflow_tracer/tracing/log_utils/test_log_utils.pydoc
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/tests/appflow_tracer/tracing/log_utils/test_log_utils.pydoc
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[248] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/log_utils/test_log_utils.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/log_utils/test_log_utils.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Finished processing /Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/log_utils/test_log_utils.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Finished processing /Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/log_utils/test_log_utils.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[RETURN] lib/pydoc_generator[248] ( log_utils.log_message( ) -> NoneType: None
[CALL] lib/pydoc_generator ( docs_path = create_structure( )
[CALL] lib/pydoc_generator (create_pydocs)[299] -> lib/pydoc_generator (create_structure)[61]
{"base_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc","package_name":"tests/appflow_tracer/tracing/serialize_utils"}
[RETURN] lib/pydoc_generator[87] ( return doc_dir ) -> PosixPath:
Error in trace_all return handling: Object of type PosixPath is not JSON serializable
[CALL] lib/pydoc_generator ( generate_pydoc( )
[CALL] lib/pydoc_generator (create_pydocs)[304] -> lib/pydoc_generator (generate_pydoc)[89]
{"project_path":"/Users/emvaldes/.repos/devops/workflows","file_path":"/Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/serialize_utils/test_serialize_utils.py","docs_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc/tests/appflow_tracer/tracing/serialize_utils","configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[126] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/serialize_utils/test_serialize_utils.py...","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/serialize_utils/test_serialize_utils.py...","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Generating documentation for /Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/serialize_utils/test_serialize_utils.py...
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Generating documentation for /Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/serialize_utils/test_serialize_utils.py...
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Original Relative Path: {relative_file_path}") )
[CALL] lib/pydoc_generator (generate_pydoc)[142] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Original Relative Path: tests/appflow_tracer/tracing/serialize_utils/test_serialize_utils.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Original Relative Path: tests/appflow_tracer/tracing/serialize_utils/test_serialize_utils.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Sanitized Module Path: {module_name}") )
[CALL] lib/pydoc_generator (generate_pydoc)[143] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Sanitized Module Path: tests.appflow_tracer.tracing.serialize_utils.test_serialize_utils
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Sanitized Module Path: tests.appflow_tracer.tracing.serialize_utils.test_serialize_utils
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[145] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Relative File Path: tests/appflow_tracer/tracing/serialize_utils/test_serialize_utils.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Relative File Path: tests/appflow_tracer/tracing/serialize_utils/test_serialize_utils.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Relative File Path: tests/appflow_tracer/tracing/serialize_utils/test_serialize_utils.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Relative File Path: tests/appflow_tracer/tracing/serialize_utils/test_serialize_utils.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[168] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Running PyDoc Command: python -m pydoc tests.appflow_tracer.tracing.serialize_utils.test_serialize_utils","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Running PyDoc Command: python -m pydoc tests.appflow_tracer.tracing.serialize_utils.test_serialize_utils","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Running PyDoc Command: python -m pydoc tests.appflow_tracer.tracing.serialize_utils.test_serialize_utils
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Running PyDoc Command: python -m pydoc tests.appflow_tracer.tracing.serialize_utils.test_serialize_utils
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[188]
{"match":"<re.Match object; span=(1645, 1684), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[188] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[188]
{"match":"<re.Match object; span=(1794, 1833), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[188] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[197] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/tests/appflow_tracer/tracing/serialize_utils/test_serialize_utils.pydoc","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/tests/appflow_tracer/tracing/serialize_utils/test_serialize_utils.pydoc","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/tests/appflow_tracer/tracing/serialize_utils/test_serialize_utils.pydoc
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/tests/appflow_tracer/tracing/serialize_utils/test_serialize_utils.pydoc
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[248] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/serialize_utils/test_serialize_utils.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/serialize_utils/test_serialize_utils.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Finished processing /Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/serialize_utils/test_serialize_utils.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Finished processing /Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/serialize_utils/test_serialize_utils.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[RETURN] lib/pydoc_generator[248] ( log_utils.log_message( ) -> NoneType: None
[CALL] lib/pydoc_generator ( docs_path = create_structure( )
[CALL] lib/pydoc_generator (create_pydocs)[299] -> lib/pydoc_generator (create_structure)[61]
{"base_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc","package_name":"tests/appflow_tracer/tracing/trace_utils"}
[RETURN] lib/pydoc_generator[87] ( return doc_dir ) -> PosixPath:
Error in trace_all return handling: Object of type PosixPath is not JSON serializable
[CALL] lib/pydoc_generator ( generate_pydoc( )
[CALL] lib/pydoc_generator (create_pydocs)[304] -> lib/pydoc_generator (generate_pydoc)[89]
{"project_path":"/Users/emvaldes/.repos/devops/workflows","file_path":"/Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/trace_utils/test_trace_utils.py","docs_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc/tests/appflow_tracer/tracing/trace_utils","configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[126] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/trace_utils/test_trace_utils.py...","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/trace_utils/test_trace_utils.py...","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Generating documentation for /Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/trace_utils/test_trace_utils.py...
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Generating documentation for /Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/trace_utils/test_trace_utils.py...
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Original Relative Path: {relative_file_path}") )
[CALL] lib/pydoc_generator (generate_pydoc)[142] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Original Relative Path: tests/appflow_tracer/tracing/trace_utils/test_trace_utils.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Original Relative Path: tests/appflow_tracer/tracing/trace_utils/test_trace_utils.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Sanitized Module Path: {module_name}") )
[CALL] lib/pydoc_generator (generate_pydoc)[143] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Sanitized Module Path: tests.appflow_tracer.tracing.trace_utils.test_trace_utils
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Sanitized Module Path: tests.appflow_tracer.tracing.trace_utils.test_trace_utils
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[145] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Relative File Path: tests/appflow_tracer/tracing/trace_utils/test_trace_utils.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Relative File Path: tests/appflow_tracer/tracing/trace_utils/test_trace_utils.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Relative File Path: tests/appflow_tracer/tracing/trace_utils/test_trace_utils.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Relative File Path: tests/appflow_tracer/tracing/trace_utils/test_trace_utils.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[168] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Running PyDoc Command: python -m pydoc tests.appflow_tracer.tracing.trace_utils.test_trace_utils","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Running PyDoc Command: python -m pydoc tests.appflow_tracer.tracing.trace_utils.test_trace_utils","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Running PyDoc Command: python -m pydoc tests.appflow_tracer.tracing.trace_utils.test_trace_utils
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Running PyDoc Command: python -m pydoc tests.appflow_tracer.tracing.trace_utils.test_trace_utils
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[188]
{"match":"<re.Match object; span=(6310, 6349), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[188] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[188]
{"match":"<re.Match object; span=(6459, 6498), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[188] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[197] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/tests/appflow_tracer/tracing/trace_utils/test_trace_utils.pydoc","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/tests/appflow_tracer/tracing/trace_utils/test_trace_utils.pydoc","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/tests/appflow_tracer/tracing/trace_utils/test_trace_utils.pydoc
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/tests/appflow_tracer/tracing/trace_utils/test_trace_utils.pydoc
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[248] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/trace_utils/test_trace_utils.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/trace_utils/test_trace_utils.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Finished processing /Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/trace_utils/test_trace_utils.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Finished processing /Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/trace_utils/test_trace_utils.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[RETURN] lib/pydoc_generator[248] ( log_utils.log_message( ) -> NoneType: None
[CALL] lib/pydoc_generator ( docs_path = create_structure( )
[CALL] lib/pydoc_generator (create_pydocs)[299] -> lib/pydoc_generator (create_structure)[61]
{"base_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc","package_name":"tests/appflow_tracer/tracing/file_utils"}
[RETURN] lib/pydoc_generator[87] ( return doc_dir ) -> PosixPath:
Error in trace_all return handling: Object of type PosixPath is not JSON serializable
[CALL] lib/pydoc_generator ( generate_pydoc( )
[CALL] lib/pydoc_generator (create_pydocs)[304] -> lib/pydoc_generator (generate_pydoc)[89]
{"project_path":"/Users/emvaldes/.repos/devops/workflows","file_path":"/Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/file_utils/test_file_utils.py","docs_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc/tests/appflow_tracer/tracing/file_utils","configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[126] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/file_utils/test_file_utils.py...","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/file_utils/test_file_utils.py...","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Generating documentation for /Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/file_utils/test_file_utils.py...
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Generating documentation for /Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/file_utils/test_file_utils.py...
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Original Relative Path: {relative_file_path}") )
[CALL] lib/pydoc_generator (generate_pydoc)[142] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Original Relative Path: tests/appflow_tracer/tracing/file_utils/test_file_utils.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Original Relative Path: tests/appflow_tracer/tracing/file_utils/test_file_utils.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Sanitized Module Path: {module_name}") )
[CALL] lib/pydoc_generator (generate_pydoc)[143] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Sanitized Module Path: tests.appflow_tracer.tracing.file_utils.test_file_utils
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Sanitized Module Path: tests.appflow_tracer.tracing.file_utils.test_file_utils
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[145] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Relative File Path: tests/appflow_tracer/tracing/file_utils/test_file_utils.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Relative File Path: tests/appflow_tracer/tracing/file_utils/test_file_utils.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Relative File Path: tests/appflow_tracer/tracing/file_utils/test_file_utils.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Relative File Path: tests/appflow_tracer/tracing/file_utils/test_file_utils.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[158] -> lib/pydoc_generator (<genexpr>)[158]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] lib/pydoc_generator[158] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[168] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Running PyDoc Command: python -m pydoc tests.appflow_tracer.tracing.file_utils.test_file_utils","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Running PyDoc Command: python -m pydoc tests.appflow_tracer.tracing.file_utils.test_file_utils","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Running PyDoc Command: python -m pydoc tests.appflow_tracer.tracing.file_utils.test_file_utils
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Running PyDoc Command: python -m pydoc tests.appflow_tracer.tracing.file_utils.test_file_utils
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[188]
{"match":"<re.Match object; span=(3340, 3379), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[188] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[188]
{"match":"<re.Match object; span=(3411, 3450), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[188] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[197] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/tests/appflow_tracer/tracing/file_utils/test_file_utils.pydoc","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/tests/appflow_tracer/tracing/file_utils/test_file_utils.pydoc","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/tests/appflow_tracer/tracing/file_utils/test_file_utils.pydoc
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/tests/appflow_tracer/tracing/file_utils/test_file_utils.pydoc
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[248] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/file_utils/test_file_utils.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/file_utils/test_file_utils.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Finished processing /Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/file_utils/test_file_utils.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Finished processing /Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/file_utils/test_file_utils.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[RETURN] lib/pydoc_generator[248] ( log_utils.log_message( ) -> NoneType: None
[RETURN] lib/pydoc_generator[291] ( for file_path in files_list: ) -> NoneType: None
[CALL] run ( log_utils.log_message( )
[CALL] run (main)[271] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"Documentation generation completed successfully.","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"Documentation generation completed successfully.","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Documentation generation completed successfully.
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598f6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Documentation generation completed successfully.
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] run ( log_utils.log_message( )
[CALL] run (main)[303] -> packages/appflow_tracer/lib/log_utils (log_message)[85]
{"message":"No flags provided. Use --pydoc to generate documentation or --target to run a Package/Module or Script.","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[148] -> packages/appflow_tracer/lib/log_utils (output_console)[196]
{"message":"No flags provided. Use --pydoc to generate documentation or --target to run a Package/Module or Script.","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303225549.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T05:55:49.915992+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[238] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
No flags provided. Use --pydoc to generate documentation or --target to run a Package/Module or Script.
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10598fb50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
No flags provided. Use --pydoc to generate documentation or --target to run a Package/Module or Script.
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[239] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[148] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
./docs/
└── pydoc/
    ├── .github/
    │   └── scripts/
    │       ├── extract_pytest_functions.pydoc
    │       └── extract_pytest_resources.pydoc
    ├── lib/
    │   ├── __init__.pydoc
    │   ├── accesstoken_expiration.pydoc
    │   ├── argument_parser.pydoc
    │   ├── configure_params.pydoc
    │   ├── manage_accesstoken.pydoc
    │   ├── parsing_userinput.pydoc
    │   ├── pkgconfig_loader.pydoc
    │   ├── pydoc_generator.pydoc
    │   ├── system_params.pydoc
    │   ├── system_variables.pydoc
    │   └── timezone_localoffset.pydoc
    ├── packages/
    │   ├── __init__.pydoc
    │   ├── appflow_tracer/
    │   │   ├── __init__.pydoc
    │   │   ├── __main__.pydoc
    │   │   ├── lib/
    │   │   │   ├── __init__.pydoc
    │   │   │   ├── file_utils.pydoc
    │   │   │   ├── log_utils.pydoc
    │   │   │   ├── serialize_utils.pydoc
    │   │   │   └── trace_utils.pydoc
    │   │   ├── tracing--legacy.pydoc
    │   │   └── tracing.pydoc
    │   └── requirements/
    │       ├── __init__.pydoc
    │       ├── __main__.pydoc
    │       └── dependencies.pydoc
    ├── run.pydoc
    ├── scripts/
    │   ├── __init__.pydoc
    │   └── testing.pydoc
    └── tests/
        ├── appflow_tracer/
        │   └── tracing/
        │       ├── file_utils/
        │       │   └── test_file_utils.pydoc
        │       ├── log_utils/
        │       │   └── test_log_utils.pydoc
        │       ├── serialize_utils/
        │       │   └── test_serialize_utils.pydoc
        │       ├── test_tracing.pydoc
        │       └── trace_utils/
        │           └── test_trace_utils.pydoc
        ├── lib/
        │   └── test_pydoc_generator.pydoc
        ├── requirements/
        │   └── dependencies/
        │       └── test_dependencies.pydoc
        └── test_run.pydoc

20 directories, 37 files
