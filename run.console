$ rm -rf ./docs; python run.py --pydoc ; ctree ./docs ;

[CALL] packages/appflow_tracer/tracing ( file_utils.manage_logfiles(CONFIGS) )
[CALL] packages/appflow_tracer/tracing (setup_logging)[254] -> packages/appflow_tracer/lib/file_utils (manage_logfiles)[114]
{"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/file_utils ( log_files = sorted( )
[CALL] packages/appflow_tracer/lib/file_utils (manage_logfiles)[150] -> packages/appflow_tracer/lib/file_utils (<lambda>)[152]
{"f":"logs/run_20250303210618.log"}
[RETURN] packages/appflow_tracer/lib/file_utils[152] ( key=lambda f:f.stat().st_mtime ) -> float:
1741061178.603061
[RETURN] packages/appflow_tracer/lib/file_utils[167] ( return deleted_logs ) -> list:
[CALL] run ( print( )
[CALL] run (main)[198] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a47f790>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
CONFIGS: {
    "colors": {
        "CALL": "\u001b[92m",
        "CRITICAL": "\u001b[41m",
        "DEBUG": "\u001b[96m",
        "ERROR": "\u001b[31m",
        "IMPORT": "\u001b[94m",
        "INFO": "\u001b[97m",
        "RETURN": "\u001b[93m",
        "WARNING": "\u001b[91m",
        "RESET": "\u001b[0m"
    },
    "logging": {
        "enable": true,
        "max_logfiles": 5,
        "package_name": ".",
        "module_name": "run",
        "logs_dirname": "logs",
        "log_filename": "logs/run_20250303210618.log"
    },
    "tracing": {
        "enable": true,
        "json": {
            "compressed": true
        }
    },
    "events": {
        "call": true,
        "critical": false,
        "debug": true,
        "error": true,
        "import": false,
        "info": false,
        "return": true,
        "warning": false
    },
    "stats": {
        "created": "2025-03-03T18:10:45.863523+00:00",
        "updated": "2025-03-04T04:06:18.577225+00:00"
    }
}
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a47f790>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
CONFIGS: {
    "colors": {
        "CALL": "\u001b[92m",
        "CRITICAL": "\u001b[41m",
        "DEBUG": "\u001b[96m",
        "ERROR": "\u001b[31m",
        "IMPORT": "\u001b[94m",
        "INFO": "\u001b[97m",
        "RETURN": "\u001b[93m",
        "WARNING": "\u001b[91m",
        "RESET": "\u001b[0m"
    },
    "logging": {
        "enable": true,
        "max_logfiles": 5,
        "package_name": ".",
        "module_name": "run",
        "logs_dirname": "logs",
        "log_filename": "logs/run_20250303210618.log"
    },
    "tracing": {
        "enable": true,
        "json": {
            "compressed": true
        }
    },
    "events": {
        "call": true,
        "critical": false,
        "debug": true,
        "error": true,
        "import": false,
        "info": false,
        "return": true,
        "warning": false
    },
    "stats": {
        "created": "2025-03-03T18:10:45.863523+00:00",
        "updated": "2025-03-04T04:06:18.577225+00:00"
    }
}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] run ( args=parse_arguments() )
[CALL] run (main)[204] -> run (parse_arguments)[135]
[RETURN] run[166] ( return parser.parse_args() ) -> Namespace:
{"pydoc":true,"target":null}
[CALL] run ( files_list = collect_files( )
[CALL] run (main)[222] -> run (collect_files)[94]
{"target_dir":"/Users/emvaldes/.repos/devops/workflows","extensions":[".py"]}
[RETURN] run[133] ( return files ) -> list:
["/Users/emvaldes/.repos/devops/workflows/run.py","/Users/emvaldes/.repos/devops/workflows/tests/test_run.py","/Users/emvaldes/.repos/devops/workflows/tests/test_pydoc_generator.py","/Users/emvaldes/.repos/devops/workflows/scripts/__init__.py","/Users/emvaldes/.repos/devops/workflows/scripts/testing.py","/Users/emvaldes/.repos/devops/workflows/packages/__init__.py","/Users/emvaldes/.repos/devops/workflows/lib/system_variables.py","/Users/emvaldes/.repos/devops/workflows/lib/accesstoken_expiration.py","/Users/emvaldes/.repos/devops/workflows/lib/timezone_localoffset.py","/Users/emvaldes/.repos/devops/workflows/lib/configure_params.py","/Users/emvaldes/.repos/devops/workflows/lib/__init__.py","/Users/emvaldes/.repos/devops/workflows/lib/system_params.py","/Users/emvaldes/.repos/devops/workflows/lib/parsing_userinput.py","/Users/emvaldes/.repos/devops/workflows/lib/pydoc_generator.py","/Users/emvaldes/.repos/devops/workflows/lib/manage_accesstoken.py","/Users/emvaldes/.repos/devops/workflows/lib/pkgconfig_loader.py","/Users/emvaldes/.repos/devops/workflows/lib/argument_parser.py","/Users/emvaldes/.repos/devops/workflows/.github/scripts/extract_pytest_functions.py","/Users/emvaldes/.repos/devops/workflows/.github/scripts/extract_pytest_resources.py","/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/tracing.py","/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/tracing--legacy.py","/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/__init__.py","/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/__main__.py","/Users/emvaldes/.repos/devops/workflows/packages/requirements/__init__.py","/Users/emvaldes/.repos/devops/workflows/packages/requirements/__main__.py","/Users/emvaldes/.repos/devops/workflows/packages/requirements/dependencies.py","/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/serialize_utils.py","/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/log_utils.py","/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/trace_utils.py","/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/__init__.py","/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/file_utils.py","/Users/emvaldes/.repos/devops/workflows/tests/requirements/dependencies/test_dependencies.py","/Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/test_tracing.py","/Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/log_utils/test_log_utils.py","/Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/serialize_utils/test_serialize_utils.py","/Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/trace_utils/test_trace_utils.py","/Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/file_utils/test_file_utils.py"]
[CALL] run ( log_utils.log_message( )
[CALL] run (main)[234] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Generating documentation for the project at /Users/emvaldes/.repos/devops/workflows...","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Generating documentation for the project at /Users/emvaldes/.repos/devops/workflows...","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a73ad40>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Generating documentation for the project at /Users/emvaldes/.repos/devops/workflows...
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a73ad40>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Generating documentation for the project at /Users/emvaldes/.repos/devops/workflows...
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] run ( pydoc_engine.create_pydocs( )
[CALL] run (main)[240] -> lib/pydoc_generator (create_pydocs)[257]
{"project_path":"/Users/emvaldes/.repos/devops/workflows","base_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc","files_list":["/Users/emvaldes/.repos/devops/workflows/run.py","/Users/emvaldes/.repos/devops/workflows/tests/test_run.py","/Users/emvaldes/.repos/devops/workflows/tests/test_pydoc_generator.py","/Users/emvaldes/.repos/devops/workflows/scripts/__init__.py","/Users/emvaldes/.repos/devops/workflows/scripts/testing.py","/Users/emvaldes/.repos/devops/workflows/packages/__init__.py","/Users/emvaldes/.repos/devops/workflows/lib/system_variables.py","/Users/emvaldes/.repos/devops/workflows/lib/accesstoken_expiration.py","/Users/emvaldes/.repos/devops/workflows/lib/timezone_localoffset.py","/Users/emvaldes/.repos/devops/workflows/lib/configure_params.py","/Users/emvaldes/.repos/devops/workflows/lib/__init__.py","/Users/emvaldes/.repos/devops/workflows/lib/system_params.py","/Users/emvaldes/.repos/devops/workflows/lib/parsing_userinput.py","/Users/emvaldes/.repos/devops/workflows/lib/pydoc_generator.py","/Users/emvaldes/.repos/devops/workflows/lib/manage_accesstoken.py","/Users/emvaldes/.repos/devops/workflows/lib/pkgconfig_loader.py","/Users/emvaldes/.repos/devops/workflows/lib/argument_parser.py","/Users/emvaldes/.repos/devops/workflows/.github/scripts/extract_pytest_functions.py","/Users/emvaldes/.repos/devops/workflows/.github/scripts/extract_pytest_resources.py","/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/tracing.py","/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/tracing--legacy.py","/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/__init__.py","/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/__main__.py","/Users/emvaldes/.repos/devops/workflows/packages/requirements/__init__.py","/Users/emvaldes/.repos/devops/workflows/packages/requirements/__main__.py","/Users/emvaldes/.repos/devops/workflows/packages/requirements/dependencies.py","/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/serialize_utils.py","/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/log_utils.py","/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/trace_utils.py","/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/__init__.py","/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/file_utils.py","/Users/emvaldes/.repos/devops/workflows/tests/requirements/dependencies/test_dependencies.py","/Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/test_tracing.py","/Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/log_utils/test_log_utils.py","/Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/serialize_utils/test_serialize_utils.py","/Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/trace_utils/test_trace_utils.py","/Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/file_utils/test_file_utils.py"],"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (create_pydocs)[288] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Processing Python files [['/Users/emvaldes/.repos/devops/workflows/run.py', '/Users/emvaldes/.repos/devops/workflows/tests/test_run.py', '/Users/emvaldes/.repos/devops/workflows/tests/test_pydoc_generator.py', '/Users/emvaldes/.repos/devops/workflows/scripts/__init__.py', '/Users/emvaldes/.repos/devops/workflows/scripts/testing.py', '/Users/emvaldes/.repos/devops/workflows/packages/__init__.py', '/Users/emvaldes/.repos/devops/workflows/lib/system_variables.py', '/Users/emvaldes/.repos/devops/workflows/lib/accesstoken_expiration.py', '/Users/emvaldes/.repos/devops/workflows/lib/timezone_localoffset.py', '/Users/emvaldes/.repos/devops/workflows/lib/configure_params.py', '/Users/emvaldes/.repos/devops/workflows/lib/__init__.py', '/Users/emvaldes/.repos/devops/workflows/lib/system_params.py', '/Users/emvaldes/.repos/devops/workflows/lib/parsing_userinput.py', '/Users/emvaldes/.repos/devops/workflows/lib/pydoc_generator.py', '/Users/emvaldes/.repos/devops/workflows/lib/manage_accesstoken.py', '/Users/emvaldes/.repos/devops/workflows/lib/pkgconfig_loader.py', '/Users/emvaldes/.repos/devops/workflows/lib/argument_parser.py', '/Users/emvaldes/.repos/devops/workflows/.github/scripts/extract_pytest_functions.py', '/Users/emvaldes/.repos/devops/workflows/.github/scripts/extract_pytest_resources.py', '/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/tracing.py', '/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/tracing--legacy.py', '/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/__init__.py', '/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/__main__.py', '/Users/emvaldes/.repos/devops/workflows/packages/requirements/__init__.py', '/Users/emvaldes/.repos/devops/workflows/packages/requirements/__main__.py', '/Users/emvaldes/.repos/devops/workflows/packages/requirements/dependencies.py', '/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/serialize_utils.py', '/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/log_utils.py', '/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/trace_utils.py', '/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/__init__.py', '/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/file_utils.py', '/Users/emvaldes/.repos/devops/workflows/tests/requirements/dependencies/test_dependencies.py', '/Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/test_tracing.py', '/Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/log_utils/test_log_utils.py', '/Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/serialize_utils/test_serialize_utils.py', '/Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/trace_utils/test_trace_utils.py', '/Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/file_utils/test_file_utils.py']]...","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Processing Python files [['/Users/emvaldes/.repos/devops/workflows/run.py', '/Users/emvaldes/.repos/devops/workflows/tests/test_run.py', '/Users/emvaldes/.repos/devops/workflows/tests/test_pydoc_generator.py', '/Users/emvaldes/.repos/devops/workflows/scripts/__init__.py', '/Users/emvaldes/.repos/devops/workflows/scripts/testing.py', '/Users/emvaldes/.repos/devops/workflows/packages/__init__.py', '/Users/emvaldes/.repos/devops/workflows/lib/system_variables.py', '/Users/emvaldes/.repos/devops/workflows/lib/accesstoken_expiration.py', '/Users/emvaldes/.repos/devops/workflows/lib/timezone_localoffset.py', '/Users/emvaldes/.repos/devops/workflows/lib/configure_params.py', '/Users/emvaldes/.repos/devops/workflows/lib/__init__.py', '/Users/emvaldes/.repos/devops/workflows/lib/system_params.py', '/Users/emvaldes/.repos/devops/workflows/lib/parsing_userinput.py', '/Users/emvaldes/.repos/devops/workflows/lib/pydoc_generator.py', '/Users/emvaldes/.repos/devops/workflows/lib/manage_accesstoken.py', '/Users/emvaldes/.repos/devops/workflows/lib/pkgconfig_loader.py', '/Users/emvaldes/.repos/devops/workflows/lib/argument_parser.py', '/Users/emvaldes/.repos/devops/workflows/.github/scripts/extract_pytest_functions.py', '/Users/emvaldes/.repos/devops/workflows/.github/scripts/extract_pytest_resources.py', '/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/tracing.py', '/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/tracing--legacy.py', '/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/__init__.py', '/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/__main__.py', '/Users/emvaldes/.repos/devops/workflows/packages/requirements/__init__.py', '/Users/emvaldes/.repos/devops/workflows/packages/requirements/__main__.py', '/Users/emvaldes/.repos/devops/workflows/packages/requirements/dependencies.py', '/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/serialize_utils.py', '/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/log_utils.py', '/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/trace_utils.py', '/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/__init__.py', '/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/file_utils.py', '/Users/emvaldes/.repos/devops/workflows/tests/requirements/dependencies/test_dependencies.py', '/Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/test_tracing.py', '/Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/log_utils/test_log_utils.py', '/Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/serialize_utils/test_serialize_utils.py', '/Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/trace_utils/test_trace_utils.py', '/Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/file_utils/test_file_utils.py']]...","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a73ad40>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Processing Python files [['/Users/emvaldes/.repos/devops/workflows/run.py', '/Users/emvaldes/.repos/devops/workflows/tests/test_run.py', '/Users/emvaldes/.repos/devops/workflows/tests/test_pydoc_generator.py', '/Users/emvaldes/.repos/devops/workflows/scripts/__init__.py', '/Users/emvaldes/.repos/devops/workflows/scripts/testing.py', '/Users/emvaldes/.repos/devops/workflows/packages/__init__.py', '/Users/emvaldes/.repos/devops/workflows/lib/system_variables.py', '/Users/emvaldes/.repos/devops/workflows/lib/accesstoken_expiration.py', '/Users/emvaldes/.repos/devops/workflows/lib/timezone_localoffset.py', '/Users/emvaldes/.repos/devops/workflows/lib/configure_params.py', '/Users/emvaldes/.repos/devops/workflows/lib/__init__.py', '/Users/emvaldes/.repos/devops/workflows/lib/system_params.py', '/Users/emvaldes/.repos/devops/workflows/lib/parsing_userinput.py', '/Users/emvaldes/.repos/devops/workflows/lib/pydoc_generator.py', '/Users/emvaldes/.repos/devops/workflows/lib/manage_accesstoken.py', '/Users/emvaldes/.repos/devops/workflows/lib/pkgconfig_loader.py', '/Users/emvaldes/.repos/devops/workflows/lib/argument_parser.py', '/Users/emvaldes/.repos/devops/workflows/.github/scripts/extract_pytest_functions.py', '/Users/emvaldes/.repos/devops/workflows/.github/scripts/extract_pytest_resources.py', '/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/tracing.py', '/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/tracing--legacy.py', '/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/__init__.py', '/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/__main__.py', '/Users/emvaldes/.repos/devops/workflows/packages/requirements/__init__.py', '/Users/emvaldes/.repos/devops/workflows/packages/requirements/__main__.py', '/Users/emvaldes/.repos/devops/workflows/packages/requirements/dependencies.py', '/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/serialize_utils.py', '/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/log_utils.py', '/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/trace_utils.py', '/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/__init__.py', '/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/file_utils.py', '/Users/emvaldes/.repos/devops/workflows/tests/requirements/dependencies/test_dependencies.py', '/Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/test_tracing.py', '/Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/log_utils/test_log_utils.py', '/Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/serialize_utils/test_serialize_utils.py', '/Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/trace_utils/test_trace_utils.py', '/Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/file_utils/test_file_utils.py']]...
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a73ad40>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Processing Python files [['/Users/emvaldes/.repos/devops/workflows/run.py', '/Users/emvaldes/.repos/devops/workflows/tests/test_run.py', '/Users/emvaldes/.repos/devops/workflows/tests/test_pydoc_generator.py', '/Users/emvaldes/.repos/devops/workflows/scripts/__init__.py', '/Users/emvaldes/.repos/devops/workflows/scripts/testing.py', '/Users/emvaldes/.repos/devops/workflows/packages/__init__.py', '/Users/emvaldes/.repos/devops/workflows/lib/system_variables.py', '/Users/emvaldes/.repos/devops/workflows/lib/accesstoken_expiration.py', '/Users/emvaldes/.repos/devops/workflows/lib/timezone_localoffset.py', '/Users/emvaldes/.repos/devops/workflows/lib/configure_params.py', '/Users/emvaldes/.repos/devops/workflows/lib/__init__.py', '/Users/emvaldes/.repos/devops/workflows/lib/system_params.py', '/Users/emvaldes/.repos/devops/workflows/lib/parsing_userinput.py', '/Users/emvaldes/.repos/devops/workflows/lib/pydoc_generator.py', '/Users/emvaldes/.repos/devops/workflows/lib/manage_accesstoken.py', '/Users/emvaldes/.repos/devops/workflows/lib/pkgconfig_loader.py', '/Users/emvaldes/.repos/devops/workflows/lib/argument_parser.py', '/Users/emvaldes/.repos/devops/workflows/.github/scripts/extract_pytest_functions.py', '/Users/emvaldes/.repos/devops/workflows/.github/scripts/extract_pytest_resources.py', '/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/tracing.py', '/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/tracing--legacy.py', '/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/__init__.py', '/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/__main__.py', '/Users/emvaldes/.repos/devops/workflows/packages/requirements/__init__.py', '/Users/emvaldes/.repos/devops/workflows/packages/requirements/__main__.py', '/Users/emvaldes/.repos/devops/workflows/packages/requirements/dependencies.py', '/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/serialize_utils.py', '/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/log_utils.py', '/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/trace_utils.py', '/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/__init__.py', '/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/file_utils.py', '/Users/emvaldes/.repos/devops/workflows/tests/requirements/dependencies/test_dependencies.py', '/Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/test_tracing.py', '/Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/log_utils/test_log_utils.py', '/Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/serialize_utils/test_serialize_utils.py', '/Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/trace_utils/test_trace_utils.py', '/Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/file_utils/test_file_utils.py']]...
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( docs_path = create_structure( )
[CALL] lib/pydoc_generator (create_pydocs)[302] -> lib/pydoc_generator (create_structure)[64]
{"base_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc","package_name":"."}
[RETURN] lib/pydoc_generator[90] ( return doc_dir ) -> PosixPath:
Error in trace_all return handling: Object of type PosixPath is not JSON serializable
[CALL] lib/pydoc_generator ( generate_pydoc( )
[CALL] lib/pydoc_generator (create_pydocs)[307] -> lib/pydoc_generator (generate_pydoc)[92]
{"project_path":"/Users/emvaldes/.repos/devops/workflows","file_path":"/Users/emvaldes/.repos/devops/workflows/run.py","docs_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc","configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[129] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/run.py...","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/run.py...","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a73ad40>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Generating documentation for /Users/emvaldes/.repos/devops/workflows/run.py...
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a73ad40>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Generating documentation for /Users/emvaldes/.repos/devops/workflows/run.py...
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Original Relative Path: {relative_file_path}") )
[CALL] lib/pydoc_generator (generate_pydoc)[145] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a73ad70>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Original Relative Path: run.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a73ad70>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Original Relative Path: run.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Sanitized Module Path: {module_name}") )
[CALL] lib/pydoc_generator (generate_pydoc)[146] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a73ad70>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Sanitized Module Path: run
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a73ad70>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Sanitized Module Path: run
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[148] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Relative File Path: run.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Relative File Path: run.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a73ad70>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Relative File Path: run.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a73ad70>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Relative File Path: run.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a73ad70>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a73ad70>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[171] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Running PyDoc Command: python -m pydoc run","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Running PyDoc Command: python -m pydoc run","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a73ad40>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Running PyDoc Command: python -m pydoc run
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a73ad40>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Running PyDoc Command: python -m pydoc run
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[191]
{"match":"<re.Match object; span=(3852, 3891), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[191] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[191]
{"match":"<re.Match object; span=(3927, 3966), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[191] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[200] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/run.pydoc","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/run.pydoc","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/run.pydoc
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/run.pydoc
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[251] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/run.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/run.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Finished processing /Users/emvaldes/.repos/devops/workflows/run.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Finished processing /Users/emvaldes/.repos/devops/workflows/run.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[RETURN] lib/pydoc_generator[251] ( log_utils.log_message( ) -> NoneType: None
[CALL] lib/pydoc_generator ( docs_path = create_structure( )
[CALL] lib/pydoc_generator (create_pydocs)[302] -> lib/pydoc_generator (create_structure)[64]
{"base_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc","package_name":"tests"}
[RETURN] lib/pydoc_generator[90] ( return doc_dir ) -> PosixPath:
Error in trace_all return handling: Object of type PosixPath is not JSON serializable
[CALL] lib/pydoc_generator ( generate_pydoc( )
[CALL] lib/pydoc_generator (create_pydocs)[307] -> lib/pydoc_generator (generate_pydoc)[92]
{"project_path":"/Users/emvaldes/.repos/devops/workflows","file_path":"/Users/emvaldes/.repos/devops/workflows/tests/test_run.py","docs_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc/tests","configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[129] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/tests/test_run.py...","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/tests/test_run.py...","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Generating documentation for /Users/emvaldes/.repos/devops/workflows/tests/test_run.py...
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Generating documentation for /Users/emvaldes/.repos/devops/workflows/tests/test_run.py...
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Original Relative Path: {relative_file_path}") )
[CALL] lib/pydoc_generator (generate_pydoc)[145] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Original Relative Path: tests/test_run.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Original Relative Path: tests/test_run.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Sanitized Module Path: {module_name}") )
[CALL] lib/pydoc_generator (generate_pydoc)[146] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Sanitized Module Path: tests.test_run
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Sanitized Module Path: tests.test_run
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[148] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Relative File Path: tests/test_run.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Relative File Path: tests/test_run.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Relative File Path: tests/test_run.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Relative File Path: tests/test_run.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[171] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Running PyDoc Command: python -m pydoc tests.test_run","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Running PyDoc Command: python -m pydoc tests.test_run","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Running PyDoc Command: python -m pydoc tests.test_run
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Running PyDoc Command: python -m pydoc tests.test_run
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[191]
{"match":"<re.Match object; span=(1352, 1367), match='/Users/emvaldes'>"}
[RETURN] lib/pydoc_generator[191] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<user-home>
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[191]
{"match":"<re.Match object; span=(1406, 1445), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[191] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[200] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/tests/test_run.pydoc","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/tests/test_run.pydoc","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a73ad70>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/tests/test_run.pydoc
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a73ad70>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/tests/test_run.pydoc
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[251] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/tests/test_run.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/tests/test_run.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Finished processing /Users/emvaldes/.repos/devops/workflows/tests/test_run.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Finished processing /Users/emvaldes/.repos/devops/workflows/tests/test_run.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[RETURN] lib/pydoc_generator[251] ( log_utils.log_message( ) -> NoneType: None
[CALL] lib/pydoc_generator ( docs_path = create_structure( )
[CALL] lib/pydoc_generator (create_pydocs)[302] -> lib/pydoc_generator (create_structure)[64]
{"base_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc","package_name":"tests"}
[RETURN] lib/pydoc_generator[90] ( return doc_dir ) -> PosixPath:
Error in trace_all return handling: Object of type PosixPath is not JSON serializable
[CALL] lib/pydoc_generator ( generate_pydoc( )
[CALL] lib/pydoc_generator (create_pydocs)[307] -> lib/pydoc_generator (generate_pydoc)[92]
{"project_path":"/Users/emvaldes/.repos/devops/workflows","file_path":"/Users/emvaldes/.repos/devops/workflows/tests/test_pydoc_generator.py","docs_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc/tests","configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[129] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/tests/test_pydoc_generator.py...","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/tests/test_pydoc_generator.py...","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Generating documentation for /Users/emvaldes/.repos/devops/workflows/tests/test_pydoc_generator.py...
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Generating documentation for /Users/emvaldes/.repos/devops/workflows/tests/test_pydoc_generator.py...
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Original Relative Path: {relative_file_path}") )
[CALL] lib/pydoc_generator (generate_pydoc)[145] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Original Relative Path: tests/test_pydoc_generator.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Original Relative Path: tests/test_pydoc_generator.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Sanitized Module Path: {module_name}") )
[CALL] lib/pydoc_generator (generate_pydoc)[146] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Sanitized Module Path: tests.test_pydoc_generator
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Sanitized Module Path: tests.test_pydoc_generator
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[148] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Relative File Path: tests/test_pydoc_generator.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Relative File Path: tests/test_pydoc_generator.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Relative File Path: tests/test_pydoc_generator.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Relative File Path: tests/test_pydoc_generator.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[171] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Running PyDoc Command: python -m pydoc tests.test_pydoc_generator","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Running PyDoc Command: python -m pydoc tests.test_pydoc_generator","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Running PyDoc Command: python -m pydoc tests.test_pydoc_generator
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Running PyDoc Command: python -m pydoc tests.test_pydoc_generator
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[191]
{"match":"<re.Match object; span=(1140, 1155), match='/Users/emvaldes'>"}
[RETURN] lib/pydoc_generator[191] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<user-home>
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[191]
{"match":"<re.Match object; span=(1194, 1233), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[191] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[200] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/tests/test_pydoc_generator.pydoc","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/tests/test_pydoc_generator.pydoc","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a73ad70>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/tests/test_pydoc_generator.pydoc
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a73ad70>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/tests/test_pydoc_generator.pydoc
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[251] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/tests/test_pydoc_generator.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/tests/test_pydoc_generator.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Finished processing /Users/emvaldes/.repos/devops/workflows/tests/test_pydoc_generator.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Finished processing /Users/emvaldes/.repos/devops/workflows/tests/test_pydoc_generator.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[RETURN] lib/pydoc_generator[251] ( log_utils.log_message( ) -> NoneType: None
[CALL] lib/pydoc_generator ( docs_path = create_structure( )
[CALL] lib/pydoc_generator (create_pydocs)[302] -> lib/pydoc_generator (create_structure)[64]
{"base_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc","package_name":"scripts"}
[RETURN] lib/pydoc_generator[90] ( return doc_dir ) -> PosixPath:
Error in trace_all return handling: Object of type PosixPath is not JSON serializable
[CALL] lib/pydoc_generator ( generate_pydoc( )
[CALL] lib/pydoc_generator (create_pydocs)[307] -> lib/pydoc_generator (generate_pydoc)[92]
{"project_path":"/Users/emvaldes/.repos/devops/workflows","file_path":"/Users/emvaldes/.repos/devops/workflows/scripts/__init__.py","docs_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc/scripts","configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[129] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/scripts/__init__.py...","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/scripts/__init__.py...","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Generating documentation for /Users/emvaldes/.repos/devops/workflows/scripts/__init__.py...
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Generating documentation for /Users/emvaldes/.repos/devops/workflows/scripts/__init__.py...
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Original Relative Path: {relative_file_path}") )
[CALL] lib/pydoc_generator (generate_pydoc)[145] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Original Relative Path: scripts/__init__.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Original Relative Path: scripts/__init__.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Sanitized Module Path: {module_name}") )
[CALL] lib/pydoc_generator (generate_pydoc)[146] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Sanitized Module Path: scripts.__init__
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Sanitized Module Path: scripts.__init__
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[148] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Relative File Path: scripts/__init__.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Relative File Path: scripts/__init__.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Relative File Path: scripts/__init__.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Relative File Path: scripts/__init__.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[171] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Running PyDoc Command: python -m pydoc scripts.__init__","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Running PyDoc Command: python -m pydoc scripts.__init__","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Running PyDoc Command: python -m pydoc scripts.__init__
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Running PyDoc Command: python -m pydoc scripts.__init__
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[191]
{"match":"<re.Match object; span=(1277, 1316), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[191] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[200] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/scripts/__init__.pydoc","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/scripts/__init__.pydoc","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a73ad70>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/scripts/__init__.pydoc
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a73ad70>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/scripts/__init__.pydoc
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[251] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/scripts/__init__.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/scripts/__init__.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a73b100>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Finished processing /Users/emvaldes/.repos/devops/workflows/scripts/__init__.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a73b100>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Finished processing /Users/emvaldes/.repos/devops/workflows/scripts/__init__.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[RETURN] lib/pydoc_generator[251] ( log_utils.log_message( ) -> NoneType: None
[CALL] lib/pydoc_generator ( docs_path = create_structure( )
[CALL] lib/pydoc_generator (create_pydocs)[302] -> lib/pydoc_generator (create_structure)[64]
{"base_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc","package_name":"scripts"}
[RETURN] lib/pydoc_generator[90] ( return doc_dir ) -> PosixPath:
Error in trace_all return handling: Object of type PosixPath is not JSON serializable
[CALL] lib/pydoc_generator ( generate_pydoc( )
[CALL] lib/pydoc_generator (create_pydocs)[307] -> lib/pydoc_generator (generate_pydoc)[92]
{"project_path":"/Users/emvaldes/.repos/devops/workflows","file_path":"/Users/emvaldes/.repos/devops/workflows/scripts/testing.py","docs_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc/scripts","configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[129] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/scripts/testing.py...","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/scripts/testing.py...","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Generating documentation for /Users/emvaldes/.repos/devops/workflows/scripts/testing.py...
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Generating documentation for /Users/emvaldes/.repos/devops/workflows/scripts/testing.py...
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Original Relative Path: {relative_file_path}") )
[CALL] lib/pydoc_generator (generate_pydoc)[145] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Original Relative Path: scripts/testing.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Original Relative Path: scripts/testing.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Sanitized Module Path: {module_name}") )
[CALL] lib/pydoc_generator (generate_pydoc)[146] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Sanitized Module Path: scripts.testing
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Sanitized Module Path: scripts.testing
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[148] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Relative File Path: scripts/testing.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Relative File Path: scripts/testing.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Relative File Path: scripts/testing.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Relative File Path: scripts/testing.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[171] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Running PyDoc Command: python -m pydoc scripts.testing","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Running PyDoc Command: python -m pydoc scripts.testing","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Running PyDoc Command: python -m pydoc scripts.testing
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Running PyDoc Command: python -m pydoc scripts.testing
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[191]
{"match":"<re.Match object; span=(1918, 1957), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[191] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[191]
{"match":"<re.Match object; span=(1970, 2009), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[191] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[200] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/scripts/testing.pydoc","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/scripts/testing.pydoc","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a73ad40>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/scripts/testing.pydoc
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a73ad40>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/scripts/testing.pydoc
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[251] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/scripts/testing.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/scripts/testing.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a73ad70>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Finished processing /Users/emvaldes/.repos/devops/workflows/scripts/testing.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a73ad70>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Finished processing /Users/emvaldes/.repos/devops/workflows/scripts/testing.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[RETURN] lib/pydoc_generator[251] ( log_utils.log_message( ) -> NoneType: None
[CALL] lib/pydoc_generator ( docs_path = create_structure( )
[CALL] lib/pydoc_generator (create_pydocs)[302] -> lib/pydoc_generator (create_structure)[64]
{"base_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc","package_name":"packages"}
[RETURN] lib/pydoc_generator[90] ( return doc_dir ) -> PosixPath:
Error in trace_all return handling: Object of type PosixPath is not JSON serializable
[CALL] lib/pydoc_generator ( generate_pydoc( )
[CALL] lib/pydoc_generator (create_pydocs)[307] -> lib/pydoc_generator (generate_pydoc)[92]
{"project_path":"/Users/emvaldes/.repos/devops/workflows","file_path":"/Users/emvaldes/.repos/devops/workflows/packages/__init__.py","docs_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages","configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[129] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/__init__.py...","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/__init__.py...","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a067d90>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/__init__.py...
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a067d90>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/__init__.py...
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Original Relative Path: {relative_file_path}") )
[CALL] lib/pydoc_generator (generate_pydoc)[145] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a067d90>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Original Relative Path: packages/__init__.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a067d90>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Original Relative Path: packages/__init__.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Sanitized Module Path: {module_name}") )
[CALL] lib/pydoc_generator (generate_pydoc)[146] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Sanitized Module Path: packages.__init__
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Sanitized Module Path: packages.__init__
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[148] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Relative File Path: packages/__init__.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Relative File Path: packages/__init__.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a067d90>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Relative File Path: packages/__init__.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a067d90>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Relative File Path: packages/__init__.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[171] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Running PyDoc Command: python -m pydoc packages.__init__","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Running PyDoc Command: python -m pydoc packages.__init__","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a067d90>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Running PyDoc Command: python -m pydoc packages.__init__
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a067d90>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Running PyDoc Command: python -m pydoc packages.__init__
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[191]
{"match":"<re.Match object; span=(1433, 1472), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[191] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[200] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/__init__.pydoc","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/__init__.pydoc","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a73ad70>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/__init__.pydoc
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a73ad70>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/__init__.pydoc
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[251] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/packages/__init__.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/packages/__init__.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a73b100>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Finished processing /Users/emvaldes/.repos/devops/workflows/packages/__init__.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a73b100>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Finished processing /Users/emvaldes/.repos/devops/workflows/packages/__init__.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[RETURN] lib/pydoc_generator[251] ( log_utils.log_message( ) -> NoneType: None
[CALL] lib/pydoc_generator ( docs_path = create_structure( )
[CALL] lib/pydoc_generator (create_pydocs)[302] -> lib/pydoc_generator (create_structure)[64]
{"base_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc","package_name":"lib"}
[RETURN] lib/pydoc_generator[90] ( return doc_dir ) -> PosixPath:
Error in trace_all return handling: Object of type PosixPath is not JSON serializable
[CALL] lib/pydoc_generator ( generate_pydoc( )
[CALL] lib/pydoc_generator (create_pydocs)[307] -> lib/pydoc_generator (generate_pydoc)[92]
{"project_path":"/Users/emvaldes/.repos/devops/workflows","file_path":"/Users/emvaldes/.repos/devops/workflows/lib/system_variables.py","docs_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib","configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[129] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/lib/system_variables.py...","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/lib/system_variables.py...","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Generating documentation for /Users/emvaldes/.repos/devops/workflows/lib/system_variables.py...
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Generating documentation for /Users/emvaldes/.repos/devops/workflows/lib/system_variables.py...
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Original Relative Path: {relative_file_path}") )
[CALL] lib/pydoc_generator (generate_pydoc)[145] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Original Relative Path: lib/system_variables.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Original Relative Path: lib/system_variables.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Sanitized Module Path: {module_name}") )
[CALL] lib/pydoc_generator (generate_pydoc)[146] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Sanitized Module Path: lib.system_variables
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Sanitized Module Path: lib.system_variables
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[148] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Relative File Path: lib/system_variables.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Relative File Path: lib/system_variables.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Relative File Path: lib/system_variables.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Relative File Path: lib/system_variables.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[171] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Running PyDoc Command: python -m pydoc lib.system_variables","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Running PyDoc Command: python -m pydoc lib.system_variables","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Running PyDoc Command: python -m pydoc lib.system_variables
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Running PyDoc Command: python -m pydoc lib.system_variables
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[191]
{"match":"<re.Match object; span=(3672, 3687), match='/Users/emvaldes'>"}
[RETURN] lib/pydoc_generator[191] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<user-home>
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[191]
{"match":"<re.Match object; span=(3739, 3778), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[191] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[191]
{"match":"<re.Match object; span=(3838, 3877), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[191] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[191]
{"match":"<re.Match object; span=(3920, 3959), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[191] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[191]
{"match":"<re.Match object; span=(4057, 4072), match='/Users/emvaldes'>"}
[RETURN] lib/pydoc_generator[191] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<user-home>
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[191]
{"match":"<re.Match object; span=(4124, 4163), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[191] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[191]
{"match":"<re.Match object; span=(4259, 4274), match='/Users/emvaldes'>"}
[RETURN] lib/pydoc_generator[191] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<user-home>
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[191]
{"match":"<re.Match object; span=(4386, 4401), match='/Users/emvaldes'>"}
[RETURN] lib/pydoc_generator[191] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<user-home>
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[191]
{"match":"<re.Match object; span=(4464, 4479), match='/Users/emvaldes'>"}
[RETURN] lib/pydoc_generator[191] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<user-home>
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[191]
{"match":"<re.Match object; span=(4531, 4570), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[191] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[200] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib/system_variables.pydoc","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib/system_variables.pydoc","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a73ad40>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib/system_variables.pydoc
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a73ad40>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib/system_variables.pydoc
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[251] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/lib/system_variables.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/lib/system_variables.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Finished processing /Users/emvaldes/.repos/devops/workflows/lib/system_variables.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Finished processing /Users/emvaldes/.repos/devops/workflows/lib/system_variables.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[RETURN] lib/pydoc_generator[251] ( log_utils.log_message( ) -> NoneType: None
[CALL] lib/pydoc_generator ( docs_path = create_structure( )
[CALL] lib/pydoc_generator (create_pydocs)[302] -> lib/pydoc_generator (create_structure)[64]
{"base_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc","package_name":"lib"}
[RETURN] lib/pydoc_generator[90] ( return doc_dir ) -> PosixPath:
Error in trace_all return handling: Object of type PosixPath is not JSON serializable
[CALL] lib/pydoc_generator ( generate_pydoc( )
[CALL] lib/pydoc_generator (create_pydocs)[307] -> lib/pydoc_generator (generate_pydoc)[92]
{"project_path":"/Users/emvaldes/.repos/devops/workflows","file_path":"/Users/emvaldes/.repos/devops/workflows/lib/accesstoken_expiration.py","docs_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib","configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[129] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/lib/accesstoken_expiration.py...","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/lib/accesstoken_expiration.py...","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Generating documentation for /Users/emvaldes/.repos/devops/workflows/lib/accesstoken_expiration.py...
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Generating documentation for /Users/emvaldes/.repos/devops/workflows/lib/accesstoken_expiration.py...
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Original Relative Path: {relative_file_path}") )
[CALL] lib/pydoc_generator (generate_pydoc)[145] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Original Relative Path: lib/accesstoken_expiration.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Original Relative Path: lib/accesstoken_expiration.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Sanitized Module Path: {module_name}") )
[CALL] lib/pydoc_generator (generate_pydoc)[146] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Sanitized Module Path: lib.accesstoken_expiration
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Sanitized Module Path: lib.accesstoken_expiration
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[148] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Relative File Path: lib/accesstoken_expiration.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Relative File Path: lib/accesstoken_expiration.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Relative File Path: lib/accesstoken_expiration.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Relative File Path: lib/accesstoken_expiration.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[171] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Running PyDoc Command: python -m pydoc lib.accesstoken_expiration","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Running PyDoc Command: python -m pydoc lib.accesstoken_expiration","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Running PyDoc Command: python -m pydoc lib.accesstoken_expiration
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Running PyDoc Command: python -m pydoc lib.accesstoken_expiration
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[191]
{"match":"<re.Match object; span=(5697, 5736), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[191] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[200] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib/accesstoken_expiration.pydoc","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib/accesstoken_expiration.pydoc","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib/accesstoken_expiration.pydoc
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib/accesstoken_expiration.pydoc
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[251] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/lib/accesstoken_expiration.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/lib/accesstoken_expiration.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Finished processing /Users/emvaldes/.repos/devops/workflows/lib/accesstoken_expiration.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Finished processing /Users/emvaldes/.repos/devops/workflows/lib/accesstoken_expiration.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[RETURN] lib/pydoc_generator[251] ( log_utils.log_message( ) -> NoneType: None
[CALL] lib/pydoc_generator ( docs_path = create_structure( )
[CALL] lib/pydoc_generator (create_pydocs)[302] -> lib/pydoc_generator (create_structure)[64]
{"base_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc","package_name":"lib"}
[RETURN] lib/pydoc_generator[90] ( return doc_dir ) -> PosixPath:
Error in trace_all return handling: Object of type PosixPath is not JSON serializable
[CALL] lib/pydoc_generator ( generate_pydoc( )
[CALL] lib/pydoc_generator (create_pydocs)[307] -> lib/pydoc_generator (generate_pydoc)[92]
{"project_path":"/Users/emvaldes/.repos/devops/workflows","file_path":"/Users/emvaldes/.repos/devops/workflows/lib/timezone_localoffset.py","docs_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib","configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[129] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/lib/timezone_localoffset.py...","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/lib/timezone_localoffset.py...","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Generating documentation for /Users/emvaldes/.repos/devops/workflows/lib/timezone_localoffset.py...
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Generating documentation for /Users/emvaldes/.repos/devops/workflows/lib/timezone_localoffset.py...
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Original Relative Path: {relative_file_path}") )
[CALL] lib/pydoc_generator (generate_pydoc)[145] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Original Relative Path: lib/timezone_localoffset.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Original Relative Path: lib/timezone_localoffset.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Sanitized Module Path: {module_name}") )
[CALL] lib/pydoc_generator (generate_pydoc)[146] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Sanitized Module Path: lib.timezone_localoffset
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Sanitized Module Path: lib.timezone_localoffset
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[148] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Relative File Path: lib/timezone_localoffset.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Relative File Path: lib/timezone_localoffset.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Relative File Path: lib/timezone_localoffset.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Relative File Path: lib/timezone_localoffset.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a73ad40>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a73ad40>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a73ad40>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[171] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Running PyDoc Command: python -m pydoc lib.timezone_localoffset","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Running PyDoc Command: python -m pydoc lib.timezone_localoffset","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Running PyDoc Command: python -m pydoc lib.timezone_localoffset
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Running PyDoc Command: python -m pydoc lib.timezone_localoffset
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[191]
{"match":"<re.Match object; span=(3548, 3587), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[191] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[200] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib/timezone_localoffset.pydoc","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib/timezone_localoffset.pydoc","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib/timezone_localoffset.pydoc
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib/timezone_localoffset.pydoc
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[251] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/lib/timezone_localoffset.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/lib/timezone_localoffset.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Finished processing /Users/emvaldes/.repos/devops/workflows/lib/timezone_localoffset.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Finished processing /Users/emvaldes/.repos/devops/workflows/lib/timezone_localoffset.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[RETURN] lib/pydoc_generator[251] ( log_utils.log_message( ) -> NoneType: None
[CALL] lib/pydoc_generator ( docs_path = create_structure( )
[CALL] lib/pydoc_generator (create_pydocs)[302] -> lib/pydoc_generator (create_structure)[64]
{"base_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc","package_name":"lib"}
[RETURN] lib/pydoc_generator[90] ( return doc_dir ) -> PosixPath:
Error in trace_all return handling: Object of type PosixPath is not JSON serializable
[CALL] lib/pydoc_generator ( generate_pydoc( )
[CALL] lib/pydoc_generator (create_pydocs)[307] -> lib/pydoc_generator (generate_pydoc)[92]
{"project_path":"/Users/emvaldes/.repos/devops/workflows","file_path":"/Users/emvaldes/.repos/devops/workflows/lib/configure_params.py","docs_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib","configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[129] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/lib/configure_params.py...","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/lib/configure_params.py...","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Generating documentation for /Users/emvaldes/.repos/devops/workflows/lib/configure_params.py...
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Generating documentation for /Users/emvaldes/.repos/devops/workflows/lib/configure_params.py...
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Original Relative Path: {relative_file_path}") )
[CALL] lib/pydoc_generator (generate_pydoc)[145] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a067d90>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Original Relative Path: lib/configure_params.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a067d90>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Original Relative Path: lib/configure_params.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Sanitized Module Path: {module_name}") )
[CALL] lib/pydoc_generator (generate_pydoc)[146] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Sanitized Module Path: lib.configure_params
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Sanitized Module Path: lib.configure_params
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[148] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Relative File Path: lib/configure_params.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Relative File Path: lib/configure_params.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Relative File Path: lib/configure_params.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Relative File Path: lib/configure_params.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a73ad70>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a73ad70>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a73ad70>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[171] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Running PyDoc Command: python -m pydoc lib.configure_params","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Running PyDoc Command: python -m pydoc lib.configure_params","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Running PyDoc Command: python -m pydoc lib.configure_params
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Running PyDoc Command: python -m pydoc lib.configure_params
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[191]
{"match":"<re.Match object; span=(9401, 9440), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[191] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[191]
{"match":"<re.Match object; span=(9479, 9518), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[191] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[191]
{"match":"<re.Match object; span=(9614, 9629), match='/Users/emvaldes'>"}
[RETURN] lib/pydoc_generator[191] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<user-home>
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[191]
{"match":"<re.Match object; span=(9741, 9756), match='/Users/emvaldes'>"}
[RETURN] lib/pydoc_generator[191] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<user-home>
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[191]
{"match":"<re.Match object; span=(9819, 9834), match='/Users/emvaldes'>"}
[RETURN] lib/pydoc_generator[191] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<user-home>
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[191]
{"match":"<re.Match object; span=(9886, 9925), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[191] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[200] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib/configure_params.pydoc","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib/configure_params.pydoc","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib/configure_params.pydoc
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib/configure_params.pydoc
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[251] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/lib/configure_params.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/lib/configure_params.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Finished processing /Users/emvaldes/.repos/devops/workflows/lib/configure_params.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Finished processing /Users/emvaldes/.repos/devops/workflows/lib/configure_params.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[RETURN] lib/pydoc_generator[251] ( log_utils.log_message( ) -> NoneType: None
[CALL] lib/pydoc_generator ( docs_path = create_structure( )
[CALL] lib/pydoc_generator (create_pydocs)[302] -> lib/pydoc_generator (create_structure)[64]
{"base_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc","package_name":"lib"}
[RETURN] lib/pydoc_generator[90] ( return doc_dir ) -> PosixPath:
Error in trace_all return handling: Object of type PosixPath is not JSON serializable
[CALL] lib/pydoc_generator ( generate_pydoc( )
[CALL] lib/pydoc_generator (create_pydocs)[307] -> lib/pydoc_generator (generate_pydoc)[92]
{"project_path":"/Users/emvaldes/.repos/devops/workflows","file_path":"/Users/emvaldes/.repos/devops/workflows/lib/__init__.py","docs_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib","configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[129] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/lib/__init__.py...","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/lib/__init__.py...","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Generating documentation for /Users/emvaldes/.repos/devops/workflows/lib/__init__.py...
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Generating documentation for /Users/emvaldes/.repos/devops/workflows/lib/__init__.py...
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Original Relative Path: {relative_file_path}") )
[CALL] lib/pydoc_generator (generate_pydoc)[145] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a067d90>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Original Relative Path: lib/__init__.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a067d90>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Original Relative Path: lib/__init__.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Sanitized Module Path: {module_name}") )
[CALL] lib/pydoc_generator (generate_pydoc)[146] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Sanitized Module Path: lib.__init__
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Sanitized Module Path: lib.__init__
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[148] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Relative File Path: lib/__init__.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Relative File Path: lib/__init__.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Relative File Path: lib/__init__.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Relative File Path: lib/__init__.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a73ad40>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a73ad40>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a73ad40>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[171] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Running PyDoc Command: python -m pydoc lib.__init__","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Running PyDoc Command: python -m pydoc lib.__init__","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Running PyDoc Command: python -m pydoc lib.__init__
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Running PyDoc Command: python -m pydoc lib.__init__
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[191]
{"match":"<re.Match object; span=(1316, 1355), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[191] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[200] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib/__init__.pydoc","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib/__init__.pydoc","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib/__init__.pydoc
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib/__init__.pydoc
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[251] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/lib/__init__.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/lib/__init__.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Finished processing /Users/emvaldes/.repos/devops/workflows/lib/__init__.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Finished processing /Users/emvaldes/.repos/devops/workflows/lib/__init__.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[RETURN] lib/pydoc_generator[251] ( log_utils.log_message( ) -> NoneType: None
[CALL] lib/pydoc_generator ( docs_path = create_structure( )
[CALL] lib/pydoc_generator (create_pydocs)[302] -> lib/pydoc_generator (create_structure)[64]
{"base_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc","package_name":"lib"}
[RETURN] lib/pydoc_generator[90] ( return doc_dir ) -> PosixPath:
Error in trace_all return handling: Object of type PosixPath is not JSON serializable
[CALL] lib/pydoc_generator ( generate_pydoc( )
[CALL] lib/pydoc_generator (create_pydocs)[307] -> lib/pydoc_generator (generate_pydoc)[92]
{"project_path":"/Users/emvaldes/.repos/devops/workflows","file_path":"/Users/emvaldes/.repos/devops/workflows/lib/system_params.py","docs_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib","configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[129] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/lib/system_params.py...","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/lib/system_params.py...","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Generating documentation for /Users/emvaldes/.repos/devops/workflows/lib/system_params.py...
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Generating documentation for /Users/emvaldes/.repos/devops/workflows/lib/system_params.py...
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Original Relative Path: {relative_file_path}") )
[CALL] lib/pydoc_generator (generate_pydoc)[145] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Original Relative Path: lib/system_params.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Original Relative Path: lib/system_params.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Sanitized Module Path: {module_name}") )
[CALL] lib/pydoc_generator (generate_pydoc)[146] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a067d90>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Sanitized Module Path: lib.system_params
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a067d90>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Sanitized Module Path: lib.system_params
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[148] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Relative File Path: lib/system_params.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Relative File Path: lib/system_params.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Relative File Path: lib/system_params.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Relative File Path: lib/system_params.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[171] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Running PyDoc Command: python -m pydoc lib.system_params","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Running PyDoc Command: python -m pydoc lib.system_params","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a067d90>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Running PyDoc Command: python -m pydoc lib.system_params
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a067d90>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Running PyDoc Command: python -m pydoc lib.system_params
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[191]
{"match":"<re.Match object; span=(4891, 4906), match='/Users/emvaldes'>"}
[RETURN] lib/pydoc_generator[191] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<user-home>
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[191]
{"match":"<re.Match object; span=(4964, 4979), match='/Users/emvaldes'>"}
[RETURN] lib/pydoc_generator[191] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<user-home>
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[191]
{"match":"<re.Match object; span=(5047, 5062), match='/Users/emvaldes'>"}
[RETURN] lib/pydoc_generator[191] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<user-home>
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[191]
{"match":"<re.Match object; span=(5114, 5153), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[191] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[191]
{"match":"<re.Match object; span=(5249, 5264), match='/Users/emvaldes'>"}
[RETURN] lib/pydoc_generator[191] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<user-home>
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[191]
{"match":"<re.Match object; span=(5326, 5341), match='/Users/emvaldes'>"}
[RETURN] lib/pydoc_generator[191] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<user-home>
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[191]
{"match":"<re.Match object; span=(5404, 5419), match='/Users/emvaldes'>"}
[RETURN] lib/pydoc_generator[191] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<user-home>
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[191]
{"match":"<re.Match object; span=(5471, 5510), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[191] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[200] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib/system_params.pydoc","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib/system_params.pydoc","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib/system_params.pydoc
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib/system_params.pydoc
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[251] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/lib/system_params.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/lib/system_params.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a73ad40>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Finished processing /Users/emvaldes/.repos/devops/workflows/lib/system_params.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a73ad40>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Finished processing /Users/emvaldes/.repos/devops/workflows/lib/system_params.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[RETURN] lib/pydoc_generator[251] ( log_utils.log_message( ) -> NoneType: None
[CALL] lib/pydoc_generator ( docs_path = create_structure( )
[CALL] lib/pydoc_generator (create_pydocs)[302] -> lib/pydoc_generator (create_structure)[64]
{"base_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc","package_name":"lib"}
[RETURN] lib/pydoc_generator[90] ( return doc_dir ) -> PosixPath:
Error in trace_all return handling: Object of type PosixPath is not JSON serializable
[CALL] lib/pydoc_generator ( generate_pydoc( )
[CALL] lib/pydoc_generator (create_pydocs)[307] -> lib/pydoc_generator (generate_pydoc)[92]
{"project_path":"/Users/emvaldes/.repos/devops/workflows","file_path":"/Users/emvaldes/.repos/devops/workflows/lib/parsing_userinput.py","docs_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib","configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[129] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/lib/parsing_userinput.py...","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/lib/parsing_userinput.py...","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Generating documentation for /Users/emvaldes/.repos/devops/workflows/lib/parsing_userinput.py...
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Generating documentation for /Users/emvaldes/.repos/devops/workflows/lib/parsing_userinput.py...
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Original Relative Path: {relative_file_path}") )
[CALL] lib/pydoc_generator (generate_pydoc)[145] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Original Relative Path: lib/parsing_userinput.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Original Relative Path: lib/parsing_userinput.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Sanitized Module Path: {module_name}") )
[CALL] lib/pydoc_generator (generate_pydoc)[146] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a067d90>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Sanitized Module Path: lib.parsing_userinput
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a067d90>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Sanitized Module Path: lib.parsing_userinput
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[148] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Relative File Path: lib/parsing_userinput.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Relative File Path: lib/parsing_userinput.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Relative File Path: lib/parsing_userinput.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Relative File Path: lib/parsing_userinput.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[171] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Running PyDoc Command: python -m pydoc lib.parsing_userinput","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Running PyDoc Command: python -m pydoc lib.parsing_userinput","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a067d90>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Running PyDoc Command: python -m pydoc lib.parsing_userinput
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a067d90>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Running PyDoc Command: python -m pydoc lib.parsing_userinput
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[191]
{"match":"<re.Match object; span=(5534, 5573), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[191] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[200] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib/parsing_userinput.pydoc","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib/parsing_userinput.pydoc","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib/parsing_userinput.pydoc
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib/parsing_userinput.pydoc
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[251] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/lib/parsing_userinput.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/lib/parsing_userinput.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Finished processing /Users/emvaldes/.repos/devops/workflows/lib/parsing_userinput.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Finished processing /Users/emvaldes/.repos/devops/workflows/lib/parsing_userinput.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[RETURN] lib/pydoc_generator[251] ( log_utils.log_message( ) -> NoneType: None
[CALL] lib/pydoc_generator ( docs_path = create_structure( )
[CALL] lib/pydoc_generator (create_pydocs)[302] -> lib/pydoc_generator (create_structure)[64]
{"base_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc","package_name":"lib"}
[RETURN] lib/pydoc_generator[90] ( return doc_dir ) -> PosixPath:
Error in trace_all return handling: Object of type PosixPath is not JSON serializable
[CALL] lib/pydoc_generator ( generate_pydoc( )
[CALL] lib/pydoc_generator (create_pydocs)[307] -> lib/pydoc_generator (generate_pydoc)[92]
{"project_path":"/Users/emvaldes/.repos/devops/workflows","file_path":"/Users/emvaldes/.repos/devops/workflows/lib/pydoc_generator.py","docs_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib","configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[129] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/lib/pydoc_generator.py...","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/lib/pydoc_generator.py...","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Generating documentation for /Users/emvaldes/.repos/devops/workflows/lib/pydoc_generator.py...
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Generating documentation for /Users/emvaldes/.repos/devops/workflows/lib/pydoc_generator.py...
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Original Relative Path: {relative_file_path}") )
[CALL] lib/pydoc_generator (generate_pydoc)[145] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Original Relative Path: lib/pydoc_generator.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Original Relative Path: lib/pydoc_generator.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Sanitized Module Path: {module_name}") )
[CALL] lib/pydoc_generator (generate_pydoc)[146] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a18fe50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Sanitized Module Path: lib.pydoc_generator
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a18fe50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Sanitized Module Path: lib.pydoc_generator
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[148] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Relative File Path: lib/pydoc_generator.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Relative File Path: lib/pydoc_generator.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Relative File Path: lib/pydoc_generator.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Relative File Path: lib/pydoc_generator.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a18fe50>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a18fe50>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a18fe50>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[171] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Running PyDoc Command: python -m pydoc lib.pydoc_generator","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Running PyDoc Command: python -m pydoc lib.pydoc_generator","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Running PyDoc Command: python -m pydoc lib.pydoc_generator
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Running PyDoc Command: python -m pydoc lib.pydoc_generator
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[191]
{"match":"<re.Match object; span=(5112, 5151), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[191] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[200] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib/pydoc_generator.pydoc","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib/pydoc_generator.pydoc","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib/pydoc_generator.pydoc
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib/pydoc_generator.pydoc
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[251] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/lib/pydoc_generator.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/lib/pydoc_generator.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Finished processing /Users/emvaldes/.repos/devops/workflows/lib/pydoc_generator.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Finished processing /Users/emvaldes/.repos/devops/workflows/lib/pydoc_generator.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[RETURN] lib/pydoc_generator[251] ( log_utils.log_message( ) -> NoneType: None
[CALL] lib/pydoc_generator ( docs_path = create_structure( )
[CALL] lib/pydoc_generator (create_pydocs)[302] -> lib/pydoc_generator (create_structure)[64]
{"base_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc","package_name":"lib"}
[RETURN] lib/pydoc_generator[90] ( return doc_dir ) -> PosixPath:
Error in trace_all return handling: Object of type PosixPath is not JSON serializable
[CALL] lib/pydoc_generator ( generate_pydoc( )
[CALL] lib/pydoc_generator (create_pydocs)[307] -> lib/pydoc_generator (generate_pydoc)[92]
{"project_path":"/Users/emvaldes/.repos/devops/workflows","file_path":"/Users/emvaldes/.repos/devops/workflows/lib/manage_accesstoken.py","docs_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib","configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[129] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/lib/manage_accesstoken.py...","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/lib/manage_accesstoken.py...","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a067d90>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Generating documentation for /Users/emvaldes/.repos/devops/workflows/lib/manage_accesstoken.py...
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a067d90>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Generating documentation for /Users/emvaldes/.repos/devops/workflows/lib/manage_accesstoken.py...
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Original Relative Path: {relative_file_path}") )
[CALL] lib/pydoc_generator (generate_pydoc)[145] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Original Relative Path: lib/manage_accesstoken.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Original Relative Path: lib/manage_accesstoken.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Sanitized Module Path: {module_name}") )
[CALL] lib/pydoc_generator (generate_pydoc)[146] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a18fe50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Sanitized Module Path: lib.manage_accesstoken
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a18fe50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Sanitized Module Path: lib.manage_accesstoken
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[148] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Relative File Path: lib/manage_accesstoken.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Relative File Path: lib/manage_accesstoken.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Relative File Path: lib/manage_accesstoken.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Relative File Path: lib/manage_accesstoken.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a18fe50>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a18fe50>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a18fe50>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[171] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Running PyDoc Command: python -m pydoc lib.manage_accesstoken","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Running PyDoc Command: python -m pydoc lib.manage_accesstoken","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a067d90>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Running PyDoc Command: python -m pydoc lib.manage_accesstoken
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a067d90>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Running PyDoc Command: python -m pydoc lib.manage_accesstoken
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[191]
{"match":"<re.Match object; span=(3290, 3329), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[191] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[200] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib/manage_accesstoken.pydoc","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib/manage_accesstoken.pydoc","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1acf70>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib/manage_accesstoken.pydoc
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1acf70>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib/manage_accesstoken.pydoc
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[251] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/lib/manage_accesstoken.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/lib/manage_accesstoken.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1acf70>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Finished processing /Users/emvaldes/.repos/devops/workflows/lib/manage_accesstoken.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1acf70>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Finished processing /Users/emvaldes/.repos/devops/workflows/lib/manage_accesstoken.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[RETURN] lib/pydoc_generator[251] ( log_utils.log_message( ) -> NoneType: None
[CALL] lib/pydoc_generator ( docs_path = create_structure( )
[CALL] lib/pydoc_generator (create_pydocs)[302] -> lib/pydoc_generator (create_structure)[64]
{"base_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc","package_name":"lib"}
[RETURN] lib/pydoc_generator[90] ( return doc_dir ) -> PosixPath:
Error in trace_all return handling: Object of type PosixPath is not JSON serializable
[CALL] lib/pydoc_generator ( generate_pydoc( )
[CALL] lib/pydoc_generator (create_pydocs)[307] -> lib/pydoc_generator (generate_pydoc)[92]
{"project_path":"/Users/emvaldes/.repos/devops/workflows","file_path":"/Users/emvaldes/.repos/devops/workflows/lib/pkgconfig_loader.py","docs_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib","configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[129] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/lib/pkgconfig_loader.py...","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/lib/pkgconfig_loader.py...","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Generating documentation for /Users/emvaldes/.repos/devops/workflows/lib/pkgconfig_loader.py...
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Generating documentation for /Users/emvaldes/.repos/devops/workflows/lib/pkgconfig_loader.py...
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Original Relative Path: {relative_file_path}") )
[CALL] lib/pydoc_generator (generate_pydoc)[145] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Original Relative Path: lib/pkgconfig_loader.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Original Relative Path: lib/pkgconfig_loader.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Sanitized Module Path: {module_name}") )
[CALL] lib/pydoc_generator (generate_pydoc)[146] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a18fe50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Sanitized Module Path: lib.pkgconfig_loader
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a18fe50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Sanitized Module Path: lib.pkgconfig_loader
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[148] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Relative File Path: lib/pkgconfig_loader.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Relative File Path: lib/pkgconfig_loader.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a067d90>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Relative File Path: lib/pkgconfig_loader.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a067d90>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Relative File Path: lib/pkgconfig_loader.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a18fe50>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a18fe50>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a18fe50>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[171] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Running PyDoc Command: python -m pydoc lib.pkgconfig_loader","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Running PyDoc Command: python -m pydoc lib.pkgconfig_loader","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Running PyDoc Command: python -m pydoc lib.pkgconfig_loader
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Running PyDoc Command: python -m pydoc lib.pkgconfig_loader
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[191]
{"match":"<re.Match object; span=(6496, 6535), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[191] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[191]
{"match":"<re.Match object; span=(6578, 6617), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[191] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[191]
{"match":"<re.Match object; span=(6652, 6691), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[191] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[191]
{"match":"<re.Match object; span=(6756, 6795), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[191] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[200] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib/pkgconfig_loader.pydoc","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib/pkgconfig_loader.pydoc","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1acf70>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib/pkgconfig_loader.pydoc
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1acf70>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib/pkgconfig_loader.pydoc
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[251] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/lib/pkgconfig_loader.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/lib/pkgconfig_loader.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1acf70>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Finished processing /Users/emvaldes/.repos/devops/workflows/lib/pkgconfig_loader.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1acf70>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Finished processing /Users/emvaldes/.repos/devops/workflows/lib/pkgconfig_loader.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[RETURN] lib/pydoc_generator[251] ( log_utils.log_message( ) -> NoneType: None
[CALL] lib/pydoc_generator ( docs_path = create_structure( )
[CALL] lib/pydoc_generator (create_pydocs)[302] -> lib/pydoc_generator (create_structure)[64]
{"base_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc","package_name":"lib"}
[RETURN] lib/pydoc_generator[90] ( return doc_dir ) -> PosixPath:
Error in trace_all return handling: Object of type PosixPath is not JSON serializable
[CALL] lib/pydoc_generator ( generate_pydoc( )
[CALL] lib/pydoc_generator (create_pydocs)[307] -> lib/pydoc_generator (generate_pydoc)[92]
{"project_path":"/Users/emvaldes/.repos/devops/workflows","file_path":"/Users/emvaldes/.repos/devops/workflows/lib/argument_parser.py","docs_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib","configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[129] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/lib/argument_parser.py...","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/lib/argument_parser.py...","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Generating documentation for /Users/emvaldes/.repos/devops/workflows/lib/argument_parser.py...
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Generating documentation for /Users/emvaldes/.repos/devops/workflows/lib/argument_parser.py...
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Original Relative Path: {relative_file_path}") )
[CALL] lib/pydoc_generator (generate_pydoc)[145] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a18fe50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Original Relative Path: lib/argument_parser.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a18fe50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Original Relative Path: lib/argument_parser.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Sanitized Module Path: {module_name}") )
[CALL] lib/pydoc_generator (generate_pydoc)[146] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a067d90>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Sanitized Module Path: lib.argument_parser
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a067d90>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Sanitized Module Path: lib.argument_parser
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[148] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Relative File Path: lib/argument_parser.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Relative File Path: lib/argument_parser.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Relative File Path: lib/argument_parser.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Relative File Path: lib/argument_parser.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a067d90>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a067d90>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a067d90>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[171] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Running PyDoc Command: python -m pydoc lib.argument_parser","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Running PyDoc Command: python -m pydoc lib.argument_parser","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Running PyDoc Command: python -m pydoc lib.argument_parser
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Running PyDoc Command: python -m pydoc lib.argument_parser
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[191]
{"match":"<re.Match object; span=(6622, 6637), match='/Users/emvaldes'>"}
[RETURN] lib/pydoc_generator[191] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<user-home>
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[191]
{"match":"<re.Match object; span=(6689, 6728), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[191] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[200] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib/argument_parser.pydoc","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib/argument_parser.pydoc","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1acf70>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib/argument_parser.pydoc
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1acf70>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/lib/argument_parser.pydoc
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[251] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/lib/argument_parser.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/lib/argument_parser.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1acf70>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Finished processing /Users/emvaldes/.repos/devops/workflows/lib/argument_parser.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1acf70>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Finished processing /Users/emvaldes/.repos/devops/workflows/lib/argument_parser.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[RETURN] lib/pydoc_generator[251] ( log_utils.log_message( ) -> NoneType: None
[CALL] lib/pydoc_generator ( docs_path = create_structure( )
[CALL] lib/pydoc_generator (create_pydocs)[302] -> lib/pydoc_generator (create_structure)[64]
{"base_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc","package_name":".github/scripts"}
[RETURN] lib/pydoc_generator[90] ( return doc_dir ) -> PosixPath:
Error in trace_all return handling: Object of type PosixPath is not JSON serializable
[CALL] lib/pydoc_generator ( generate_pydoc( )
[CALL] lib/pydoc_generator (create_pydocs)[307] -> lib/pydoc_generator (generate_pydoc)[92]
{"project_path":"/Users/emvaldes/.repos/devops/workflows","file_path":"/Users/emvaldes/.repos/devops/workflows/.github/scripts/extract_pytest_functions.py","docs_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc/.github/scripts","configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[129] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/.github/scripts/extract_pytest_functions.py...","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/.github/scripts/extract_pytest_functions.py...","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a067d90>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Generating documentation for /Users/emvaldes/.repos/devops/workflows/.github/scripts/extract_pytest_functions.py...
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a067d90>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Generating documentation for /Users/emvaldes/.repos/devops/workflows/.github/scripts/extract_pytest_functions.py...
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Original Relative Path: {relative_file_path}") )
[CALL] lib/pydoc_generator (generate_pydoc)[145] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Original Relative Path: .github/scripts/extract_pytest_functions.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Original Relative Path: .github/scripts/extract_pytest_functions.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Sanitized Module Path: {module_name}") )
[CALL] lib/pydoc_generator (generate_pydoc)[146] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Sanitized Module Path: .github.scripts.extract_pytest_functions
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Sanitized Module Path: .github.scripts.extract_pytest_functions
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[148] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Relative File Path: .github/scripts/extract_pytest_functions.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Relative File Path: .github/scripts/extract_pytest_functions.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Relative File Path: .github/scripts/extract_pytest_functions.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Relative File Path: .github/scripts/extract_pytest_functions.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a18fe50>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: True
true
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[171] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Running PyDoc Command: python -m pydoc ./.github/scripts/extract_pytest_functions.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Running PyDoc Command: python -m pydoc ./.github/scripts/extract_pytest_functions.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a18fe50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Running PyDoc Command: python -m pydoc ./.github/scripts/extract_pytest_functions.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a18fe50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Running PyDoc Command: python -m pydoc ./.github/scripts/extract_pytest_functions.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[191]
{"match":"<re.Match object; span=(7003, 7042), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[191] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[200] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/.github/scripts/extract_pytest_functions.pydoc","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/.github/scripts/extract_pytest_functions.pydoc","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/.github/scripts/extract_pytest_functions.pydoc
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/.github/scripts/extract_pytest_functions.pydoc
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[251] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/.github/scripts/extract_pytest_functions.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/.github/scripts/extract_pytest_functions.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Finished processing /Users/emvaldes/.repos/devops/workflows/.github/scripts/extract_pytest_functions.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Finished processing /Users/emvaldes/.repos/devops/workflows/.github/scripts/extract_pytest_functions.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[RETURN] lib/pydoc_generator[251] ( log_utils.log_message( ) -> NoneType: None
[CALL] lib/pydoc_generator ( docs_path = create_structure( )
[CALL] lib/pydoc_generator (create_pydocs)[302] -> lib/pydoc_generator (create_structure)[64]
{"base_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc","package_name":".github/scripts"}
[RETURN] lib/pydoc_generator[90] ( return doc_dir ) -> PosixPath:
Error in trace_all return handling: Object of type PosixPath is not JSON serializable
[CALL] lib/pydoc_generator ( generate_pydoc( )
[CALL] lib/pydoc_generator (create_pydocs)[307] -> lib/pydoc_generator (generate_pydoc)[92]
{"project_path":"/Users/emvaldes/.repos/devops/workflows","file_path":"/Users/emvaldes/.repos/devops/workflows/.github/scripts/extract_pytest_resources.py","docs_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc/.github/scripts","configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[129] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/.github/scripts/extract_pytest_resources.py...","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/.github/scripts/extract_pytest_resources.py...","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Generating documentation for /Users/emvaldes/.repos/devops/workflows/.github/scripts/extract_pytest_resources.py...
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Generating documentation for /Users/emvaldes/.repos/devops/workflows/.github/scripts/extract_pytest_resources.py...
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Original Relative Path: {relative_file_path}") )
[CALL] lib/pydoc_generator (generate_pydoc)[145] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Original Relative Path: .github/scripts/extract_pytest_resources.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Original Relative Path: .github/scripts/extract_pytest_resources.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Sanitized Module Path: {module_name}") )
[CALL] lib/pydoc_generator (generate_pydoc)[146] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Sanitized Module Path: .github.scripts.extract_pytest_resources
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Sanitized Module Path: .github.scripts.extract_pytest_resources
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[148] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Relative File Path: .github/scripts/extract_pytest_resources.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Relative File Path: .github/scripts/extract_pytest_resources.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a18fe50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Relative File Path: .github/scripts/extract_pytest_resources.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a18fe50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Relative File Path: .github/scripts/extract_pytest_resources.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a067d90>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: True
true
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[171] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Running PyDoc Command: python -m pydoc ./.github/scripts/extract_pytest_resources.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Running PyDoc Command: python -m pydoc ./.github/scripts/extract_pytest_resources.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a067d90>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Running PyDoc Command: python -m pydoc ./.github/scripts/extract_pytest_resources.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a067d90>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Running PyDoc Command: python -m pydoc ./.github/scripts/extract_pytest_resources.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[191]
{"match":"<re.Match object; span=(7895, 7934), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[191] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[200] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/.github/scripts/extract_pytest_resources.pydoc","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/.github/scripts/extract_pytest_resources.pydoc","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/.github/scripts/extract_pytest_resources.pydoc
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/.github/scripts/extract_pytest_resources.pydoc
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[251] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/.github/scripts/extract_pytest_resources.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/.github/scripts/extract_pytest_resources.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Finished processing /Users/emvaldes/.repos/devops/workflows/.github/scripts/extract_pytest_resources.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Finished processing /Users/emvaldes/.repos/devops/workflows/.github/scripts/extract_pytest_resources.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[RETURN] lib/pydoc_generator[251] ( log_utils.log_message( ) -> NoneType: None
[CALL] lib/pydoc_generator ( docs_path = create_structure( )
[CALL] lib/pydoc_generator (create_pydocs)[302] -> lib/pydoc_generator (create_structure)[64]
{"base_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc","package_name":"packages/appflow_tracer"}
[RETURN] lib/pydoc_generator[90] ( return doc_dir ) -> PosixPath:
Error in trace_all return handling: Object of type PosixPath is not JSON serializable
[CALL] lib/pydoc_generator ( generate_pydoc( )
[CALL] lib/pydoc_generator (create_pydocs)[307] -> lib/pydoc_generator (generate_pydoc)[92]
{"project_path":"/Users/emvaldes/.repos/devops/workflows","file_path":"/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/tracing.py","docs_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/appflow_tracer","configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[129] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/tracing.py...","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/tracing.py...","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/tracing.py...
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/tracing.py...
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Original Relative Path: {relative_file_path}") )
[CALL] lib/pydoc_generator (generate_pydoc)[145] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a067d90>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Original Relative Path: packages/appflow_tracer/tracing.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a067d90>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Original Relative Path: packages/appflow_tracer/tracing.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Sanitized Module Path: {module_name}") )
[CALL] lib/pydoc_generator (generate_pydoc)[146] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Sanitized Module Path: packages.appflow_tracer.tracing
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Sanitized Module Path: packages.appflow_tracer.tracing
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[148] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Relative File Path: packages/appflow_tracer/tracing.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Relative File Path: packages/appflow_tracer/tracing.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Relative File Path: packages/appflow_tracer/tracing.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Relative File Path: packages/appflow_tracer/tracing.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[171] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Running PyDoc Command: python -m pydoc packages.appflow_tracer.tracing","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Running PyDoc Command: python -m pydoc packages.appflow_tracer.tracing","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a067d90>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Running PyDoc Command: python -m pydoc packages.appflow_tracer.tracing
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a067d90>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Running PyDoc Command: python -m pydoc packages.appflow_tracer.tracing
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[191]
{"match":"<re.Match object; span=(18251, 18290), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[191] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[191]
{"match":"<re.Match object; span=(19557, 19596), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[191] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[191]
{"match":"<re.Match object; span=(19635, 19674), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[191] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[191]
{"match":"<re.Match object; span=(19706, 19745), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[191] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[200] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/appflow_tracer/tracing.pydoc","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/appflow_tracer/tracing.pydoc","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1acf70>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/appflow_tracer/tracing.pydoc
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1acf70>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/appflow_tracer/tracing.pydoc
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[251] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/tracing.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/tracing.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1acf70>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Finished processing /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/tracing.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1acf70>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Finished processing /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/tracing.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[RETURN] lib/pydoc_generator[251] ( log_utils.log_message( ) -> NoneType: None
[CALL] lib/pydoc_generator ( docs_path = create_structure( )
[CALL] lib/pydoc_generator (create_pydocs)[302] -> lib/pydoc_generator (create_structure)[64]
{"base_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc","package_name":"packages/appflow_tracer"}
[RETURN] lib/pydoc_generator[90] ( return doc_dir ) -> PosixPath:
Error in trace_all return handling: Object of type PosixPath is not JSON serializable
[CALL] lib/pydoc_generator ( generate_pydoc( )
[CALL] lib/pydoc_generator (create_pydocs)[307] -> lib/pydoc_generator (generate_pydoc)[92]
{"project_path":"/Users/emvaldes/.repos/devops/workflows","file_path":"/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/tracing--legacy.py","docs_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/appflow_tracer","configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[129] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/tracing--legacy.py...","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/tracing--legacy.py...","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/tracing--legacy.py...
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/tracing--legacy.py...
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Original Relative Path: {relative_file_path}") )
[CALL] lib/pydoc_generator (generate_pydoc)[145] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Original Relative Path: packages/appflow_tracer/tracing--legacy.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Original Relative Path: packages/appflow_tracer/tracing--legacy.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Sanitized Module Path: {module_name}") )
[CALL] lib/pydoc_generator (generate_pydoc)[146] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Sanitized Module Path: packages.appflow_tracer.tracing--legacy
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Sanitized Module Path: packages.appflow_tracer.tracing--legacy
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[148] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Relative File Path: packages/appflow_tracer/tracing--legacy.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Relative File Path: packages/appflow_tracer/tracing--legacy.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a18fe50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Relative File Path: packages/appflow_tracer/tracing--legacy.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a18fe50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Relative File Path: packages/appflow_tracer/tracing--legacy.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a18fe50>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a18fe50>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a18fe50>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a18fe50>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[171] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Running PyDoc Command: python -m pydoc packages.appflow_tracer.tracing--legacy","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Running PyDoc Command: python -m pydoc packages.appflow_tracer.tracing--legacy","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a18fe50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Running PyDoc Command: python -m pydoc packages.appflow_tracer.tracing--legacy
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a18fe50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Running PyDoc Command: python -m pydoc packages.appflow_tracer.tracing--legacy
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[191]
{"match":"<re.Match object; span=(18267, 18306), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[191] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[191]
{"match":"<re.Match object; span=(19573, 19612), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[191] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[191]
{"match":"<re.Match object; span=(19651, 19690), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[191] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[191]
{"match":"<re.Match object; span=(19703, 19742), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[191] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[200] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/appflow_tracer/tracing--legacy.pydoc","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/appflow_tracer/tracing--legacy.pydoc","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/appflow_tracer/tracing--legacy.pydoc
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/appflow_tracer/tracing--legacy.pydoc
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[251] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/tracing--legacy.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/tracing--legacy.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Finished processing /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/tracing--legacy.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Finished processing /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/tracing--legacy.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[RETURN] lib/pydoc_generator[251] ( log_utils.log_message( ) -> NoneType: None
[CALL] lib/pydoc_generator ( docs_path = create_structure( )
[CALL] lib/pydoc_generator (create_pydocs)[302] -> lib/pydoc_generator (create_structure)[64]
{"base_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc","package_name":"packages/appflow_tracer"}
[RETURN] lib/pydoc_generator[90] ( return doc_dir ) -> PosixPath:
Error in trace_all return handling: Object of type PosixPath is not JSON serializable
[CALL] lib/pydoc_generator ( generate_pydoc( )
[CALL] lib/pydoc_generator (create_pydocs)[307] -> lib/pydoc_generator (generate_pydoc)[92]
{"project_path":"/Users/emvaldes/.repos/devops/workflows","file_path":"/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/__init__.py","docs_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/appflow_tracer","configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[129] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/__init__.py...","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/__init__.py...","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/__init__.py...
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/__init__.py...
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Original Relative Path: {relative_file_path}") )
[CALL] lib/pydoc_generator (generate_pydoc)[145] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Original Relative Path: packages/appflow_tracer/__init__.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Original Relative Path: packages/appflow_tracer/__init__.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Sanitized Module Path: {module_name}") )
[CALL] lib/pydoc_generator (generate_pydoc)[146] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Sanitized Module Path: packages.appflow_tracer.__init__
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Sanitized Module Path: packages.appflow_tracer.__init__
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[148] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Relative File Path: packages/appflow_tracer/__init__.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Relative File Path: packages/appflow_tracer/__init__.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a067d90>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Relative File Path: packages/appflow_tracer/__init__.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a067d90>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Relative File Path: packages/appflow_tracer/__init__.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a067d90>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a067d90>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a067d90>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a067d90>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[171] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Running PyDoc Command: python -m pydoc packages.appflow_tracer.__init__","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Running PyDoc Command: python -m pydoc packages.appflow_tracer.__init__","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a067d90>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Running PyDoc Command: python -m pydoc packages.appflow_tracer.__init__
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a067d90>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Running PyDoc Command: python -m pydoc packages.appflow_tracer.__init__
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[191]
{"match":"<re.Match object; span=(3901, 3940), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[191] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[200] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/appflow_tracer/__init__.pydoc","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/appflow_tracer/__init__.pydoc","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/appflow_tracer/__init__.pydoc
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/appflow_tracer/__init__.pydoc
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[251] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/__init__.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/__init__.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Finished processing /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/__init__.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Finished processing /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/__init__.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[RETURN] lib/pydoc_generator[251] ( log_utils.log_message( ) -> NoneType: None
[CALL] lib/pydoc_generator ( docs_path = create_structure( )
[CALL] lib/pydoc_generator (create_pydocs)[302] -> lib/pydoc_generator (create_structure)[64]
{"base_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc","package_name":"packages/appflow_tracer"}
[RETURN] lib/pydoc_generator[90] ( return doc_dir ) -> PosixPath:
Error in trace_all return handling: Object of type PosixPath is not JSON serializable
[CALL] lib/pydoc_generator ( generate_pydoc( )
[CALL] lib/pydoc_generator (create_pydocs)[307] -> lib/pydoc_generator (generate_pydoc)[92]
{"project_path":"/Users/emvaldes/.repos/devops/workflows","file_path":"/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/__main__.py","docs_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/appflow_tracer","configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[129] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/__main__.py...","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/__main__.py...","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/__main__.py...
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/__main__.py...
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Original Relative Path: {relative_file_path}") )
[CALL] lib/pydoc_generator (generate_pydoc)[145] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Original Relative Path: packages/appflow_tracer/__main__.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Original Relative Path: packages/appflow_tracer/__main__.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Sanitized Module Path: {module_name}") )
[CALL] lib/pydoc_generator (generate_pydoc)[146] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Sanitized Module Path: packages.appflow_tracer.__main__
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Sanitized Module Path: packages.appflow_tracer.__main__
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[148] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Relative File Path: packages/appflow_tracer/__main__.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Relative File Path: packages/appflow_tracer/__main__.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a18fe50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Relative File Path: packages/appflow_tracer/__main__.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a18fe50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Relative File Path: packages/appflow_tracer/__main__.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a18fe50>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a18fe50>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a18fe50>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a18fe50>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[171] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Running PyDoc Command: python -m pydoc packages.appflow_tracer.__main__","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Running PyDoc Command: python -m pydoc packages.appflow_tracer.__main__","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a18fe50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Running PyDoc Command: python -m pydoc packages.appflow_tracer.__main__
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a18fe50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Running PyDoc Command: python -m pydoc packages.appflow_tracer.__main__
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[191]
{"match":"<re.Match object; span=(1119, 1158), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[191] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[200] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/appflow_tracer/__main__.pydoc","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/appflow_tracer/__main__.pydoc","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/appflow_tracer/__main__.pydoc
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/appflow_tracer/__main__.pydoc
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[251] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/__main__.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/__main__.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Finished processing /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/__main__.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Finished processing /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/__main__.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[RETURN] lib/pydoc_generator[251] ( log_utils.log_message( ) -> NoneType: None
[CALL] lib/pydoc_generator ( docs_path = create_structure( )
[CALL] lib/pydoc_generator (create_pydocs)[302] -> lib/pydoc_generator (create_structure)[64]
{"base_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc","package_name":"packages/requirements"}
[RETURN] lib/pydoc_generator[90] ( return doc_dir ) -> PosixPath:
Error in trace_all return handling: Object of type PosixPath is not JSON serializable
[CALL] lib/pydoc_generator ( generate_pydoc( )
[CALL] lib/pydoc_generator (create_pydocs)[307] -> lib/pydoc_generator (generate_pydoc)[92]
{"project_path":"/Users/emvaldes/.repos/devops/workflows","file_path":"/Users/emvaldes/.repos/devops/workflows/packages/requirements/__init__.py","docs_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/requirements","configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[129] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/requirements/__init__.py...","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/requirements/__init__.py...","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a067d90>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/requirements/__init__.py...
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a067d90>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/requirements/__init__.py...
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Original Relative Path: {relative_file_path}") )
[CALL] lib/pydoc_generator (generate_pydoc)[145] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Original Relative Path: packages/requirements/__init__.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Original Relative Path: packages/requirements/__init__.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Sanitized Module Path: {module_name}") )
[CALL] lib/pydoc_generator (generate_pydoc)[146] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a067d90>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Sanitized Module Path: packages.requirements.__init__
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a067d90>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Sanitized Module Path: packages.requirements.__init__
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[148] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Relative File Path: packages/requirements/__init__.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Relative File Path: packages/requirements/__init__.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Relative File Path: packages/requirements/__init__.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Relative File Path: packages/requirements/__init__.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[171] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Running PyDoc Command: python -m pydoc packages.requirements.__init__","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Running PyDoc Command: python -m pydoc packages.requirements.__init__","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Running PyDoc Command: python -m pydoc packages.requirements.__init__
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Running PyDoc Command: python -m pydoc packages.requirements.__init__
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[191]
{"match":"<re.Match object; span=(1782, 1821), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[191] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[200] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/requirements/__init__.pydoc","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/requirements/__init__.pydoc","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1acf70>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/requirements/__init__.pydoc
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1acf70>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/requirements/__init__.pydoc
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[251] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/packages/requirements/__init__.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/packages/requirements/__init__.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1acf70>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Finished processing /Users/emvaldes/.repos/devops/workflows/packages/requirements/__init__.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1acf70>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Finished processing /Users/emvaldes/.repos/devops/workflows/packages/requirements/__init__.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[RETURN] lib/pydoc_generator[251] ( log_utils.log_message( ) -> NoneType: None
[CALL] lib/pydoc_generator ( docs_path = create_structure( )
[CALL] lib/pydoc_generator (create_pydocs)[302] -> lib/pydoc_generator (create_structure)[64]
{"base_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc","package_name":"packages/requirements"}
[RETURN] lib/pydoc_generator[90] ( return doc_dir ) -> PosixPath:
Error in trace_all return handling: Object of type PosixPath is not JSON serializable
[CALL] lib/pydoc_generator ( generate_pydoc( )
[CALL] lib/pydoc_generator (create_pydocs)[307] -> lib/pydoc_generator (generate_pydoc)[92]
{"project_path":"/Users/emvaldes/.repos/devops/workflows","file_path":"/Users/emvaldes/.repos/devops/workflows/packages/requirements/__main__.py","docs_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/requirements","configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[129] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/requirements/__main__.py...","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/requirements/__main__.py...","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/requirements/__main__.py...
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/requirements/__main__.py...
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Original Relative Path: {relative_file_path}") )
[CALL] lib/pydoc_generator (generate_pydoc)[145] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a067d90>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Original Relative Path: packages/requirements/__main__.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a067d90>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Original Relative Path: packages/requirements/__main__.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Sanitized Module Path: {module_name}") )
[CALL] lib/pydoc_generator (generate_pydoc)[146] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Sanitized Module Path: packages.requirements.__main__
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Sanitized Module Path: packages.requirements.__main__
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[148] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Relative File Path: packages/requirements/__main__.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Relative File Path: packages/requirements/__main__.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a18fe50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Relative File Path: packages/requirements/__main__.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a18fe50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Relative File Path: packages/requirements/__main__.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a18fe50>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a18fe50>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a18fe50>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a18fe50>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[171] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Running PyDoc Command: python -m pydoc packages.requirements.__main__","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Running PyDoc Command: python -m pydoc packages.requirements.__main__","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a18fe50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Running PyDoc Command: python -m pydoc packages.requirements.__main__
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a18fe50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Running PyDoc Command: python -m pydoc packages.requirements.__main__
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[191]
{"match":"<re.Match object; span=(1117, 1156), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[191] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[200] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/requirements/__main__.pydoc","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/requirements/__main__.pydoc","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a18fe50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/requirements/__main__.pydoc
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a18fe50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/requirements/__main__.pydoc
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[251] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/packages/requirements/__main__.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/packages/requirements/__main__.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Finished processing /Users/emvaldes/.repos/devops/workflows/packages/requirements/__main__.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Finished processing /Users/emvaldes/.repos/devops/workflows/packages/requirements/__main__.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[RETURN] lib/pydoc_generator[251] ( log_utils.log_message( ) -> NoneType: None
[CALL] lib/pydoc_generator ( docs_path = create_structure( )
[CALL] lib/pydoc_generator (create_pydocs)[302] -> lib/pydoc_generator (create_structure)[64]
{"base_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc","package_name":"packages/requirements"}
[RETURN] lib/pydoc_generator[90] ( return doc_dir ) -> PosixPath:
Error in trace_all return handling: Object of type PosixPath is not JSON serializable
[CALL] lib/pydoc_generator ( generate_pydoc( )
[CALL] lib/pydoc_generator (create_pydocs)[307] -> lib/pydoc_generator (generate_pydoc)[92]
{"project_path":"/Users/emvaldes/.repos/devops/workflows","file_path":"/Users/emvaldes/.repos/devops/workflows/packages/requirements/dependencies.py","docs_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/requirements","configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[129] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/requirements/dependencies.py...","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/requirements/dependencies.py...","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/requirements/dependencies.py...
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/requirements/dependencies.py...
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Original Relative Path: {relative_file_path}") )
[CALL] lib/pydoc_generator (generate_pydoc)[145] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Original Relative Path: packages/requirements/dependencies.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Original Relative Path: packages/requirements/dependencies.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Sanitized Module Path: {module_name}") )
[CALL] lib/pydoc_generator (generate_pydoc)[146] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Sanitized Module Path: packages.requirements.dependencies
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Sanitized Module Path: packages.requirements.dependencies
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[148] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Relative File Path: packages/requirements/dependencies.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Relative File Path: packages/requirements/dependencies.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a067d90>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Relative File Path: packages/requirements/dependencies.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a067d90>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Relative File Path: packages/requirements/dependencies.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[171] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Running PyDoc Command: python -m pydoc packages.requirements.dependencies","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Running PyDoc Command: python -m pydoc packages.requirements.dependencies","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Running PyDoc Command: python -m pydoc packages.requirements.dependencies
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Running PyDoc Command: python -m pydoc packages.requirements.dependencies
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[191]
{"match":"<re.Match object; span=(9852, 9891), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[191] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[191]
{"match":"<re.Match object; span=(11096, 11135), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[191] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[200] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/requirements/dependencies.pydoc","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/requirements/dependencies.pydoc","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a067d90>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/requirements/dependencies.pydoc
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a067d90>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/requirements/dependencies.pydoc
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[251] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/packages/requirements/dependencies.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/packages/requirements/dependencies.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a067d90>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Finished processing /Users/emvaldes/.repos/devops/workflows/packages/requirements/dependencies.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a067d90>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Finished processing /Users/emvaldes/.repos/devops/workflows/packages/requirements/dependencies.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[RETURN] lib/pydoc_generator[251] ( log_utils.log_message( ) -> NoneType: None
[CALL] lib/pydoc_generator ( docs_path = create_structure( )
[CALL] lib/pydoc_generator (create_pydocs)[302] -> lib/pydoc_generator (create_structure)[64]
{"base_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc","package_name":"packages/appflow_tracer/lib"}
[RETURN] lib/pydoc_generator[90] ( return doc_dir ) -> PosixPath:
Error in trace_all return handling: Object of type PosixPath is not JSON serializable
[CALL] lib/pydoc_generator ( generate_pydoc( )
[CALL] lib/pydoc_generator (create_pydocs)[307] -> lib/pydoc_generator (generate_pydoc)[92]
{"project_path":"/Users/emvaldes/.repos/devops/workflows","file_path":"/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/serialize_utils.py","docs_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/appflow_tracer/lib","configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[129] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/serialize_utils.py...","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/serialize_utils.py...","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/serialize_utils.py...
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/serialize_utils.py...
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Original Relative Path: {relative_file_path}") )
[CALL] lib/pydoc_generator (generate_pydoc)[145] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Original Relative Path: packages/appflow_tracer/lib/serialize_utils.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Original Relative Path: packages/appflow_tracer/lib/serialize_utils.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Sanitized Module Path: {module_name}") )
[CALL] lib/pydoc_generator (generate_pydoc)[146] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Sanitized Module Path: packages.appflow_tracer.lib.serialize_utils
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Sanitized Module Path: packages.appflow_tracer.lib.serialize_utils
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[148] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Relative File Path: packages/appflow_tracer/lib/serialize_utils.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Relative File Path: packages/appflow_tracer/lib/serialize_utils.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a18fe50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Relative File Path: packages/appflow_tracer/lib/serialize_utils.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a18fe50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Relative File Path: packages/appflow_tracer/lib/serialize_utils.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[171] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Running PyDoc Command: python -m pydoc packages.appflow_tracer.lib.serialize_utils","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Running PyDoc Command: python -m pydoc packages.appflow_tracer.lib.serialize_utils","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a18fe50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Running PyDoc Command: python -m pydoc packages.appflow_tracer.lib.serialize_utils
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a18fe50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Running PyDoc Command: python -m pydoc packages.appflow_tracer.lib.serialize_utils
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[191]
{"match":"<re.Match object; span=(4947, 4986), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[191] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[200] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/appflow_tracer/lib/serialize_utils.pydoc","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/appflow_tracer/lib/serialize_utils.pydoc","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/appflow_tracer/lib/serialize_utils.pydoc
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/appflow_tracer/lib/serialize_utils.pydoc
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[251] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/serialize_utils.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/serialize_utils.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Finished processing /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/serialize_utils.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Finished processing /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/serialize_utils.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[RETURN] lib/pydoc_generator[251] ( log_utils.log_message( ) -> NoneType: None
[CALL] lib/pydoc_generator ( docs_path = create_structure( )
[CALL] lib/pydoc_generator (create_pydocs)[302] -> lib/pydoc_generator (create_structure)[64]
{"base_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc","package_name":"packages/appflow_tracer/lib"}
[RETURN] lib/pydoc_generator[90] ( return doc_dir ) -> PosixPath:
Error in trace_all return handling: Object of type PosixPath is not JSON serializable
[CALL] lib/pydoc_generator ( generate_pydoc( )
[CALL] lib/pydoc_generator (create_pydocs)[307] -> lib/pydoc_generator (generate_pydoc)[92]
{"project_path":"/Users/emvaldes/.repos/devops/workflows","file_path":"/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/log_utils.py","docs_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/appflow_tracer/lib","configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[129] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/log_utils.py...","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/log_utils.py...","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a5ac6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/log_utils.py...
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a5ac6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/log_utils.py...
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Original Relative Path: {relative_file_path}") )
[CALL] lib/pydoc_generator (generate_pydoc)[145] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Original Relative Path: packages/appflow_tracer/lib/log_utils.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Original Relative Path: packages/appflow_tracer/lib/log_utils.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Sanitized Module Path: {module_name}") )
[CALL] lib/pydoc_generator (generate_pydoc)[146] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Sanitized Module Path: packages.appflow_tracer.lib.log_utils
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Sanitized Module Path: packages.appflow_tracer.lib.log_utils
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[148] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Relative File Path: packages/appflow_tracer/lib/log_utils.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Relative File Path: packages/appflow_tracer/lib/log_utils.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Relative File Path: packages/appflow_tracer/lib/log_utils.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Relative File Path: packages/appflow_tracer/lib/log_utils.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a5ac6d0>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a5ac6d0>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a5ac6d0>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a5ac6d0>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a5ac6d0>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[171] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Running PyDoc Command: python -m pydoc packages.appflow_tracer.lib.log_utils","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Running PyDoc Command: python -m pydoc packages.appflow_tracer.lib.log_utils","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Running PyDoc Command: python -m pydoc packages.appflow_tracer.lib.log_utils
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Running PyDoc Command: python -m pydoc packages.appflow_tracer.lib.log_utils
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[191]
{"match":"<re.Match object; span=(6852, 6891), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[191] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[200] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/appflow_tracer/lib/log_utils.pydoc","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/appflow_tracer/lib/log_utils.pydoc","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/appflow_tracer/lib/log_utils.pydoc
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/appflow_tracer/lib/log_utils.pydoc
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[251] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/log_utils.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/log_utils.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Finished processing /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/log_utils.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Finished processing /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/log_utils.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[RETURN] lib/pydoc_generator[251] ( log_utils.log_message( ) -> NoneType: None
[CALL] lib/pydoc_generator ( docs_path = create_structure( )
[CALL] lib/pydoc_generator (create_pydocs)[302] -> lib/pydoc_generator (create_structure)[64]
{"base_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc","package_name":"packages/appflow_tracer/lib"}
[RETURN] lib/pydoc_generator[90] ( return doc_dir ) -> PosixPath:
Error in trace_all return handling: Object of type PosixPath is not JSON serializable
[CALL] lib/pydoc_generator ( generate_pydoc( )
[CALL] lib/pydoc_generator (create_pydocs)[307] -> lib/pydoc_generator (generate_pydoc)[92]
{"project_path":"/Users/emvaldes/.repos/devops/workflows","file_path":"/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/trace_utils.py","docs_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/appflow_tracer/lib","configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[129] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/trace_utils.py...","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/trace_utils.py...","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a5ac6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/trace_utils.py...
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a5ac6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/trace_utils.py...
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Original Relative Path: {relative_file_path}") )
[CALL] lib/pydoc_generator (generate_pydoc)[145] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Original Relative Path: packages/appflow_tracer/lib/trace_utils.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Original Relative Path: packages/appflow_tracer/lib/trace_utils.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Sanitized Module Path: {module_name}") )
[CALL] lib/pydoc_generator (generate_pydoc)[146] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Sanitized Module Path: packages.appflow_tracer.lib.trace_utils
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Sanitized Module Path: packages.appflow_tracer.lib.trace_utils
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[148] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Relative File Path: packages/appflow_tracer/lib/trace_utils.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Relative File Path: packages/appflow_tracer/lib/trace_utils.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Relative File Path: packages/appflow_tracer/lib/trace_utils.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Relative File Path: packages/appflow_tracer/lib/trace_utils.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[171] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Running PyDoc Command: python -m pydoc packages.appflow_tracer.lib.trace_utils","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Running PyDoc Command: python -m pydoc packages.appflow_tracer.lib.trace_utils","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a18fe50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Running PyDoc Command: python -m pydoc packages.appflow_tracer.lib.trace_utils
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a18fe50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Running PyDoc Command: python -m pydoc packages.appflow_tracer.lib.trace_utils
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[191]
{"match":"<re.Match object; span=(7023, 7062), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[191] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[200] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/appflow_tracer/lib/trace_utils.pydoc","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/appflow_tracer/lib/trace_utils.pydoc","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a5ac6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/appflow_tracer/lib/trace_utils.pydoc
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a5ac6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/appflow_tracer/lib/trace_utils.pydoc
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[251] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/trace_utils.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/trace_utils.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a7012d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Finished processing /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/trace_utils.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a7012d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Finished processing /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/trace_utils.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[RETURN] lib/pydoc_generator[251] ( log_utils.log_message( ) -> NoneType: None
[CALL] lib/pydoc_generator ( docs_path = create_structure( )
[CALL] lib/pydoc_generator (create_pydocs)[302] -> lib/pydoc_generator (create_structure)[64]
{"base_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc","package_name":"packages/appflow_tracer/lib"}
[RETURN] lib/pydoc_generator[90] ( return doc_dir ) -> PosixPath:
Error in trace_all return handling: Object of type PosixPath is not JSON serializable
[CALL] lib/pydoc_generator ( generate_pydoc( )
[CALL] lib/pydoc_generator (create_pydocs)[307] -> lib/pydoc_generator (generate_pydoc)[92]
{"project_path":"/Users/emvaldes/.repos/devops/workflows","file_path":"/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/__init__.py","docs_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/appflow_tracer/lib","configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[129] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/__init__.py...","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/__init__.py...","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a7012d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/__init__.py...
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a7012d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/__init__.py...
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Original Relative Path: {relative_file_path}") )
[CALL] lib/pydoc_generator (generate_pydoc)[145] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Original Relative Path: packages/appflow_tracer/lib/__init__.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Original Relative Path: packages/appflow_tracer/lib/__init__.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Sanitized Module Path: {module_name}") )
[CALL] lib/pydoc_generator (generate_pydoc)[146] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a18fe50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Sanitized Module Path: packages.appflow_tracer.lib.__init__
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a18fe50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Sanitized Module Path: packages.appflow_tracer.lib.__init__
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[148] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Relative File Path: packages/appflow_tracer/lib/__init__.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Relative File Path: packages/appflow_tracer/lib/__init__.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Relative File Path: packages/appflow_tracer/lib/__init__.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Relative File Path: packages/appflow_tracer/lib/__init__.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a18fe50>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a18fe50>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a18fe50>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a18fe50>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a18fe50>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[171] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Running PyDoc Command: python -m pydoc packages.appflow_tracer.lib.__init__","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Running PyDoc Command: python -m pydoc packages.appflow_tracer.lib.__init__","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a067d90>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Running PyDoc Command: python -m pydoc packages.appflow_tracer.lib.__init__
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a067d90>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Running PyDoc Command: python -m pydoc packages.appflow_tracer.lib.__init__
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[191]
{"match":"<re.Match object; span=(1717, 1756), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[191] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[200] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/appflow_tracer/lib/__init__.pydoc","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/appflow_tracer/lib/__init__.pydoc","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a7012d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/appflow_tracer/lib/__init__.pydoc
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a7012d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/appflow_tracer/lib/__init__.pydoc
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[251] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/__init__.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/__init__.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Finished processing /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/__init__.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Finished processing /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/__init__.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[RETURN] lib/pydoc_generator[251] ( log_utils.log_message( ) -> NoneType: None
[CALL] lib/pydoc_generator ( docs_path = create_structure( )
[CALL] lib/pydoc_generator (create_pydocs)[302] -> lib/pydoc_generator (create_structure)[64]
{"base_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc","package_name":"packages/appflow_tracer/lib"}
[RETURN] lib/pydoc_generator[90] ( return doc_dir ) -> PosixPath:
Error in trace_all return handling: Object of type PosixPath is not JSON serializable
[CALL] lib/pydoc_generator ( generate_pydoc( )
[CALL] lib/pydoc_generator (create_pydocs)[307] -> lib/pydoc_generator (generate_pydoc)[92]
{"project_path":"/Users/emvaldes/.repos/devops/workflows","file_path":"/Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/file_utils.py","docs_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/appflow_tracer/lib","configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[129] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/file_utils.py...","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/file_utils.py...","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/file_utils.py...
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Generating documentation for /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/file_utils.py...
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Original Relative Path: {relative_file_path}") )
[CALL] lib/pydoc_generator (generate_pydoc)[145] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a18fe50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Original Relative Path: packages/appflow_tracer/lib/file_utils.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a18fe50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Original Relative Path: packages/appflow_tracer/lib/file_utils.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Sanitized Module Path: {module_name}") )
[CALL] lib/pydoc_generator (generate_pydoc)[146] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a067d90>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Sanitized Module Path: packages.appflow_tracer.lib.file_utils
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a067d90>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Sanitized Module Path: packages.appflow_tracer.lib.file_utils
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[148] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Relative File Path: packages/appflow_tracer/lib/file_utils.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Relative File Path: packages/appflow_tracer/lib/file_utils.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a18fe50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Relative File Path: packages/appflow_tracer/lib/file_utils.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a18fe50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Relative File Path: packages/appflow_tracer/lib/file_utils.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a067d90>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a067d90>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a067d90>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a067d90>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a067d90>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[171] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Running PyDoc Command: python -m pydoc packages.appflow_tracer.lib.file_utils","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Running PyDoc Command: python -m pydoc packages.appflow_tracer.lib.file_utils","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Running PyDoc Command: python -m pydoc packages.appflow_tracer.lib.file_utils
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Running PyDoc Command: python -m pydoc packages.appflow_tracer.lib.file_utils
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[191]
{"match":"<re.Match object; span=(5730, 5769), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[191] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[191]
{"match":"<re.Match object; span=(5808, 5847), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[191] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[191]
{"match":"<re.Match object; span=(5879, 5918), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[191] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[200] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/appflow_tracer/lib/file_utils.pydoc","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/appflow_tracer/lib/file_utils.pydoc","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a5ac6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/appflow_tracer/lib/file_utils.pydoc
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a5ac6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/packages/appflow_tracer/lib/file_utils.pydoc
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[251] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/file_utils.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/file_utils.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a18fe50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Finished processing /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/file_utils.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a18fe50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Finished processing /Users/emvaldes/.repos/devops/workflows/packages/appflow_tracer/lib/file_utils.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[RETURN] lib/pydoc_generator[251] ( log_utils.log_message( ) -> NoneType: None
[CALL] lib/pydoc_generator ( docs_path = create_structure( )
[CALL] lib/pydoc_generator (create_pydocs)[302] -> lib/pydoc_generator (create_structure)[64]
{"base_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc","package_name":"tests/requirements/dependencies"}
[RETURN] lib/pydoc_generator[90] ( return doc_dir ) -> PosixPath:
Error in trace_all return handling: Object of type PosixPath is not JSON serializable
[CALL] lib/pydoc_generator ( generate_pydoc( )
[CALL] lib/pydoc_generator (create_pydocs)[307] -> lib/pydoc_generator (generate_pydoc)[92]
{"project_path":"/Users/emvaldes/.repos/devops/workflows","file_path":"/Users/emvaldes/.repos/devops/workflows/tests/requirements/dependencies/test_dependencies.py","docs_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc/tests/requirements/dependencies","configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[129] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/tests/requirements/dependencies/test_dependencies.py...","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/tests/requirements/dependencies/test_dependencies.py...","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Generating documentation for /Users/emvaldes/.repos/devops/workflows/tests/requirements/dependencies/test_dependencies.py...
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Generating documentation for /Users/emvaldes/.repos/devops/workflows/tests/requirements/dependencies/test_dependencies.py...
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Original Relative Path: {relative_file_path}") )
[CALL] lib/pydoc_generator (generate_pydoc)[145] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Original Relative Path: tests/requirements/dependencies/test_dependencies.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Original Relative Path: tests/requirements/dependencies/test_dependencies.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Sanitized Module Path: {module_name}") )
[CALL] lib/pydoc_generator (generate_pydoc)[146] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a5ac6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Sanitized Module Path: tests.requirements.dependencies.test_dependencies
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a5ac6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Sanitized Module Path: tests.requirements.dependencies.test_dependencies
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[148] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Relative File Path: tests/requirements/dependencies/test_dependencies.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Relative File Path: tests/requirements/dependencies/test_dependencies.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a067d90>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Relative File Path: tests/requirements/dependencies/test_dependencies.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a067d90>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Relative File Path: tests/requirements/dependencies/test_dependencies.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[171] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Running PyDoc Command: python -m pydoc tests.requirements.dependencies.test_dependencies","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Running PyDoc Command: python -m pydoc tests.requirements.dependencies.test_dependencies","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Running PyDoc Command: python -m pydoc tests.requirements.dependencies.test_dependencies
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Running PyDoc Command: python -m pydoc tests.requirements.dependencies.test_dependencies
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[191]
{"match":"<re.Match object; span=(8847, 8886), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[191] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[191]
{"match":"<re.Match object; span=(8918, 8957), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[191] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[200] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/tests/requirements/dependencies/test_dependencies.pydoc","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/tests/requirements/dependencies/test_dependencies.pydoc","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/tests/requirements/dependencies/test_dependencies.pydoc
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/tests/requirements/dependencies/test_dependencies.pydoc
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[251] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/tests/requirements/dependencies/test_dependencies.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/tests/requirements/dependencies/test_dependencies.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a18fe50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Finished processing /Users/emvaldes/.repos/devops/workflows/tests/requirements/dependencies/test_dependencies.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a18fe50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Finished processing /Users/emvaldes/.repos/devops/workflows/tests/requirements/dependencies/test_dependencies.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[RETURN] lib/pydoc_generator[251] ( log_utils.log_message( ) -> NoneType: None
[CALL] lib/pydoc_generator ( docs_path = create_structure( )
[CALL] lib/pydoc_generator (create_pydocs)[302] -> lib/pydoc_generator (create_structure)[64]
{"base_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc","package_name":"tests/appflow_tracer/tracing"}
[RETURN] lib/pydoc_generator[90] ( return doc_dir ) -> PosixPath:
Error in trace_all return handling: Object of type PosixPath is not JSON serializable
[CALL] lib/pydoc_generator ( generate_pydoc( )
[CALL] lib/pydoc_generator (create_pydocs)[307] -> lib/pydoc_generator (generate_pydoc)[92]
{"project_path":"/Users/emvaldes/.repos/devops/workflows","file_path":"/Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/test_tracing.py","docs_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc/tests/appflow_tracer/tracing","configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[129] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/test_tracing.py...","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/test_tracing.py...","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Generating documentation for /Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/test_tracing.py...
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Generating documentation for /Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/test_tracing.py...
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Original Relative Path: {relative_file_path}") )
[CALL] lib/pydoc_generator (generate_pydoc)[145] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Original Relative Path: tests/appflow_tracer/tracing/test_tracing.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Original Relative Path: tests/appflow_tracer/tracing/test_tracing.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Sanitized Module Path: {module_name}") )
[CALL] lib/pydoc_generator (generate_pydoc)[146] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a18fe50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Sanitized Module Path: tests.appflow_tracer.tracing.test_tracing
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a18fe50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Sanitized Module Path: tests.appflow_tracer.tracing.test_tracing
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[148] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Relative File Path: tests/appflow_tracer/tracing/test_tracing.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Relative File Path: tests/appflow_tracer/tracing/test_tracing.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a5ac6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Relative File Path: tests/appflow_tracer/tracing/test_tracing.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a5ac6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Relative File Path: tests/appflow_tracer/tracing/test_tracing.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[171] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Running PyDoc Command: python -m pydoc tests.appflow_tracer.tracing.test_tracing","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Running PyDoc Command: python -m pydoc tests.appflow_tracer.tracing.test_tracing","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Running PyDoc Command: python -m pydoc tests.appflow_tracer.tracing.test_tracing
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Running PyDoc Command: python -m pydoc tests.appflow_tracer.tracing.test_tracing
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[191]
{"match":"<re.Match object; span=(4915, 4954), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[191] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[191]
{"match":"<re.Match object; span=(4986, 5025), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[191] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[200] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/tests/appflow_tracer/tracing/test_tracing.pydoc","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/tests/appflow_tracer/tracing/test_tracing.pydoc","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/tests/appflow_tracer/tracing/test_tracing.pydoc
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/tests/appflow_tracer/tracing/test_tracing.pydoc
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[251] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/test_tracing.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/test_tracing.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a7012d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Finished processing /Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/test_tracing.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a7012d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Finished processing /Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/test_tracing.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[RETURN] lib/pydoc_generator[251] ( log_utils.log_message( ) -> NoneType: None
[CALL] lib/pydoc_generator ( docs_path = create_structure( )
[CALL] lib/pydoc_generator (create_pydocs)[302] -> lib/pydoc_generator (create_structure)[64]
{"base_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc","package_name":"tests/appflow_tracer/tracing/log_utils"}
[RETURN] lib/pydoc_generator[90] ( return doc_dir ) -> PosixPath:
Error in trace_all return handling: Object of type PosixPath is not JSON serializable
[CALL] lib/pydoc_generator ( generate_pydoc( )
[CALL] lib/pydoc_generator (create_pydocs)[307] -> lib/pydoc_generator (generate_pydoc)[92]
{"project_path":"/Users/emvaldes/.repos/devops/workflows","file_path":"/Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/log_utils/test_log_utils.py","docs_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc/tests/appflow_tracer/tracing/log_utils","configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[129] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/log_utils/test_log_utils.py...","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/log_utils/test_log_utils.py...","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Generating documentation for /Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/log_utils/test_log_utils.py...
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Generating documentation for /Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/log_utils/test_log_utils.py...
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Original Relative Path: {relative_file_path}") )
[CALL] lib/pydoc_generator (generate_pydoc)[145] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Original Relative Path: tests/appflow_tracer/tracing/log_utils/test_log_utils.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Original Relative Path: tests/appflow_tracer/tracing/log_utils/test_log_utils.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Sanitized Module Path: {module_name}") )
[CALL] lib/pydoc_generator (generate_pydoc)[146] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Sanitized Module Path: tests.appflow_tracer.tracing.log_utils.test_log_utils
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Sanitized Module Path: tests.appflow_tracer.tracing.log_utils.test_log_utils
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[148] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Relative File Path: tests/appflow_tracer/tracing/log_utils/test_log_utils.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Relative File Path: tests/appflow_tracer/tracing/log_utils/test_log_utils.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Relative File Path: tests/appflow_tracer/tracing/log_utils/test_log_utils.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Relative File Path: tests/appflow_tracer/tracing/log_utils/test_log_utils.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[171] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Running PyDoc Command: python -m pydoc tests.appflow_tracer.tracing.log_utils.test_log_utils","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Running PyDoc Command: python -m pydoc tests.appflow_tracer.tracing.log_utils.test_log_utils","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a5ac6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Running PyDoc Command: python -m pydoc tests.appflow_tracer.tracing.log_utils.test_log_utils
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a5ac6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Running PyDoc Command: python -m pydoc tests.appflow_tracer.tracing.log_utils.test_log_utils
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[191]
{"match":"<re.Match object; span=(5734, 5773), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[191] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[191]
{"match":"<re.Match object; span=(5805, 5844), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[191] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[200] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/tests/appflow_tracer/tracing/log_utils/test_log_utils.pydoc","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/tests/appflow_tracer/tracing/log_utils/test_log_utils.pydoc","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1acf70>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/tests/appflow_tracer/tracing/log_utils/test_log_utils.pydoc
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1acf70>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/tests/appflow_tracer/tracing/log_utils/test_log_utils.pydoc
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[251] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/log_utils/test_log_utils.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/log_utils/test_log_utils.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1acf70>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Finished processing /Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/log_utils/test_log_utils.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1acf70>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Finished processing /Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/log_utils/test_log_utils.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[RETURN] lib/pydoc_generator[251] ( log_utils.log_message( ) -> NoneType: None
[CALL] lib/pydoc_generator ( docs_path = create_structure( )
[CALL] lib/pydoc_generator (create_pydocs)[302] -> lib/pydoc_generator (create_structure)[64]
{"base_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc","package_name":"tests/appflow_tracer/tracing/serialize_utils"}
[RETURN] lib/pydoc_generator[90] ( return doc_dir ) -> PosixPath:
Error in trace_all return handling: Object of type PosixPath is not JSON serializable
[CALL] lib/pydoc_generator ( generate_pydoc( )
[CALL] lib/pydoc_generator (create_pydocs)[307] -> lib/pydoc_generator (generate_pydoc)[92]
{"project_path":"/Users/emvaldes/.repos/devops/workflows","file_path":"/Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/serialize_utils/test_serialize_utils.py","docs_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc/tests/appflow_tracer/tracing/serialize_utils","configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[129] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/serialize_utils/test_serialize_utils.py...","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/serialize_utils/test_serialize_utils.py...","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Generating documentation for /Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/serialize_utils/test_serialize_utils.py...
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Generating documentation for /Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/serialize_utils/test_serialize_utils.py...
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Original Relative Path: {relative_file_path}") )
[CALL] lib/pydoc_generator (generate_pydoc)[145] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a067d90>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Original Relative Path: tests/appflow_tracer/tracing/serialize_utils/test_serialize_utils.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a067d90>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Original Relative Path: tests/appflow_tracer/tracing/serialize_utils/test_serialize_utils.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Sanitized Module Path: {module_name}") )
[CALL] lib/pydoc_generator (generate_pydoc)[146] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a067d90>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Sanitized Module Path: tests.appflow_tracer.tracing.serialize_utils.test_serialize_utils
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a067d90>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Sanitized Module Path: tests.appflow_tracer.tracing.serialize_utils.test_serialize_utils
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[148] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Relative File Path: tests/appflow_tracer/tracing/serialize_utils/test_serialize_utils.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Relative File Path: tests/appflow_tracer/tracing/serialize_utils/test_serialize_utils.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Relative File Path: tests/appflow_tracer/tracing/serialize_utils/test_serialize_utils.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Relative File Path: tests/appflow_tracer/tracing/serialize_utils/test_serialize_utils.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a067d90>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a067d90>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a067d90>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a067d90>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a067d90>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a067d90>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[171] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Running PyDoc Command: python -m pydoc tests.appflow_tracer.tracing.serialize_utils.test_serialize_utils","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Running PyDoc Command: python -m pydoc tests.appflow_tracer.tracing.serialize_utils.test_serialize_utils","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a18fe50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Running PyDoc Command: python -m pydoc tests.appflow_tracer.tracing.serialize_utils.test_serialize_utils
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a18fe50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Running PyDoc Command: python -m pydoc tests.appflow_tracer.tracing.serialize_utils.test_serialize_utils
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[191]
{"match":"<re.Match object; span=(3424, 3463), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[191] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[191]
{"match":"<re.Match object; span=(3573, 3612), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[191] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[200] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/tests/appflow_tracer/tracing/serialize_utils/test_serialize_utils.pydoc","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/tests/appflow_tracer/tracing/serialize_utils/test_serialize_utils.pydoc","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/tests/appflow_tracer/tracing/serialize_utils/test_serialize_utils.pydoc
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/tests/appflow_tracer/tracing/serialize_utils/test_serialize_utils.pydoc
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[251] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/serialize_utils/test_serialize_utils.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/serialize_utils/test_serialize_utils.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Finished processing /Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/serialize_utils/test_serialize_utils.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Finished processing /Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/serialize_utils/test_serialize_utils.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[RETURN] lib/pydoc_generator[251] ( log_utils.log_message( ) -> NoneType: None
[CALL] lib/pydoc_generator ( docs_path = create_structure( )
[CALL] lib/pydoc_generator (create_pydocs)[302] -> lib/pydoc_generator (create_structure)[64]
{"base_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc","package_name":"tests/appflow_tracer/tracing/trace_utils"}
[RETURN] lib/pydoc_generator[90] ( return doc_dir ) -> PosixPath:
Error in trace_all return handling: Object of type PosixPath is not JSON serializable
[CALL] lib/pydoc_generator ( generate_pydoc( )
[CALL] lib/pydoc_generator (create_pydocs)[307] -> lib/pydoc_generator (generate_pydoc)[92]
{"project_path":"/Users/emvaldes/.repos/devops/workflows","file_path":"/Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/trace_utils/test_trace_utils.py","docs_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc/tests/appflow_tracer/tracing/trace_utils","configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[129] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/trace_utils/test_trace_utils.py...","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/trace_utils/test_trace_utils.py...","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Generating documentation for /Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/trace_utils/test_trace_utils.py...
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Generating documentation for /Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/trace_utils/test_trace_utils.py...
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Original Relative Path: {relative_file_path}") )
[CALL] lib/pydoc_generator (generate_pydoc)[145] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Original Relative Path: tests/appflow_tracer/tracing/trace_utils/test_trace_utils.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Original Relative Path: tests/appflow_tracer/tracing/trace_utils/test_trace_utils.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Sanitized Module Path: {module_name}") )
[CALL] lib/pydoc_generator (generate_pydoc)[146] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Sanitized Module Path: tests.appflow_tracer.tracing.trace_utils.test_trace_utils
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Sanitized Module Path: tests.appflow_tracer.tracing.trace_utils.test_trace_utils
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[148] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Relative File Path: tests/appflow_tracer/tracing/trace_utils/test_trace_utils.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Relative File Path: tests/appflow_tracer/tracing/trace_utils/test_trace_utils.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Relative File Path: tests/appflow_tracer/tracing/trace_utils/test_trace_utils.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Relative File Path: tests/appflow_tracer/tracing/trace_utils/test_trace_utils.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a636e00>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[171] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Running PyDoc Command: python -m pydoc tests.appflow_tracer.tracing.trace_utils.test_trace_utils","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Running PyDoc Command: python -m pydoc tests.appflow_tracer.tracing.trace_utils.test_trace_utils","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a7012d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Running PyDoc Command: python -m pydoc tests.appflow_tracer.tracing.trace_utils.test_trace_utils
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a7012d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Running PyDoc Command: python -m pydoc tests.appflow_tracer.tracing.trace_utils.test_trace_utils
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[191]
{"match":"<re.Match object; span=(8484, 8523), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[191] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[191]
{"match":"<re.Match object; span=(8633, 8672), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[191] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[200] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/tests/appflow_tracer/tracing/trace_utils/test_trace_utils.pydoc","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/tests/appflow_tracer/tracing/trace_utils/test_trace_utils.pydoc","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1acf70>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/tests/appflow_tracer/tracing/trace_utils/test_trace_utils.pydoc
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1acf70>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/tests/appflow_tracer/tracing/trace_utils/test_trace_utils.pydoc
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[251] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/trace_utils/test_trace_utils.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/trace_utils/test_trace_utils.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1acf70>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Finished processing /Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/trace_utils/test_trace_utils.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1acf70>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Finished processing /Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/trace_utils/test_trace_utils.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[RETURN] lib/pydoc_generator[251] ( log_utils.log_message( ) -> NoneType: None
[CALL] lib/pydoc_generator ( docs_path = create_structure( )
[CALL] lib/pydoc_generator (create_pydocs)[302] -> lib/pydoc_generator (create_structure)[64]
{"base_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc","package_name":"tests/appflow_tracer/tracing/file_utils"}
[RETURN] lib/pydoc_generator[90] ( return doc_dir ) -> PosixPath:
Error in trace_all return handling: Object of type PosixPath is not JSON serializable
[CALL] lib/pydoc_generator ( generate_pydoc( )
[CALL] lib/pydoc_generator (create_pydocs)[307] -> lib/pydoc_generator (generate_pydoc)[92]
{"project_path":"/Users/emvaldes/.repos/devops/workflows","file_path":"/Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/file_utils/test_file_utils.py","docs_path":"/Users/emvaldes/.repos/devops/workflows/docs/pydoc/tests/appflow_tracer/tracing/file_utils","configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[129] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/file_utils/test_file_utils.py...","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Generating documentation for /Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/file_utils/test_file_utils.py...","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a067d90>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Generating documentation for /Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/file_utils/test_file_utils.py...
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a067d90>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Generating documentation for /Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/file_utils/test_file_utils.py...
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Original Relative Path: {relative_file_path}") )
[CALL] lib/pydoc_generator (generate_pydoc)[145] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Original Relative Path: tests/appflow_tracer/tracing/file_utils/test_file_utils.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Original Relative Path: tests/appflow_tracer/tracing/file_utils/test_file_utils.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( print(f"Sanitized Module Path: {module_name}") )
[CALL] lib/pydoc_generator (generate_pydoc)[146] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Sanitized Module Path: tests.appflow_tracer.tracing.file_utils.test_file_utils
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Sanitized Module Path: tests.appflow_tracer.tracing.file_utils.test_file_utils
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[148] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Relative File Path: tests/appflow_tracer/tracing/file_utils/test_file_utils.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Relative File Path: tests/appflow_tracer/tracing/file_utils/test_file_utils.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a067d90>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Relative File Path: tests/appflow_tracer/tracing/file_utils/test_file_utils.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a067d90>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Relative File Path: tests/appflow_tracer/tracing/file_utils/test_file_utils.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> bool: False
[CALL] lib/pydoc_generator ( is_script=any(part.startswith('.')for part in relative_file_path.parts) )
[CALL] lib/pydoc_generator (generate_pydoc)[161] -> lib/pydoc_generator (<genexpr>)[161]
{".0":"<tuple_iterator object at 0x10a457b50>"}
[RETURN] lib/pydoc_generator[161] ( is_script=any(part.startswith('.')for part in relative_file_path.parts) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[171] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Running PyDoc Command: python -m pydoc tests.appflow_tracer.tracing.file_utils.test_file_utils","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Running PyDoc Command: python -m pydoc tests.appflow_tracer.tracing.file_utils.test_file_utils","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a5ac6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Running PyDoc Command: python -m pydoc tests.appflow_tracer.tracing.file_utils.test_file_utils
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a5ac6d0>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Running PyDoc Command: python -m pydoc tests.appflow_tracer.tracing.file_utils.test_file_utils
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[191]
{"match":"<re.Match object; span=(5661, 5700), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[191] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ ( return _compile(pattern,flags).sub(repl,string,count) )
[CALL] /usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/re/__init__ (sub)[208] -> lib/pydoc_generator (<lambda>)[191]
{"match":"<re.Match object; span=(5732, 5771), match='/Users/emvaldes/.repos/devops/workflows'>"}
[RETURN] lib/pydoc_generator[191] ( lambda match:"<project-location>"if match.group(0)==str(project_path)else"<user-home>", ) -> str:
<project-location>
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[200] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/tests/appflow_tracer/tracing/file_utils/test_file_utils.pydoc","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/tests/appflow_tracer/tracing/file_utils/test_file_utils.pydoc","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/tests/appflow_tracer/tracing/file_utils/test_file_utils.pydoc
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Documentation saved to /Users/emvaldes/.repos/devops/workflows/docs/pydoc/tests/appflow_tracer/tracing/file_utils/test_file_utils.pydoc
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] lib/pydoc_generator ( log_utils.log_message( )
[CALL] lib/pydoc_generator (generate_pydoc)[251] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/file_utils/test_file_utils.py","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Finished processing /Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/file_utils/test_file_utils.py","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Finished processing /Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/file_utils/test_file_utils.py
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a1ae200>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Finished processing /Users/emvaldes/.repos/devops/workflows/tests/appflow_tracer/tracing/file_utils/test_file_utils.py
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[RETURN] lib/pydoc_generator[251] ( log_utils.log_message( ) -> NoneType: None
[RETURN] lib/pydoc_generator[294] ( for file_path in files_list: ) -> NoneType: None
[CALL] run ( log_utils.log_message( )
[CALL] run (main)[247] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"Documentation generation completed successfully.","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"Documentation generation completed successfully.","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
Documentation generation completed successfully.
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a217910>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
Documentation generation completed successfully.
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
[CALL] run ( log_utils.log_message( )
[CALL] run (main)[265] -> packages/appflow_tracer/lib/log_utils (log_message)[88]
{"message":"No flags provided. Use --pydoc to generate documentation or --target to run a Package/Module or Script.","log_category":"DEBUG","json_data":null,"serialize_json":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}},"handler":null}
[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message,log_category,json_data or False,configs) )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[151] -> packages/appflow_tracer/lib/log_utils (output_console)[199]
{"message":"No flags provided. Use --pydoc to generate documentation or --target to run a Package/Module or Script.","log_category":"DEBUG","json_data":false,"configs":{"colors":{"CALL":"\u001b[92m","CRITICAL":"\u001b[41m","DEBUG":"\u001b[96m","ERROR":"\u001b[31m","IMPORT":"\u001b[94m","INFO":"\u001b[97m","RETURN":"\u001b[93m","WARNING":"\u001b[91m","RESET":"\u001b[0m"},"logging":{"enable":true,"max_logfiles":5,"package_name":".","module_name":"run","logs_dirname":"logs","log_filename":"logs/run_20250303210618.log"},"tracing":{"enable":true,"json":{"compressed":true}},"events":{"call":true,"critical":false,"debug":true,"error":true,"import":false,"info":false,"return":true,"warning":false},"stats":{"created":"2025-03-03T18:10:45.863523+00:00","updated":"2025-03-04T04:06:18.577225+00:00"}}}
[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message) )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[241] -> packages/appflow_tracer/tracing (<lambda>)[236]
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a067d90>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> str:
No flags provided. Use --pydoc to generate documentation or --target to run a Package/Module or Script.
[CALL] packages/appflow_tracer/tracing ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[236] -> packages/appflow_tracer/tracing (<genexpr>)[236]
{".0":"<tuple_iterator object at 0x10a067d90>"}
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
No flags provided. Use --pydoc to generate documentation or --target to run a Package/Module or Script.
[RETURN] packages/appflow_tracer/tracing[236] ( builtins.print=lambda*args,**kwargs:logger.info(" ".join(str(arg)for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[242] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[151] ( output_console(message,log_category,json_data or False,configs) ) -> NoneType: None
./docs/
└── pydoc/
    ├── .github/
    │   └── scripts/
    │       ├── extract_pytest_functions.pydoc
    │       └── extract_pytest_resources.pydoc
    ├── lib/
    │   ├── __init__.pydoc
    │   ├── accesstoken_expiration.pydoc
    │   ├── argument_parser.pydoc
    │   ├── configure_params.pydoc
    │   ├── manage_accesstoken.pydoc
    │   ├── parsing_userinput.pydoc
    │   ├── pkgconfig_loader.pydoc
    │   ├── pydoc_generator.pydoc
    │   ├── system_params.pydoc
    │   ├── system_variables.pydoc
    │   └── timezone_localoffset.pydoc
    ├── packages/
    │   ├── __init__.pydoc
    │   ├── appflow_tracer/
    │   │   ├── __init__.pydoc
    │   │   ├── __main__.pydoc
    │   │   ├── lib/
    │   │   │   ├── __init__.pydoc
    │   │   │   ├── file_utils.pydoc
    │   │   │   ├── log_utils.pydoc
    │   │   │   ├── serialize_utils.pydoc
    │   │   │   └── trace_utils.pydoc
    │   │   ├── tracing--legacy.pydoc
    │   │   └── tracing.pydoc
    │   └── requirements/
    │       ├── __init__.pydoc
    │       ├── __main__.pydoc
    │       └── dependencies.pydoc
    ├── run.pydoc
    ├── scripts/
    │   ├── __init__.pydoc
    │   └── testing.pydoc
    └── tests/
        ├── appflow_tracer/
        │   └── tracing/
        │       ├── file_utils/
        │       │   └── test_file_utils.pydoc
        │       ├── log_utils/
        │       │   └── test_log_utils.pydoc
        │       ├── serialize_utils/
        │       │   └── test_serialize_utils.pydoc
        │       ├── test_tracing.pydoc
        │       └── trace_utils/
        │           └── test_trace_utils.pydoc
        ├── requirements/
        │   └── dependencies/
        │       └── test_dependencies.pydoc
        ├── test_pydoc_generator.pydoc
        └── test_run.pydoc

19 directories, 37 files
